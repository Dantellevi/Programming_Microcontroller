

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue May 08 15:29:47 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 1.45
    21                           ; Generated 16/11/2017 GMT
    22                           ; 
    23                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  010F                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  000E                     	;# 
   128  000F                     	;# 
   129  0010                     	;# 
   130  0011                     	;# 
   131  0012                     	;# 
   132  0013                     	;# 
   133  0014                     	;# 
   134  0015                     	;# 
   135  0015                     	;# 
   136  0016                     	;# 
   137  0017                     	;# 
   138  0018                     	;# 
   139  0019                     	;# 
   140  001A                     	;# 
   141  001B                     	;# 
   142  001B                     	;# 
   143  001C                     	;# 
   144  001D                     	;# 
   145  001E                     	;# 
   146  001F                     	;# 
   147  0081                     	;# 
   148  0085                     	;# 
   149  0086                     	;# 
   150  0087                     	;# 
   151  0088                     	;# 
   152  0089                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  0091                     	;# 
   157  0092                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0098                     	;# 
   161  0099                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170                           
   171                           	psect	strings
   172  0003                     __pstrings:	
   173  0003                     stringtab:	
   174  0003                     __stringtab:	
   175  0003                     stringcode:	
   176                           ;	String table - string pointers are 1 byte each
   177                           
   178  0003                     stringdir:	
   179  0003  3000               	movlw	high stringdir
   180  0004  008A               	movwf	10
   181  0005  0804               	movf	4,w
   182  0006  0A84               	incf	4,f
   183  0007  0782               	addwf	2,f
   184  0008                     __stringbase:	
   185  0008  3400               	retlw	0
   186  0009                     __end_of__stringtab:	
   187  0009                     _MyChar5x8:	
   188  0009  3407               	retlw	7
   189  000A  3400               	retlw	0
   190  000B  340F               	retlw	15
   191  000C  3400               	retlw	0
   192  000D  3410               	retlw	16
   193  000E  3400               	retlw	0
   194  000F  3410               	retlw	16
   195  0010  3400               	retlw	0
   196  0011  3410               	retlw	16
   197  0012  3400               	retlw	0
   198  0013  3410               	retlw	16
   199  0014  3400               	retlw	0
   200  0015  340F               	retlw	15
   201  0016  3400               	retlw	0
   202  0017  3400               	retlw	0
   203  0018  3400               	retlw	0
   204  0019  340E               	retlw	14
   205  001A  3400               	retlw	0
   206  001B  341B               	retlw	27
   207  001C  3400               	retlw	0
   208  001D  3411               	retlw	17
   209  001E  3400               	retlw	0
   210  001F  3411               	retlw	17
   211  0020  3400               	retlw	0
   212  0021  3411               	retlw	17
   213  0022  3400               	retlw	0
   214  0023  3411               	retlw	17
   215  0024  3400               	retlw	0
   216  0025  341F               	retlw	31
   217  0026  3400               	retlw	0
   218  0027  3400               	retlw	0
   219  0028  3400               	retlw	0
   220  0029  340E               	retlw	14
   221  002A  3400               	retlw	0
   222  002B  341B               	retlw	27
   223  002C  3400               	retlw	0
   224  002D  3411               	retlw	17
   225  002E  3400               	retlw	0
   226  002F  3411               	retlw	17
   227  0030  3400               	retlw	0
   228  0031  3411               	retlw	17
   229  0032  3400               	retlw	0
   230  0033  341F               	retlw	31
   231  0034  3400               	retlw	0
   232  0035  341F               	retlw	31
   233  0036  3400               	retlw	0
   234  0037  3400               	retlw	0
   235  0038  3400               	retlw	0
   236  0039  340E               	retlw	14
   237  003A  3400               	retlw	0
   238  003B  341B               	retlw	27
   239  003C  3400               	retlw	0
   240  003D  3411               	retlw	17
   241  003E  3400               	retlw	0
   242  003F  3411               	retlw	17
   243  0040  3400               	retlw	0
   244  0041  341F               	retlw	31
   245  0042  3400               	retlw	0
   246  0043  341F               	retlw	31
   247  0044  3400               	retlw	0
   248  0045  341F               	retlw	31
   249  0046  3400               	retlw	0
   250  0047  3400               	retlw	0
   251  0048  3400               	retlw	0
   252  0049  340E               	retlw	14
   253  004A  3400               	retlw	0
   254  004B  341B               	retlw	27
   255  004C  3400               	retlw	0
   256  004D  3411               	retlw	17
   257  004E  3400               	retlw	0
   258  004F  341F               	retlw	31
   259  0050  3400               	retlw	0
   260  0051  341F               	retlw	31
   261  0052  3400               	retlw	0
   262  0053  341F               	retlw	31
   263  0054  3400               	retlw	0
   264  0055  341F               	retlw	31
   265  0056  3400               	retlw	0
   266  0057  3400               	retlw	0
   267  0058  3400               	retlw	0
   268  0059  340E               	retlw	14
   269  005A  3400               	retlw	0
   270  005B  341F               	retlw	31
   271  005C  3400               	retlw	0
   272  005D  341F               	retlw	31
   273  005E  3400               	retlw	0
   274  005F  341F               	retlw	31
   275  0060  3400               	retlw	0
   276  0061  341F               	retlw	31
   277  0062  3400               	retlw	0
   278  0063  341F               	retlw	31
   279  0064  3400               	retlw	0
   280  0065  341F               	retlw	31
   281  0066  3400               	retlw	0
   282  0067  3400               	retlw	0
   283  0068  3400               	retlw	0
   284  0069  3400               	retlw	0
   285  006A  3400               	retlw	0
   286  006B  3404               	retlw	4
   287  006C  3400               	retlw	0
   288  006D  3402               	retlw	2
   289  006E  3400               	retlw	0
   290  006F  341F               	retlw	31
   291  0070  3400               	retlw	0
   292  0071  3402               	retlw	2
   293  0072  3400               	retlw	0
   294  0073  3404               	retlw	4
   295  0074  3400               	retlw	0
   296  0075  3400               	retlw	0
   297  0076  3400               	retlw	0
   298  0077  3400               	retlw	0
   299  0078  3400               	retlw	0
   300  0079  3400               	retlw	0
   301  007A  3400               	retlw	0
   302  007B  3400               	retlw	0
   303  007C  3400               	retlw	0
   304  007D  340E               	retlw	14
   305  007E  3400               	retlw	0
   306  007F  3411               	retlw	17
   307  0080  3400               	retlw	0
   308  0081  3411               	retlw	17
   309  0082  3400               	retlw	0
   310  0083  340A               	retlw	10
   311  0084  3400               	retlw	0
   312  0085  341B               	retlw	27
   313  0086  3400               	retlw	0
   314  0087  3400               	retlw	0
   315  0088  3400               	retlw	0
   316  0089                     __end_of_MyChar5x8:	
   317  0006                     _PORTBbits	set	6
   318  0432                     _TRISB2	set	1074
   319  0431                     _TRISB1	set	1073
   320  0430                     _TRISB0	set	1072
   321  0437                     _TRISB7	set	1079
   322  0436                     _TRISB6	set	1078
   323  0435                     _TRISB5	set	1077
   324  0434                     _TRISB4	set	1076
   325  0089                     STR_1:	
   326  0089  3448               	retlw	72	;'H'
   327  008A  3465               	retlw	101	;'e'
   328  008B  346C               	retlw	108	;'l'
   329  008C  346C               	retlw	108	;'l'
   330  008D  346F               	retlw	111	;'o'
   331  008E  3400               	retlw	0
   332                           
   333                           	psect	cinit
   334  07FC                     start_initialization:	
   335                           ; #config settings
   336                           
   337  07FC                     __initialization:	
   338  07FC                     end_of_initialization:	
   339                           ;End of C runtime variable initialization code
   340                           
   341  07FC                     __end_of__initialization:	
   342  07FC  0183               	clrf	3
   343  07FD  120A  118A  2E7F   	ljmp	_main	;jump to C main() function
   344                           
   345                           	psect	cstackCOMMON
   346  0070                     __pcstackCOMMON:	
   347  0070                     ?_LCD_Init:	
   348  0070                     ?_Lcd_Clear:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ?_InitCustomeChars:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ?_Lcd_Print_char:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ?_main:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ?_LCD_SendData:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     ??_LCD_SendData:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0070                     ?_LCD_SendCommand:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0070                     ?_Lcd_PrintString:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     LCD_SendData@data:	
   373                           ; 1 bytes @ 0x0
   374                           
   375                           
   376                           ; 1 bytes @ 0x0
   377  0070                     	ds	1
   378  0071                     ??_Lcd_Print_char:	
   379  0071                     ??_LCD_SendCommand:	
   380                           ; 1 bytes @ 0x1
   381                           
   382                           
   383                           ; 1 bytes @ 0x1
   384  0071                     	ds	2
   385  0073                     LCD_SendCommand@com:	
   386  0073                     Lcd_Print_char@data:	
   387                           ; 1 bytes @ 0x3
   388                           
   389                           
   390                           ; 1 bytes @ 0x3
   391  0073                     	ds	1
   392  0074                     ??_LCD_Init:	
   393  0074                     ??_Lcd_Clear:	
   394                           ; 1 bytes @ 0x4
   395                           
   396  0074                     ??_InitCustomeChars:	
   397                           ; 1 bytes @ 0x4
   398                           
   399  0074                     ?_lcd_gotoxy:	
   400                           ; 1 bytes @ 0x4
   401                           
   402  0074                     ??_Lcd_PrintString:	
   403                           ; 1 bytes @ 0x4
   404                           
   405  0074                     lcd_gotoxy@y:	
   406                           ; 1 bytes @ 0x4
   407                           
   408                           
   409                           ; 1 bytes @ 0x4
   410  0074                     	ds	1
   411  0075                     ??_lcd_gotoxy:	
   412  0075                     Lcd_PrintString@str:	
   413                           ; 1 bytes @ 0x5
   414                           
   415  0075                     InitCustomeChars@i:	
   416                           ; 1 bytes @ 0x5
   417                           
   418                           
   419                           ; 1 bytes @ 0x5
   420  0075                     	ds	1
   421  0076                     lcd_gotoxy@x:	
   422                           
   423                           ; 1 bytes @ 0x6
   424  0076                     	ds	1
   425  0077                     lcd_gotoxy@temp:	
   426                           
   427                           ; 1 bytes @ 0x7
   428  0077                     	ds	1
   429  0078                     ?_LCD_printStringXY:	
   430  0078                     LCD_printStringXY@x:	
   431                           ; 1 bytes @ 0x8
   432                           
   433                           
   434                           ; 1 bytes @ 0x8
   435  0078                     	ds	1
   436  0079                     LCD_printStringXY@y:	
   437                           
   438                           ; 1 bytes @ 0x9
   439  0079                     	ds	1
   440  007A                     ??_LCD_printStringXY:	
   441                           
   442                           ; 1 bytes @ 0xA
   443  007A                     	ds	1
   444  007B                     LCD_printStringXY@str:	
   445                           
   446                           ; 1 bytes @ 0xB
   447  007B                     	ds	1
   448                           
   449                           	psect	cstackBANK0
   450  0020                     __pcstackBANK0:	
   451  0020                     ??_main:	
   452                           
   453                           ; 1 bytes @ 0x0
   454  0020                     	ds	3
   455                           
   456                           	psect	maintext
   457  067F                     __pmaintext:	
   458 ;;
   459 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   460 ;;
   461 ;; *************** function _main *****************
   462 ;; Defined at:
   463 ;;		line 15 in file "main.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;		None
   466 ;; Auto vars:     Size  Location     Type
   467 ;;		None
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   472 ;; Tracked objects:
   473 ;;		On entry : B00/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   477 ;;      Params:         0       0       0       0       0
   478 ;;      Locals:         0       0       0       0       0
   479 ;;      Temps:          0       3       0       0       0
   480 ;;      Totals:         0       3       0       0       0
   481 ;;Total ram usage:        3 bytes
   482 ;; Hardware stack levels required when called:    4
   483 ;; This function calls:
   484 ;;		_InitCustomeChars
   485 ;;		_LCD_Init
   486 ;;		_LCD_printStringXY
   487 ;;		_Lcd_Clear
   488 ;;		_Lcd_Print_char
   489 ;;		_lcd_gotoxy
   490 ;; This function is called by:
   491 ;;		Startup code after reset
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495                           
   496                           ;psect for function _main
   497  067F                     _main:	
   498                           
   499                           ;main.c: 17: LCD_Init();
   500                           
   501                           ;incstack = 0
   502                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   503  067F  120A  118A  26EA  120A  118A  	fcall	_LCD_Init
   504                           
   505                           ;main.c: 18: Lcd_Clear();
   506  0684  120A  118A  25B8  120A  118A  	fcall	_Lcd_Clear
   507                           
   508                           ;main.c: 21: InitCustomeChars();
   509  0689  120A  118A  264C  120A  118A  	fcall	_InitCustomeChars
   510  068E                     l770:	
   511                           ;main.c: 22: while(1)
   512                           
   513                           
   514                           ;main.c: 23: {
   515                           ;main.c: 24: Lcd_Clear();
   516  068E  120A  118A  25B8  120A  118A  	fcall	_Lcd_Clear
   517                           
   518                           ;main.c: 25: lcd_gotoxy(1,1);
   519  0693  01F4               	clrf	lcd_gotoxy@y
   520  0694  0AF4               	incf	lcd_gotoxy@y,f
   521  0695  3001               	movlw	1
   522  0696  120A  118A  2773  120A  118A  	fcall	_lcd_gotoxy
   523                           
   524                           ;main.c: 26: Lcd_Print_char(0);
   525  069B  3000               	movlw	0
   526  069C  120A  118A  2621  120A  118A  	fcall	_Lcd_Print_char
   527                           
   528                           ;main.c: 27: Lcd_Print_char(1);
   529  06A1  3001               	movlw	1
   530  06A2  120A  118A  2621  120A  118A  	fcall	_Lcd_Print_char
   531                           
   532                           ;main.c: 28: Lcd_Print_char(2);
   533  06A7  3002               	movlw	2
   534  06A8  120A  118A  2621  120A  118A  	fcall	_Lcd_Print_char
   535                           
   536                           ;main.c: 29: Lcd_Print_char(3);
   537  06AD  3003               	movlw	3
   538  06AE  120A  118A  2621  120A  118A  	fcall	_Lcd_Print_char
   539                           
   540                           ;main.c: 30: Lcd_Print_char(4);
   541  06B3  3004               	movlw	4
   542  06B4  120A  118A  2621  120A  118A  	fcall	_Lcd_Print_char
   543                           
   544                           ;main.c: 31: Lcd_Print_char(5);
   545  06B9  3005               	movlw	5
   546  06BA  120A  118A  2621  120A  118A  	fcall	_Lcd_Print_char
   547                           
   548                           ;main.c: 32: Lcd_Print_char(6);
   549  06BF  3006               	movlw	6
   550  06C0  120A  118A  2621  120A  118A  	fcall	_Lcd_Print_char
   551                           
   552                           ;main.c: 33: Lcd_Print_char(7);
   553  06C5  3007               	movlw	7
   554  06C6  120A  118A  2621  120A  118A  	fcall	_Lcd_Print_char
   555                           
   556                           ;main.c: 34: LCD_printStringXY("Hello",2,2);
   557  06CB  3002               	movlw	2
   558  06CC  1283               	bcf	3,5	;RP0=0, select bank0
   559  06CD  1303               	bcf	3,6	;RP1=0, select bank0
   560  06CE  00A0               	movwf	??_main
   561  06CF  0820               	movf	??_main,w
   562  06D0  00F8               	movwf	LCD_printStringXY@x
   563  06D1  3002               	movlw	2
   564  06D2  00A1               	movwf	??_main+1
   565  06D3  0821               	movf	??_main+1,w
   566  06D4  00F9               	movwf	LCD_printStringXY@y
   567  06D5  3081               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   568  06D6  120A  118A  25C3  120A  118A  	fcall	_LCD_printStringXY
   569                           
   570                           ;main.c: 35: _delay((unsigned long)((1000)*(8000000/4000.0)));
   571  06DB  300B               	movlw	11
   572  06DC  1283               	bcf	3,5	;RP0=0, select bank0
   573  06DD  1303               	bcf	3,6	;RP1=0, select bank0
   574  06DE  00A2               	movwf	??_main+2
   575  06DF  3026               	movlw	38
   576  06E0  00A1               	movwf	??_main+1
   577  06E1  305D               	movlw	93
   578  06E2  00A0               	movwf	??_main
   579  06E3                     u247:	
   580  06E3  0BA0               	decfsz	??_main,f
   581  06E4  2EE3               	goto	u247
   582  06E5  0BA1               	decfsz	??_main+1,f
   583  06E6  2EE3               	goto	u247
   584  06E7  0BA2               	decfsz	??_main+2,f
   585  06E8  2EE3               	goto	u247
   586  06E9  2E8E               	goto	l770
   587  06EA                     __end_of_main:	
   588                           
   589                           	psect	text1
   590  05B8                     __ptext1:	
   591 ;; *************** function _Lcd_Clear *****************
   592 ;; Defined at:
   593 ;;		line 137 in file "LCD.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;		None
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		wreg, status,2, status,0, pclath, cstack
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   607 ;;      Params:         0       0       0       0       0
   608 ;;      Locals:         0       0       0       0       0
   609 ;;      Temps:          0       0       0       0       0
   610 ;;      Totals:         0       0       0       0       0
   611 ;;Total ram usage:        0 bytes
   612 ;; Hardware stack levels used:    1
   613 ;; Hardware stack levels required when called:    2
   614 ;; This function calls:
   615 ;;		_LCD_SendCommand
   616 ;; This function is called by:
   617 ;;		_main
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           
   622                           ;psect for function _Lcd_Clear
   623  05B8                     _Lcd_Clear:	
   624                           
   625                           ;LCD.c: 139: LCD_SendCommand(0x00);
   626                           
   627                           ;incstack = 0
   628                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
   629  05B8  3000               	movlw	0
   630  05B9  120A  118A  25D3  120A  118A  	fcall	_LCD_SendCommand
   631                           
   632                           ;LCD.c: 140: LCD_SendCommand(0x01);
   633  05BE  3001               	movlw	1
   634  05BF  120A  118A  25D3   	fcall	_LCD_SendCommand
   635  05C2  0008               	return
   636  05C3                     __end_of_Lcd_Clear:	
   637                           
   638                           	psect	text2
   639  05C3                     __ptext2:	
   640 ;; *************** function _LCD_printStringXY *****************
   641 ;; Defined at:
   642 ;;		line 195 in file "LCD.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;  str             1    wreg     PTR unsigned char 
   645 ;;		 -> STR_1(6), 
   646 ;;  x               1    8[COMMON] unsigned char 
   647 ;;  y               1    9[COMMON] unsigned char 
   648 ;; Auto vars:     Size  Location     Type
   649 ;;  str             1   11[COMMON] PTR unsigned char 
   650 ;;		 -> STR_1(6), 
   651 ;; Return value:  Size  Location     Type
   652 ;;                  1    wreg      void 
   653 ;; Registers used:
   654 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   660 ;;      Params:         2       0       0       0       0
   661 ;;      Locals:         1       0       0       0       0
   662 ;;      Temps:          1       0       0       0       0
   663 ;;      Totals:         4       0       0       0       0
   664 ;;Total ram usage:        4 bytes
   665 ;; Hardware stack levels used:    1
   666 ;; Hardware stack levels required when called:    3
   667 ;; This function calls:
   668 ;;		_Lcd_PrintString
   669 ;;		_lcd_gotoxy
   670 ;; This function is called by:
   671 ;;		_main
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           
   676                           ;psect for function _LCD_printStringXY
   677  05C3                     _LCD_printStringXY:	
   678                           
   679                           ;incstack = 0
   680                           ; Regs used in _LCD_printStringXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   681                           ;LCD_printStringXY@str stored from wreg
   682  05C3  00FB               	movwf	LCD_printStringXY@str
   683                           
   684                           ;LCD.c: 197: lcd_gotoxy(x,y);
   685  05C4  0879               	movf	LCD_printStringXY@y,w
   686  05C5  00FA               	movwf	??_LCD_printStringXY
   687  05C6  087A               	movf	??_LCD_printStringXY,w
   688  05C7  00F4               	movwf	lcd_gotoxy@y
   689  05C8  0878               	movf	LCD_printStringXY@x,w
   690  05C9  120A  118A  2773  120A  118A  	fcall	_lcd_gotoxy
   691                           
   692                           ;LCD.c: 198: Lcd_PrintString(str);
   693  05CE  087B               	movf	LCD_printStringXY@str,w
   694  05CF  120A  118A  2605   	fcall	_Lcd_PrintString
   695  05D2  0008               	return
   696  05D3                     __end_of_LCD_printStringXY:	
   697                           
   698                           	psect	text3
   699  0773                     __ptext3:	
   700 ;; *************** function _lcd_gotoxy *****************
   701 ;; Defined at:
   702 ;;		line 147 in file "LCD.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;  x               1    wreg     unsigned char 
   705 ;;  y               1    4[COMMON] unsigned char 
   706 ;; Auto vars:     Size  Location     Type
   707 ;;  x               1    6[COMMON] unsigned char 
   708 ;;  temp            1    7[COMMON] unsigned char 
   709 ;; Return value:  Size  Location     Type
   710 ;;                  1    wreg      void 
   711 ;; Registers used:
   712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   713 ;; Tracked objects:
   714 ;;		On entry : 0/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   718 ;;      Params:         1       0       0       0       0
   719 ;;      Locals:         2       0       0       0       0
   720 ;;      Temps:          1       0       0       0       0
   721 ;;      Totals:         4       0       0       0       0
   722 ;;Total ram usage:        4 bytes
   723 ;; Hardware stack levels used:    1
   724 ;; Hardware stack levels required when called:    2
   725 ;; This function calls:
   726 ;;		_LCD_SendCommand
   727 ;; This function is called by:
   728 ;;		_main
   729 ;;		_LCD_printStringXY
   730 ;; This function uses a non-reentrant model
   731 ;;
   732                           
   733                           
   734                           ;psect for function _lcd_gotoxy
   735  0773                     _lcd_gotoxy:	
   736                           
   737                           ;incstack = 0
   738                           ; Regs used in _lcd_gotoxy: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   739                           ;lcd_gotoxy@x stored from wreg
   740  0773  00F6               	movwf	lcd_gotoxy@x
   741                           
   742                           ;LCD.c: 149: if(x > 39) x = 39;
   743  0774  3028               	movlw	40
   744  0775  0276               	subwf	lcd_gotoxy@x,w
   745  0776  1C03               	skipc
   746  0777  2F7C               	goto	l704
   747  0778  3027               	movlw	39
   748  0779  00F5               	movwf	??_lcd_gotoxy
   749  077A  0875               	movf	??_lcd_gotoxy,w
   750  077B  00F6               	movwf	lcd_gotoxy@x
   751  077C                     l704:	
   752                           ;LCD.c: 150: if(x < 0) x = 0;
   753                           
   754                           
   755                           ;LCD.c: 151: if(y > 3) y = 3;
   756  077C  3004               	movlw	4
   757  077D  0274               	subwf	lcd_gotoxy@y,w
   758  077E  1C03               	skipc
   759  077F  2F84               	goto	l79
   760  0780  3003               	movlw	3
   761  0781  00F5               	movwf	??_lcd_gotoxy
   762  0782  0875               	movf	??_lcd_gotoxy,w
   763  0783  00F4               	movwf	lcd_gotoxy@y
   764  0784                     l79:	
   765                           ;LCD.c: 152: if(y < 0) y = 0;
   766                           
   767                           
   768                           ;LCD.c: 154: char temp = 0x00;
   769  0784  01F7               	clrf	lcd_gotoxy@temp
   770                           
   771                           ;LCD.c: 156: PORTBbits.RB0=0;
   772  0785  1283               	bcf	3,5	;RP0=0, select bank0
   773  0786  1303               	bcf	3,6	;RP1=0, select bank0
   774  0787  1006               	bcf	6,0	;volatile
   775                           
   776                           ;LCD.c: 158: switch (y)
   777  0788  2FED               	goto	l738
   778  0789                     l712:	
   779                           ;LCD.c: 159: {
   780                           ;LCD.c: 160: case 0:
   781                           
   782                           
   783                           ;LCD.c: 161: {
   784                           ;LCD.c: 162: temp |= (0x80 + x);
   785  0789  0876               	movf	lcd_gotoxy@x,w
   786  078A  3E80               	addlw	128
   787  078B  00F5               	movwf	??_lcd_gotoxy
   788  078C  0875               	movf	??_lcd_gotoxy,w
   789  078D  04F7               	iorwf	lcd_gotoxy@temp,f
   790                           
   791                           ;LCD.c: 163: LCD_SendCommand(temp >> 4);
   792  078E  0877               	movf	lcd_gotoxy@temp,w
   793  078F  00F5               	movwf	??_lcd_gotoxy
   794  0790  3004               	movlw	4
   795  0791                     u175:	
   796  0791  1003               	clrc
   797  0792  0CF5               	rrf	??_lcd_gotoxy,f
   798  0793  3EFF               	addlw	-1
   799  0794  1D03               	skipz
   800  0795  2F91               	goto	u175
   801  0796  0875               	movf	??_lcd_gotoxy,w
   802  0797  120A  118A  25D3  120A  118A  	fcall	_LCD_SendCommand
   803                           
   804                           ;LCD.c: 164: LCD_SendCommand(temp & 0x0F);
   805  079C  0877               	movf	lcd_gotoxy@temp,w
   806  079D  390F               	andlw	15
   807  079E  120A  118A  25D3   	fcall	_LCD_SendCommand
   808                           
   809                           ;LCD.c: 165: break;
   810  07A1  0008               	return
   811  07A2                     l718:	
   812                           ;LCD.c: 166: }
   813                           ;LCD.c: 167: case 1:
   814                           
   815                           
   816                           ;LCD.c: 168: {
   817                           ;LCD.c: 169: temp |= (0xC0 + x);
   818  07A2  0876               	movf	lcd_gotoxy@x,w
   819  07A3  3EC0               	addlw	192
   820  07A4  00F5               	movwf	??_lcd_gotoxy
   821  07A5  0875               	movf	??_lcd_gotoxy,w
   822  07A6  04F7               	iorwf	lcd_gotoxy@temp,f
   823                           
   824                           ;LCD.c: 170: LCD_SendCommand(temp >> 4);
   825  07A7  0877               	movf	lcd_gotoxy@temp,w
   826  07A8  00F5               	movwf	??_lcd_gotoxy
   827  07A9  3004               	movlw	4
   828  07AA                     u185:	
   829  07AA  1003               	clrc
   830  07AB  0CF5               	rrf	??_lcd_gotoxy,f
   831  07AC  3EFF               	addlw	-1
   832  07AD  1D03               	skipz
   833  07AE  2FAA               	goto	u185
   834  07AF  0875               	movf	??_lcd_gotoxy,w
   835  07B0  120A  118A  25D3  120A  118A  	fcall	_LCD_SendCommand
   836                           
   837                           ;LCD.c: 171: LCD_SendCommand(temp & 0x0F);
   838  07B5  0877               	movf	lcd_gotoxy@temp,w
   839  07B6  390F               	andlw	15
   840  07B7  120A  118A  25D3   	fcall	_LCD_SendCommand
   841                           
   842                           ;LCD.c: 172: break;
   843  07BA  0008               	return
   844  07BB                     l724:	
   845                           ;LCD.c: 173: }
   846                           ;LCD.c: 174: case 2:
   847                           
   848                           
   849                           ;LCD.c: 175: {
   850                           ;LCD.c: 176: temp |= (0x94 + x);
   851  07BB  0876               	movf	lcd_gotoxy@x,w
   852  07BC  3E94               	addlw	148
   853  07BD  00F5               	movwf	??_lcd_gotoxy
   854  07BE  0875               	movf	??_lcd_gotoxy,w
   855  07BF  04F7               	iorwf	lcd_gotoxy@temp,f
   856                           
   857                           ;LCD.c: 177: LCD_SendCommand(temp >> 4);
   858  07C0  0877               	movf	lcd_gotoxy@temp,w
   859  07C1  00F5               	movwf	??_lcd_gotoxy
   860  07C2  3004               	movlw	4
   861  07C3                     u195:	
   862  07C3  1003               	clrc
   863  07C4  0CF5               	rrf	??_lcd_gotoxy,f
   864  07C5  3EFF               	addlw	-1
   865  07C6  1D03               	skipz
   866  07C7  2FC3               	goto	u195
   867  07C8  0875               	movf	??_lcd_gotoxy,w
   868  07C9  120A  118A  25D3  120A  118A  	fcall	_LCD_SendCommand
   869                           
   870                           ;LCD.c: 178: LCD_SendCommand(temp & 0x0F);
   871  07CE  0877               	movf	lcd_gotoxy@temp,w
   872  07CF  390F               	andlw	15
   873  07D0  120A  118A  25D3   	fcall	_LCD_SendCommand
   874                           
   875                           ;LCD.c: 179: break;
   876  07D3  0008               	return
   877  07D4                     l730:	
   878                           ;LCD.c: 180: }
   879                           ;LCD.c: 181: case 3:
   880                           
   881                           
   882                           ;LCD.c: 182: {
   883                           ;LCD.c: 183: temp |= (0xD4 + x);
   884  07D4  0876               	movf	lcd_gotoxy@x,w
   885  07D5  3ED4               	addlw	212
   886  07D6  00F5               	movwf	??_lcd_gotoxy
   887  07D7  0875               	movf	??_lcd_gotoxy,w
   888  07D8  04F7               	iorwf	lcd_gotoxy@temp,f
   889                           
   890                           ;LCD.c: 184: LCD_SendCommand(temp >> 4);
   891  07D9  0877               	movf	lcd_gotoxy@temp,w
   892  07DA  00F5               	movwf	??_lcd_gotoxy
   893  07DB  3004               	movlw	4
   894  07DC                     u205:	
   895  07DC  1003               	clrc
   896  07DD  0CF5               	rrf	??_lcd_gotoxy,f
   897  07DE  3EFF               	addlw	-1
   898  07DF  1D03               	skipz
   899  07E0  2FDC               	goto	u205
   900  07E1  0875               	movf	??_lcd_gotoxy,w
   901  07E2  120A  118A  25D3  120A  118A  	fcall	_LCD_SendCommand
   902                           
   903                           ;LCD.c: 185: LCD_SendCommand(temp & 0x0F);
   904  07E7  0877               	movf	lcd_gotoxy@temp,w
   905  07E8  390F               	andlw	15
   906  07E9  120A  118A  25D3   	fcall	_LCD_SendCommand
   907                           
   908                           ;LCD.c: 187: }
   909                           ;LCD.c: 188: }
   910                           
   911                           ;LCD.c: 186: break;
   912  07EC  0008               	return
   913  07ED                     l738:	
   914  07ED  0874               	movf	lcd_gotoxy@y,w
   915                           
   916                           ; Switch size 1, requested type "space"
   917                           ; Number of cases is 4, Range of values is 0 to 3
   918                           ; switch strategies available:
   919                           ; Name         Instructions Cycles
   920                           ; simple_byte           13     7 (average)
   921                           ; direct_byte           20     8 (fixed)
   922                           ; jumptable            260     6 (fixed)
   923                           ;	Chosen strategy is simple_byte
   924  07EE  3A00               	xorlw	0	; case 0
   925  07EF  1903               	skipnz
   926  07F0  2F89               	goto	l712
   927  07F1  3A01               	xorlw	1	; case 1
   928  07F2  1903               	skipnz
   929  07F3  2FA2               	goto	l718
   930  07F4  3A03               	xorlw	3	; case 2
   931  07F5  1903               	skipnz
   932  07F6  2FBB               	goto	l724
   933  07F7  3A01               	xorlw	1	; case 3
   934  07F8  1903               	skipnz
   935  07F9  2FD4               	goto	l730
   936  07FA  2FFB               	goto	l86
   937  07FB                     l86:	
   938  07FB  0008               	return
   939  07FC                     __end_of_lcd_gotoxy:	
   940                           
   941                           	psect	text4
   942  0605                     __ptext4:	
   943 ;; *************** function _Lcd_PrintString *****************
   944 ;; Defined at:
   945 ;;		line 124 in file "LCD.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  str             1    wreg     PTR unsigned char 
   948 ;;		 -> STR_1(6), 
   949 ;; Auto vars:     Size  Location     Type
   950 ;;  str             1    5[COMMON] PTR unsigned char 
   951 ;;		 -> STR_1(6), 
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   961 ;;      Params:         0       0       0       0       0
   962 ;;      Locals:         1       0       0       0       0
   963 ;;      Temps:          1       0       0       0       0
   964 ;;      Totals:         2       0       0       0       0
   965 ;;Total ram usage:        2 bytes
   966 ;; Hardware stack levels used:    1
   967 ;; Hardware stack levels required when called:    2
   968 ;; This function calls:
   969 ;;		_Lcd_Print_char
   970 ;; This function is called by:
   971 ;;		_LCD_printStringXY
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           
   976                           ;psect for function _Lcd_PrintString
   977  0605                     _Lcd_PrintString:	
   978                           
   979                           ;incstack = 0
   980                           ; Regs used in _Lcd_PrintString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   981                           ;Lcd_PrintString@str stored from wreg
   982  0605  00F5               	movwf	Lcd_PrintString@str
   983  0606                     l746:	
   984                           ;LCD.c: 126: while ((*str)!='\0')
   985                           
   986  0606  0875               	movf	Lcd_PrintString@str,w
   987  0607  0084               	movwf	4
   988  0608  120A  118A  2003  120A  118A  	fcall	stringdir
   989  060D  3A00               	xorlw	0
   990  060E  1903               	btfsc	3,2
   991  060F  0008               	return
   992                           
   993                           ;LCD.c: 127: {
   994                           ;LCD.c: 128: Lcd_Print_char(*str);
   995  0610  0875               	movf	Lcd_PrintString@str,w
   996  0611  0084               	movwf	4
   997  0612  120A  118A  2003  120A  118A  	fcall	stringdir
   998  0617  120A  118A  2621  120A  118A  	fcall	_Lcd_Print_char
   999                           
  1000                           ;LCD.c: 129: str++;
  1001  061C  3001               	movlw	1
  1002  061D  00F4               	movwf	??_Lcd_PrintString
  1003  061E  0874               	movf	??_Lcd_PrintString,w
  1004  061F  07F5               	addwf	Lcd_PrintString@str,f
  1005  0620  2E06               	goto	l746
  1006  0621                     __end_of_Lcd_PrintString:	
  1007                           
  1008                           	psect	text5
  1009  06EA                     __ptext5:	
  1010 ;; *************** function _LCD_Init *****************
  1011 ;; Defined at:
  1012 ;;		line 70 in file "LCD.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0, pclath, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1026 ;;      Params:         0       0       0       0       0
  1027 ;;      Locals:         0       0       0       0       0
  1028 ;;      Temps:          2       0       0       0       0
  1029 ;;      Totals:         2       0       0       0       0
  1030 ;;Total ram usage:        2 bytes
  1031 ;; Hardware stack levels used:    1
  1032 ;; Hardware stack levels required when called:    2
  1033 ;; This function calls:
  1034 ;;		_LCD_SendCommand
  1035 ;; This function is called by:
  1036 ;;		_main
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           
  1041                           ;psect for function _LCD_Init
  1042  06EA                     _LCD_Init:	
  1043                           
  1044                           ;LCD.c: 72: TRISB4=0;
  1045                           
  1046                           ;incstack = 0
  1047                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1048  06EA  1683               	bsf	3,5	;RP0=1, select bank1
  1049  06EB  1303               	bcf	3,6	;RP1=0, select bank1
  1050  06EC  1206               	bcf	6,4	;volatile
  1051                           
  1052                           ;LCD.c: 73: TRISB5=0;
  1053  06ED  1286               	bcf	6,5	;volatile
  1054                           
  1055                           ;LCD.c: 74: TRISB6=0;
  1056  06EE  1306               	bcf	6,6	;volatile
  1057                           
  1058                           ;LCD.c: 75: TRISB7=0;
  1059  06EF  1386               	bcf	6,7	;volatile
  1060                           
  1061                           ;LCD.c: 77: TRISB0=0;
  1062  06F0  1006               	bcf	6,0	;volatile
  1063                           
  1064                           ;LCD.c: 78: TRISB1=0;
  1065  06F1  1086               	bcf	6,1	;volatile
  1066                           
  1067                           ;LCD.c: 79: TRISB2=0;
  1068  06F2  1106               	bcf	6,2	;volatile
  1069                           
  1070                           ;LCD.c: 81: _delay((unsigned long)((20)*(8000000/4000.0)));
  1071  06F3  3034               	movlw	52
  1072  06F4  00F5               	movwf	??_LCD_Init+1
  1073  06F5  30F1               	movlw	241
  1074  06F6  00F4               	movwf	??_LCD_Init
  1075  06F7                     u257:	
  1076  06F7  0BF4               	decfsz	??_LCD_Init,f
  1077  06F8  2EF7               	goto	u257
  1078  06F9  0BF5               	decfsz	??_LCD_Init+1,f
  1079  06FA  2EF7               	goto	u257
  1080  06FB  2EFC               	nop2
  1081                           
  1082                           ;LCD.c: 82: LCD_SendCommand(0x03);
  1083  06FC  3003               	movlw	3
  1084  06FD  120A  118A  25D3  120A  118A  	fcall	_LCD_SendCommand
  1085                           
  1086                           ;LCD.c: 83: _delay((unsigned long)((40)*(8000000/4000.0)));
  1087  0702  3068               	movlw	104
  1088  0703  00F5               	movwf	??_LCD_Init+1
  1089  0704  30E4               	movlw	228
  1090  0705  00F4               	movwf	??_LCD_Init
  1091  0706                     u267:	
  1092  0706  0BF4               	decfsz	??_LCD_Init,f
  1093  0707  2F06               	goto	u267
  1094  0708  0BF5               	decfsz	??_LCD_Init+1,f
  1095  0709  2F06               	goto	u267
  1096  070A  0000               	nop
  1097                           
  1098                           ;LCD.c: 84: LCD_SendCommand(0x03);
  1099  070B  3003               	movlw	3
  1100  070C  120A  118A  25D3  120A  118A  	fcall	_LCD_SendCommand
  1101                           
  1102                           ;LCD.c: 85: _delay((unsigned long)((40)*(8000000/4000.0)));
  1103  0711  3068               	movlw	104
  1104  0712  00F5               	movwf	??_LCD_Init+1
  1105  0713  30E4               	movlw	228
  1106  0714  00F4               	movwf	??_LCD_Init
  1107  0715                     u277:	
  1108  0715  0BF4               	decfsz	??_LCD_Init,f
  1109  0716  2F15               	goto	u277
  1110  0717  0BF5               	decfsz	??_LCD_Init+1,f
  1111  0718  2F15               	goto	u277
  1112  0719  0000               	nop
  1113                           
  1114                           ;LCD.c: 86: LCD_SendCommand(0x03);
  1115  071A  3003               	movlw	3
  1116  071B  120A  118A  25D3  120A  118A  	fcall	_LCD_SendCommand
  1117                           
  1118                           ;LCD.c: 87: _delay((unsigned long)((40)*(8000000/4000.0)));
  1119  0720  3068               	movlw	104
  1120  0721  00F5               	movwf	??_LCD_Init+1
  1121  0722  30E4               	movlw	228
  1122  0723  00F4               	movwf	??_LCD_Init
  1123  0724                     u287:	
  1124  0724  0BF4               	decfsz	??_LCD_Init,f
  1125  0725  2F24               	goto	u287
  1126  0726  0BF5               	decfsz	??_LCD_Init+1,f
  1127  0727  2F24               	goto	u287
  1128  0728  0000               	nop
  1129                           
  1130                           ;LCD.c: 88: LCD_SendCommand(0x02);
  1131  0729  3002               	movlw	2
  1132  072A  120A  118A  25D3  120A  118A  	fcall	_LCD_SendCommand
  1133                           
  1134                           ;LCD.c: 89: _delay((unsigned long)((40)*(8000000/4000.0)));
  1135  072F  3068               	movlw	104
  1136  0730  00F5               	movwf	??_LCD_Init+1
  1137  0731  30E4               	movlw	228
  1138  0732  00F4               	movwf	??_LCD_Init
  1139  0733                     u297:	
  1140  0733  0BF4               	decfsz	??_LCD_Init,f
  1141  0734  2F33               	goto	u297
  1142  0735  0BF5               	decfsz	??_LCD_Init+1,f
  1143  0736  2F33               	goto	u297
  1144  0737  0000               	nop
  1145                           
  1146                           ;LCD.c: 90: LCD_SendCommand(0x02);
  1147  0738  3002               	movlw	2
  1148  0739  120A  118A  25D3  120A  118A  	fcall	_LCD_SendCommand
  1149                           
  1150                           ;LCD.c: 91: LCD_SendCommand(0x08);
  1151  073E  3008               	movlw	8
  1152  073F  120A  118A  25D3  120A  118A  	fcall	_LCD_SendCommand
  1153                           
  1154                           ;LCD.c: 92: LCD_SendCommand(0x00);
  1155  0744  3000               	movlw	0
  1156  0745  120A  118A  25D3  120A  118A  	fcall	_LCD_SendCommand
  1157                           
  1158                           ;LCD.c: 93: LCD_SendCommand(0x08);
  1159  074A  3008               	movlw	8
  1160  074B  120A  118A  25D3  120A  118A  	fcall	_LCD_SendCommand
  1161                           
  1162                           ;LCD.c: 94: LCD_SendCommand(0x00);
  1163  0750  3000               	movlw	0
  1164  0751  120A  118A  25D3  120A  118A  	fcall	_LCD_SendCommand
  1165                           
  1166                           ;LCD.c: 95: LCD_SendCommand(0x01);
  1167  0756  3001               	movlw	1
  1168  0757  120A  118A  25D3  120A  118A  	fcall	_LCD_SendCommand
  1169                           
  1170                           ;LCD.c: 96: LCD_SendCommand(0x00);
  1171  075C  3000               	movlw	0
  1172  075D  120A  118A  25D3  120A  118A  	fcall	_LCD_SendCommand
  1173                           
  1174                           ;LCD.c: 97: LCD_SendCommand(0x06);
  1175  0762  3006               	movlw	6
  1176  0763  120A  118A  25D3  120A  118A  	fcall	_LCD_SendCommand
  1177                           
  1178                           ;LCD.c: 98: LCD_SendCommand(0x00);
  1179  0768  3000               	movlw	0
  1180  0769  120A  118A  25D3  120A  118A  	fcall	_LCD_SendCommand
  1181                           
  1182                           ;LCD.c: 99: LCD_SendCommand(0x0C);
  1183  076E  300C               	movlw	12
  1184  076F  120A  118A  25D3   	fcall	_LCD_SendCommand
  1185  0772  0008               	return
  1186  0773                     __end_of_LCD_Init:	
  1187                           
  1188                           	psect	text6
  1189  064C                     __ptext6:	
  1190 ;; *************** function _InitCustomeChars *****************
  1191 ;; Defined at:
  1192 ;;		line 205 in file "LCD.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;  i               1    5[COMMON] unsigned char 
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  1    wreg      void 
  1199 ;; Registers used:
  1200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1206 ;;      Params:         0       0       0       0       0
  1207 ;;      Locals:         1       0       0       0       0
  1208 ;;      Temps:          1       0       0       0       0
  1209 ;;      Totals:         2       0       0       0       0
  1210 ;;Total ram usage:        2 bytes
  1211 ;; Hardware stack levels used:    1
  1212 ;; Hardware stack levels required when called:    2
  1213 ;; This function calls:
  1214 ;;		_LCD_SendCommand
  1215 ;;		_Lcd_Print_char
  1216 ;; This function is called by:
  1217 ;;		_main
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221                           
  1222                           ;psect for function _InitCustomeChars
  1223  064C                     _InitCustomeChars:	
  1224                           
  1225                           ;LCD.c: 207: char i;
  1226                           ;LCD.c: 208: LCD_SendCommand(0x04);
  1227                           
  1228                           ;incstack = 0
  1229                           ; Regs used in _InitCustomeChars: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1230  064C  3004               	movlw	4
  1231  064D  120A  118A  25D3  120A  118A  	fcall	_LCD_SendCommand
  1232                           
  1233                           ;LCD.c: 209: LCD_SendCommand(0x00);
  1234  0652  3000               	movlw	0
  1235  0653  120A  118A  25D3  120A  118A  	fcall	_LCD_SendCommand
  1236                           
  1237                           ;LCD.c: 210: for(i=0;i<=63;i++)
  1238  0658  01F5               	clrf	InitCustomeChars@i
  1239  0659  3040               	movlw	64
  1240  065A  0275               	subwf	InitCustomeChars@i,w
  1241  065B  1803               	btfsc	3,0
  1242  065C  2E74               	goto	l762
  1243  065D                     l756:	
  1244                           
  1245                           ;LCD.c: 211: {
  1246                           ;LCD.c: 212: Lcd_Print_char((char)MyChar5x8[i]);
  1247  065D  0875               	movf	InitCustomeChars@i,w
  1248  065E  00F4               	movwf	??_InitCustomeChars
  1249  065F  0774               	addwf	??_InitCustomeChars,w
  1250  0660  3E01               	addlw	low ((_MyChar5x8-__stringbase)| (0+32768))
  1251  0661  0084               	movwf	4
  1252  0662  120A  118A  2003  120A  118A  	fcall	stringdir
  1253  0667  120A  118A  2621  120A  118A  	fcall	_Lcd_Print_char
  1254  066C  3001               	movlw	1
  1255  066D  00F4               	movwf	??_InitCustomeChars
  1256  066E  0874               	movf	??_InitCustomeChars,w
  1257  066F  07F5               	addwf	InitCustomeChars@i,f
  1258  0670  3040               	movlw	64
  1259  0671  0275               	subwf	InitCustomeChars@i,w
  1260  0672  1C03               	skipc
  1261  0673  2E5D               	goto	l756
  1262  0674                     l762:	
  1263                           
  1264                           ;LCD.c: 213: }
  1265                           ;LCD.c: 214: LCD_SendCommand(0);
  1266  0674  3000               	movlw	0
  1267  0675  120A  118A  25D3  120A  118A  	fcall	_LCD_SendCommand
  1268                           
  1269                           ;LCD.c: 215: LCD_SendCommand(2);
  1270  067A  3002               	movlw	2
  1271  067B  120A  118A  25D3   	fcall	_LCD_SendCommand
  1272  067E  0008               	return
  1273  067F                     __end_of_InitCustomeChars:	
  1274                           
  1275                           	psect	text7
  1276  0621                     __ptext7:	
  1277 ;; *************** function _Lcd_Print_char *****************
  1278 ;; Defined at:
  1279 ;;		line 108 in file "LCD.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;  data            1    wreg     unsigned char 
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  data            1    3[COMMON] unsigned char 
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      void 
  1286 ;; Registers used:
  1287 ;;		wreg, status,2, status,0, pclath, cstack
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1293 ;;      Params:         0       0       0       0       0
  1294 ;;      Locals:         1       0       0       0       0
  1295 ;;      Temps:          2       0       0       0       0
  1296 ;;      Totals:         3       0       0       0       0
  1297 ;;Total ram usage:        3 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; Hardware stack levels required when called:    1
  1300 ;; This function calls:
  1301 ;;		_LCD_SendData
  1302 ;; This function is called by:
  1303 ;;		_main
  1304 ;;		_Lcd_PrintString
  1305 ;;		_InitCustomeChars
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           
  1310                           ;psect for function _Lcd_Print_char
  1311  0621                     _Lcd_Print_char:	
  1312                           
  1313                           ;incstack = 0
  1314                           ; Regs used in _Lcd_Print_char: [wreg+status,2+status,0+pclath+cstack]
  1315                           ;Lcd_Print_char@data stored from wreg
  1316  0621  00F3               	movwf	Lcd_Print_char@data
  1317                           
  1318                           ;LCD.c: 110: PORTBbits.RB0=1;
  1319  0622  1283               	bcf	3,5	;RP0=0, select bank0
  1320  0623  1303               	bcf	3,6	;RP1=0, select bank0
  1321  0624  1406               	bsf	6,0	;volatile
  1322                           
  1323                           ;LCD.c: 111: LCD_SendData(data>>4);
  1324  0625  0873               	movf	Lcd_Print_char@data,w
  1325  0626  00F1               	movwf	??_Lcd_Print_char
  1326  0627  3004               	movlw	4
  1327  0628                     u55:	
  1328  0628  1003               	clrc
  1329  0629  0CF1               	rrf	??_Lcd_Print_char,f
  1330  062A  3EFF               	addlw	-1
  1331  062B  1D03               	skipz
  1332  062C  2E28               	goto	u55
  1333  062D  0871               	movf	??_Lcd_Print_char,w
  1334  062E  120A  118A  25EB  120A  118A  	fcall	_LCD_SendData
  1335                           
  1336                           ;LCD.c: 112: PORTBbits.RB2=1;
  1337  0633  1283               	bcf	3,5	;RP0=0, select bank0
  1338  0634  1303               	bcf	3,6	;RP1=0, select bank0
  1339  0635  1506               	bsf	6,2	;volatile
  1340                           
  1341                           ;LCD.c: 113: PORTBbits.RB2=0;
  1342  0636  1106               	bcf	6,2	;volatile
  1343                           
  1344                           ;LCD.c: 114: LCD_SendData(data&0x0F);
  1345  0637  0873               	movf	Lcd_Print_char@data,w
  1346  0638  390F               	andlw	15
  1347  0639  120A  118A  25EB  120A  118A  	fcall	_LCD_SendData
  1348                           
  1349                           ;LCD.c: 115: PORTBbits.RB2=1;
  1350  063E  1283               	bcf	3,5	;RP0=0, select bank0
  1351  063F  1303               	bcf	3,6	;RP1=0, select bank0
  1352  0640  1506               	bsf	6,2	;volatile
  1353                           
  1354                           ;LCD.c: 116: PORTBbits.RB2=0;
  1355  0641  1106               	bcf	6,2	;volatile
  1356                           
  1357                           ;LCD.c: 117: _delay((unsigned long)((4)*(8000000/4000.0)));
  1358  0642  300B               	movlw	11
  1359  0643  00F2               	movwf	??_Lcd_Print_char+1
  1360  0644  3062               	movlw	98
  1361  0645  00F1               	movwf	??_Lcd_Print_char
  1362  0646                     u307:	
  1363  0646  0BF1               	decfsz	??_Lcd_Print_char,f
  1364  0647  2E46               	goto	u307
  1365  0648  0BF2               	decfsz	??_Lcd_Print_char+1,f
  1366  0649  2E46               	goto	u307
  1367  064A  0000               	nop
  1368  064B  0008               	return
  1369  064C                     __end_of_Lcd_Print_char:	
  1370                           
  1371                           	psect	text8
  1372  05D3                     __ptext8:	
  1373 ;; *************** function _LCD_SendCommand *****************
  1374 ;; Defined at:
  1375 ;;		line 57 in file "LCD.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;  com             1    wreg     unsigned char 
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;  com             1    3[COMMON] unsigned char 
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  1    wreg      void 
  1382 ;; Registers used:
  1383 ;;		wreg, status,2, status,0, pclath, cstack
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1389 ;;      Params:         0       0       0       0       0
  1390 ;;      Locals:         1       0       0       0       0
  1391 ;;      Temps:          2       0       0       0       0
  1392 ;;      Totals:         3       0       0       0       0
  1393 ;;Total ram usage:        3 bytes
  1394 ;; Hardware stack levels used:    1
  1395 ;; Hardware stack levels required when called:    1
  1396 ;; This function calls:
  1397 ;;		_LCD_SendData
  1398 ;; This function is called by:
  1399 ;;		_LCD_Init
  1400 ;;		_Lcd_Clear
  1401 ;;		_lcd_gotoxy
  1402 ;;		_InitCustomeChars
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           
  1407                           ;psect for function _LCD_SendCommand
  1408  05D3                     _LCD_SendCommand:	
  1409                           
  1410                           ;incstack = 0
  1411                           ; Regs used in _LCD_SendCommand: [wreg+status,2+status,0+pclath+cstack]
  1412                           ;LCD_SendCommand@com stored from wreg
  1413  05D3  00F3               	movwf	LCD_SendCommand@com
  1414                           
  1415                           ;LCD.c: 59: PORTBbits.RB0=0;
  1416  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  1417  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  1418  05D6  1006               	bcf	6,0	;volatile
  1419                           
  1420                           ;LCD.c: 60: LCD_SendData(com);
  1421  05D7  0873               	movf	LCD_SendCommand@com,w
  1422  05D8  120A  118A  25EB  120A  118A  	fcall	_LCD_SendData
  1423                           
  1424                           ;LCD.c: 61: PORTBbits.RB2=1;
  1425  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  1426  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  1427  05DF  1506               	bsf	6,2	;volatile
  1428                           
  1429                           ;LCD.c: 62: PORTBbits.RB2=0;
  1430  05E0  1106               	bcf	6,2	;volatile
  1431                           
  1432                           ;LCD.c: 63: _delay((unsigned long)((4)*(8000000/4000.0)));
  1433  05E1  300B               	movlw	11
  1434  05E2  00F2               	movwf	??_LCD_SendCommand+1
  1435  05E3  3062               	movlw	98
  1436  05E4  00F1               	movwf	??_LCD_SendCommand
  1437  05E5                     u317:	
  1438  05E5  0BF1               	decfsz	??_LCD_SendCommand,f
  1439  05E6  2DE5               	goto	u317
  1440  05E7  0BF2               	decfsz	??_LCD_SendCommand+1,f
  1441  05E8  2DE5               	goto	u317
  1442  05E9  0000               	nop
  1443  05EA  0008               	return
  1444  05EB                     __end_of_LCD_SendCommand:	
  1445                           
  1446                           	psect	text9
  1447  05EB                     __ptext9:	
  1448 ;; *************** function _LCD_SendData *****************
  1449 ;; Defined at:
  1450 ;;		line 8 in file "LCD.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  data            1    wreg     unsigned char 
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;  data            1    0[COMMON] unsigned char 
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  1    wreg      void 
  1457 ;; Registers used:
  1458 ;;		wreg
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1464 ;;      Params:         0       0       0       0       0
  1465 ;;      Locals:         1       0       0       0       0
  1466 ;;      Temps:          0       0       0       0       0
  1467 ;;      Totals:         1       0       0       0       0
  1468 ;;Total ram usage:        1 bytes
  1469 ;; Hardware stack levels used:    1
  1470 ;; This function calls:
  1471 ;;		Nothing
  1472 ;; This function is called by:
  1473 ;;		_LCD_SendCommand
  1474 ;;		_Lcd_Print_char
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478                           
  1479                           ;psect for function _LCD_SendData
  1480  05EB                     _LCD_SendData:	
  1481                           
  1482                           ;incstack = 0
  1483                           ; Regs used in _LCD_SendData: [wreg]
  1484                           ;LCD_SendData@data stored from wreg
  1485  05EB  00F0               	movwf	LCD_SendData@data
  1486                           
  1487                           ;LCD.c: 10: if(data&0x01)
  1488  05EC  1C70               	btfss	LCD_SendData@data,0
  1489  05ED  2DF2               	goto	l47
  1490                           
  1491                           ;LCD.c: 11: {
  1492                           ;LCD.c: 12: PORTBbits.RB4=1;
  1493  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  1494  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  1495  05F0  1606               	bsf	6,4	;volatile
  1496                           
  1497                           ;LCD.c: 14: }
  1498  05F1  2DF5               	goto	l48
  1499  05F2                     l47:	
  1500                           
  1501                           ;LCD.c: 15: else
  1502                           ;LCD.c: 16: {
  1503                           ;LCD.c: 17: PORTBbits.RB4=0;
  1504  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  1505  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  1506  05F4  1206               	bcf	6,4	;volatile
  1507  05F5                     l48:	
  1508                           
  1509                           ;LCD.c: 18: }
  1510                           ;LCD.c: 20: if(data&0x02)
  1511  05F5  1CF0               	btfss	LCD_SendData@data,1
  1512  05F6  2DF9               	goto	l49
  1513                           
  1514                           ;LCD.c: 21: {
  1515                           ;LCD.c: 22: PORTBbits.RB5=1;
  1516  05F7  1686               	bsf	6,5	;volatile
  1517                           
  1518                           ;LCD.c: 24: }
  1519  05F8  2DFA               	goto	l50
  1520  05F9                     l49:	
  1521                           
  1522                           ;LCD.c: 25: else
  1523                           ;LCD.c: 26: {
  1524                           ;LCD.c: 27: PORTBbits.RB5=0;
  1525  05F9  1286               	bcf	6,5	;volatile
  1526  05FA                     l50:	
  1527                           
  1528                           ;LCD.c: 28: }
  1529                           ;LCD.c: 30: if(data&0x04)
  1530  05FA  1D70               	btfss	LCD_SendData@data,2
  1531  05FB  2DFE               	goto	l51
  1532                           
  1533                           ;LCD.c: 31: {
  1534                           ;LCD.c: 32: PORTBbits.RB6=1;
  1535  05FC  1706               	bsf	6,6	;volatile
  1536                           
  1537                           ;LCD.c: 34: }
  1538  05FD  2DFF               	goto	l52
  1539  05FE                     l51:	
  1540                           
  1541                           ;LCD.c: 35: else
  1542                           ;LCD.c: 36: {
  1543                           ;LCD.c: 37: PORTBbits.RB6=0;
  1544  05FE  1306               	bcf	6,6	;volatile
  1545  05FF                     l52:	
  1546                           
  1547                           ;LCD.c: 38: }
  1548                           ;LCD.c: 40: if(data&0x08)
  1549  05FF  1DF0               	btfss	LCD_SendData@data,3
  1550  0600  2E03               	goto	l53
  1551                           
  1552                           ;LCD.c: 41: {
  1553                           ;LCD.c: 42: PORTBbits.RB7=1;
  1554  0601  1786               	bsf	6,7	;volatile
  1555                           
  1556                           ;LCD.c: 44: }
  1557  0602  0008               	return
  1558  0603                     l53:	
  1559                           
  1560                           ;LCD.c: 45: else
  1561                           ;LCD.c: 46: {
  1562                           ;LCD.c: 47: PORTBbits.RB7=0;
  1563  0603  1386               	bcf	6,7	;volatile
  1564  0604  0008               	return
  1565  0605                     __end_of_LCD_SendData:	
  1566  007E                     btemp	set	126	;btemp
  1567  007E                     wtemp0	set	126


Data Sizes:
    Strings     6
    Constant    128
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_printStringXY@str	PTR unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 

    Lcd_PrintString@str	PTR unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_LCD_printStringXY
    _Lcd_Clear->_LCD_SendCommand
    _LCD_printStringXY->_lcd_gotoxy
    _lcd_gotoxy->_LCD_SendCommand
    _Lcd_PrintString->_Lcd_Print_char
    _LCD_Init->_LCD_SendCommand
    _InitCustomeChars->_LCD_SendCommand
    _InitCustomeChars->_Lcd_Print_char
    _Lcd_Print_char->_LCD_SendData
    _LCD_SendCommand->_LCD_SendData

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1874
                                              0 BANK0      3     3      0
                   _InitCustomeChars
                           _LCD_Init
                  _LCD_printStringXY
                          _Lcd_Clear
                     _Lcd_Print_char
                         _lcd_gotoxy
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      75
                    _LCD_SendCommand
 ---------------------------------------------------------------------------------
 (1) _LCD_printStringXY                                    4     2      2     881
                                              8 COMMON     4     2      2
                    _Lcd_PrintString
                         _lcd_gotoxy
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoxy                                           4     3      1     520
                                              4 COMMON     4     3      1
                    _LCD_SendCommand
 ---------------------------------------------------------------------------------
 (2) _Lcd_PrintString                                      2     2      0     162
                                              4 COMMON     2     2      0
                     _Lcd_Print_char
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      75
                                              4 COMMON     2     2      0
                    _LCD_SendCommand
 ---------------------------------------------------------------------------------
 (1) _InitCustomeChars                                     2     2      0     233
                                              4 COMMON     2     2      0
                    _LCD_SendCommand
                     _Lcd_Print_char
 ---------------------------------------------------------------------------------
 (1) _Lcd_Print_char                                       3     3      0      90
                                              1 COMMON     3     3      0
                       _LCD_SendData
 ---------------------------------------------------------------------------------
 (2) _LCD_SendCommand                                      3     3      0      75
                                              1 COMMON     3     3      0
                       _LCD_SendData
 ---------------------------------------------------------------------------------
 (3) _LCD_SendData                                         1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitCustomeChars
     _LCD_SendCommand
       _LCD_SendData
     _Lcd_Print_char
       _LCD_SendData
   _LCD_Init
     _LCD_SendCommand
       _LCD_SendData
   _LCD_printStringXY
     _Lcd_PrintString
       _Lcd_Print_char
         _LCD_SendData
     _lcd_gotoxy
       _LCD_SendCommand
         _LCD_SendData
   _Lcd_Clear
     _LCD_SendCommand
       _LCD_SendData
   _Lcd_Print_char
     _LCD_SendData
   _lcd_gotoxy
     _LCD_SendCommand
       _LCD_SendData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue May 08 15:29:47 2018

        ??_InitCustomeChars 0074                           pc 0002                          l50 05FA  
                        l51 05FE                          l52 05FF                          l53 0603  
                        l47 05F2                          l48 05F5                          l49 05F9  
                        l86 07FB                          l79 0784                          u55 0628  
                        fsr 0004                         l712 0789                         l704 077C  
                       l730 07D4                         l724 07BB                         l718 07A2  
                       l762 0674                         l746 0606                         l738 07ED  
                       l770 068E                         l756 065D                         u205 07DC  
                       u307 0646                         u317 05E5                         u175 0791  
                       u247 06E3                         u257 06F7                         u185 07AA  
                       u267 0706                         u195 07C3                         u277 0715  
                       u287 0724                         u297 0733                         fsr0 0004  
               lcd_gotoxy@x 0076                 lcd_gotoxy@y 0074               ?_LCD_SendData 0070  
                      STR_1 0089                        _main 067F                        btemp 007E  
                      start 0000             _LCD_SendCommand 05D3            __end_of_LCD_Init 0773  
                     ?_main 0070              ??_LCD_SendData 0070                       pclath 000A  
                     status 0003                       wtemp0 007E     __size_of_Lcd_Print_char 002B  
           __initialization 07FC                __end_of_main 06EA                      ??_main 0020  
        __size_of_Lcd_Clear 000B     __end_of_LCD_SendCommand 05EB                      _TRISB0 0430  
                    _TRISB1 0431                      _TRISB2 0432                      _TRISB4 0434  
                    _TRISB5 0435                      _TRISB6 0436                      _TRISB7 0437  
        Lcd_Print_char@data 0073          Lcd_PrintString@str 0075     __end_of__initialization 07FC  
                 ?_LCD_Init 0070           __end_of_Lcd_Clear 05C3    __size_of_Lcd_PrintString 001C  
            __pcstackCOMMON 0070        __end_of_LCD_SendData 0605           InitCustomeChars@i 0075  
         __end_of_MyChar5x8 0089              lcd_gotoxy@temp 0077   __size_of_InitCustomeChars 0033  
          ?_LCD_SendCommand 0070                  ??_LCD_Init 0074              _Lcd_Print_char 0621  
                __pmaintext 067F                  _lcd_gotoxy 0773            LCD_SendData@data 0070  
                __stringtab 0003      __end_of_Lcd_Print_char 064C           ??_Lcd_PrintString 0074  
                   __ptext1 05B8                     __ptext2 05C3                     __ptext3 0773  
                   __ptext4 0605                     __ptext5 06EA                     __ptext6 064C  
                   __ptext7 0621                     __ptext8 05D3                     __ptext9 05EB  
      end_of_initialization 07FC             ?_Lcd_Print_char 0070       __size_of_LCD_SendData 001A  
      LCD_printStringXY@str 007B                   _PORTBbits 0006            _InitCustomeChars 064C  
               ?_lcd_gotoxy 0074                _LCD_SendData 05EB           __size_of_LCD_Init 0089  
                 _Lcd_Clear 05B8                   _MyChar5x8 0009         start_initialization 07FC  
                ?_Lcd_Clear 0070         __size_of_lcd_gotoxy 0089          LCD_SendCommand@com 0073  
                 ___latbits 0002               __pcstackBANK0 0020             _Lcd_PrintString 0605  
  __size_of_LCD_SendCommand 0018                   __pstrings 0003            ??_Lcd_Print_char 0071  
                  _LCD_Init 06EA    __end_of_InitCustomeChars 067F                 ??_Lcd_Clear 0074  
               __stringbase 0008                ??_lcd_gotoxy 0075     __end_of_Lcd_PrintString 0621  
         _LCD_printStringXY 05C3          __end_of_lcd_gotoxy 07FC          ?_LCD_printStringXY 0078  
         ??_LCD_SendCommand 0071          __end_of__stringtab 0009         ??_LCD_printStringXY 007A  
             __size_of_main 006B   __end_of_LCD_printStringXY 05D3          LCD_printStringXY@x 0078  
        LCD_printStringXY@y 0079            ?_Lcd_PrintString 0070                   stringcode 0003  
                  stringdir 0003                    stringtab 0003           ?_InitCustomeChars 0070  
__size_of_LCD_printStringXY 0010  
