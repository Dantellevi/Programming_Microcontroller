

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Jun 21 17:02:47 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           ; Version 1.45
    41                           ; Generated 16/11/2017 GMT
    42                           ; 
    43                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4550 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	idataCOMRAM
    76  000CC8                     __pidataCOMRAM:
    77                           	opt stack 0
    78                           
    79                           ;initializer for _freq
    80  000CC8  07D0               	dw	2000
    81  000CCA  0000               	dw	0
    82  0000                     _TMR1	set	4046
    83  0000                     _RCREG	set	4014
    84  0000                     _TXREG	set	4013
    85  0000                     _SPBRG	set	4015
    86  0000                     _ADRESL	set	4035
    87  0000                     _ADRESH	set	4036
    88  0000                     _ADCON0	set	4034
    89  0000                     _CCPR2L	set	4027
    90  0000                     _PR2	set	4043
    91  0000                     _PORTDbits	set	3971
    92  0000                     _PORTD	set	3971
    93  0000                     _RCIF	set	31989
    94  0000                     _TRMT	set	32097
    95  0000                     _TXEN	set	32101
    96  0000                     _CREN	set	32092
    97  0000                     _TRISC6	set	31910
    98  0000                     _TRISC7	set	31911
    99  0000                     _SPEN	set	32095
   100  0000                     _SYNC	set	32100
   101  0000                     _GO_nDONE	set	32273
   102  0000                     _ADFM	set	32263
   103  0000                     _ADON	set	32272
   104  0000                     _ADCS0	set	32256
   105  0000                     _ADCS1	set	32257
   106  0000                     _ADCS2	set	32258
   107  0000                     _DC2B0	set	32212
   108  0000                     _DC2B1	set	32213
   109  0000                     _T2CKPS1	set	32337
   110  0000                     _T2CKPS0	set	32336
   111  0000                     _CCP2M2	set	32210
   112  0000                     _CCP2M3	set	32211
   113  0000                     _TMR1CS	set	32361
   114  0000                     _T1OSCEN	set	32363
   115  0000                     _T1CKPS1	set	32365
   116  0000                     _T1CKPS0	set	32364
   117  0000                     _RB0	set	31752
   118  0000                     _RC0	set	31760
   119  0000                     _TRISB0	set	31896
   120  0000                     _TRISC0	set	31904
   121  0000                     _TRISC1	set	31905
   122  0000                     _TRISD3	set	31915
   123  0000                     _TRISD2	set	31914
   124  0000                     _TRISD1	set	31913
   125  0000                     _TRISD0	set	31912
   126  0000                     _TMR1ON	set	32360
   127  0000                     _PEIE	set	32662
   128  0000                     _GIE	set	32663
   129  0000                     _TMR1IF	set	31984
   130  0000                     _TMR1IE	set	31976
   131                           
   132                           ; #config settings
   133  0000                     
   134                           	psect	cinit
   135  000B5C                     __pcinit:
   136                           	opt stack 0
   137  000B5C                     start_initialization:
   138                           	opt stack 0
   139  000B5C                     __initialization:
   140                           	opt stack 0
   141                           
   142                           ; Initialize objects allocated to COMRAM (4 bytes)
   143                           ; load TBLPTR registers with __pidataCOMRAM
   144  000B5C  0EC8               	movlw	low __pidataCOMRAM
   145  000B5E  6EF6               	movwf	tblptrl,c
   146  000B60  0E0C               	movlw	high __pidataCOMRAM
   147  000B62  6EF7               	movwf	tblptrh,c
   148  000B64  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   149  000B66  6EF8               	movwf	tblptru,c
   150  000B68  EE00  F045         	lfsr	0,__pdataCOMRAM
   151  000B6C  EE10 F004          	lfsr	1,4
   152  000B70                     copy_data0:
   153  000B70  0009               	tblrd		*+
   154  000B72  CFF5 FFEE          	movff	tablat,postinc0
   155  000B76  50E5               	movf	postdec1,w,c
   156  000B78  50E1               	movf	fsr1l,w,c
   157  000B7A  E1FA               	bnz	copy_data0
   158                           
   159                           ; Clear objects allocated to BANK0 (5 bytes)
   160  000B7C  0100               	movlb	0
   161  000B7E  6B7B               	clrf	(__pbssBANK0+4)& (0+255),b
   162  000B80  6B7A               	clrf	(__pbssBANK0+3)& (0+255),b
   163  000B82  6B79               	clrf	(__pbssBANK0+2)& (0+255),b
   164  000B84  6B78               	clrf	(__pbssBANK0+1)& (0+255),b
   165  000B86  6B77               	clrf	__pbssBANK0& (0+255),b
   166                           
   167                           ; Clear objects allocated to COMRAM (3 bytes)
   168  000B88  6A4B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   169  000B8A  6A4A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   170  000B8C  6A49               	clrf	__pbssCOMRAM& (0+255),c
   171  000B8E                     end_of_initialization:
   172                           	opt stack 0
   173  000B8E                     __end_of__initialization:
   174                           	opt stack 0
   175  000B8E  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   176  000B90  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   177  000B92  0E00               	movlw	low (__Lmediumconst shr (0+16))
   178  000B94  6EF8               	movwf	tblptru,c
   179  000B96  0100               	movlb	0
   180  000B98  EF09  F000         	goto	_main	;jump to C main() function
   181                           tblptru	equ	0xFF8
   182                           tblptrh	equ	0xFF7
   183                           tblptrl	equ	0xFF6
   184                           tablat	equ	0xFF5
   185                           postinc0	equ	0xFEE
   186                           postdec1	equ	0xFE5
   187                           fsr1l	equ	0xFE1
   188                           
   189                           	psect	bssCOMRAM
   190  000049                     __pbssCOMRAM:
   191                           	opt stack 0
   192  000049                     _Vref:
   193                           	opt stack 0
   194  000049                     	ds	3
   195                           tblptru	equ	0xFF8
   196                           tblptrh	equ	0xFF7
   197                           tblptrl	equ	0xFF6
   198                           tablat	equ	0xFF5
   199                           postinc0	equ	0xFEE
   200                           postdec1	equ	0xFE5
   201                           fsr1l	equ	0xFE1
   202                           
   203                           	psect	dataCOMRAM
   204  000045                     __pdataCOMRAM:
   205                           	opt stack 0
   206  000045                     _freq:
   207                           	opt stack 0
   208  000045                     	ds	4
   209                           tblptru	equ	0xFF8
   210                           tblptrh	equ	0xFF7
   211                           tblptrl	equ	0xFF6
   212                           tablat	equ	0xFF5
   213                           postinc0	equ	0xFEE
   214                           postdec1	equ	0xFE5
   215                           fsr1l	equ	0xFE1
   216                           
   217                           	psect	bssBANK0
   218  000077                     __pbssBANK0:
   219                           	opt stack 0
   220  000077                     _Uz_pwm:
   221                           	opt stack 0
   222  000077                     	ds	2
   223  000079                     _Phs_p_pwm1:
   224                           	opt stack 0
   225  000079                     	ds	1
   226  00007A                     _Phs_z_pwm1:
   227                           	opt stack 0
   228  00007A                     	ds	1
   229  00007B                     _Phs_n_pwm1:
   230                           	opt stack 0
   231  00007B                     	ds	1
   232                           tblptru	equ	0xFF8
   233                           tblptrh	equ	0xFF7
   234                           tblptrl	equ	0xFF6
   235                           tablat	equ	0xFF5
   236                           postinc0	equ	0xFEE
   237                           postdec1	equ	0xFE5
   238                           fsr1l	equ	0xFE1
   239                           
   240                           	psect	cstackBANK0
   241  000060                     __pcstackBANK0:
   242                           	opt stack 0
   243  000060                     ___fttol@sign1:
   244                           	opt stack 0
   245                           
   246                           ; 1 bytes @ 0x0
   247  000060                     	ds	1
   248  000061                     ___fttol@lval:
   249                           	opt stack 0
   250                           
   251                           ; 4 bytes @ 0x1
   252  000061                     	ds	4
   253  000065                     ___fttol@exp1:
   254                           	opt stack 0
   255                           
   256                           ; 1 bytes @ 0x5
   257  000065                     	ds	1
   258  000066                     PWM_SetValue@val:
   259                           	opt stack 0
   260                           
   261                           ; 2 bytes @ 0x6
   262  000066                     	ds	2
   263  000068                     ??_PWM_SetValue:
   264                           
   265                           ; 1 bytes @ 0x8
   266  000068                     	ds	4
   267  00006C                     ??_main:
   268                           
   269                           ; 1 bytes @ 0xC
   270  00006C                     	ds	2
   271  00006E                     main@buf:
   272                           	opt stack 0
   273                           
   274                           ; 5 bytes @ 0xE
   275  00006E                     	ds	5
   276  000073                     main@adcVal:
   277                           	opt stack 0
   278                           
   279                           ; 2 bytes @ 0x13
   280  000073                     	ds	2
   281  000075                     main@ConvertSpeed:
   282                           	opt stack 0
   283                           
   284                           ; 2 bytes @ 0x15
   285  000075                     	ds	2
   286                           tblptru	equ	0xFF8
   287                           tblptrh	equ	0xFF7
   288                           tblptrl	equ	0xFF6
   289                           tablat	equ	0xFF5
   290                           postinc0	equ	0xFEE
   291                           postdec1	equ	0xFE5
   292                           fsr1l	equ	0xFE1
   293                           
   294                           	psect	cstackCOMRAM
   295  000001                     __pcstackCOMRAM:
   296                           	opt stack 0
   297  000001                     ??_Timer1_OVF_Vector:
   298  000001                     
   299                           ; 1 bytes @ 0x0
   300  000001                     	ds	18
   301  000013                     ??_isdigit:
   302  000013                     ?_ADC_read:
   303                           	opt stack 0
   304  000013                     ?___wmul:
   305                           	opt stack 0
   306  000013                     ?___ftpack:
   307                           	opt stack 0
   308  000013                     ?___aldiv:
   309                           	opt stack 0
   310  000013                     Check_button_direction@count:
   311                           	opt stack 0
   312  000013                     Check_ModeWork@count:
   313                           	opt stack 0
   314  000013                     Ressieve_String@buffer:
   315                           	opt stack 0
   316  000013                     ___wmul@multiplier:
   317                           	opt stack 0
   318  000013                     ADC_Init@Uref:
   319                           	opt stack 0
   320  000013                     ___ftpack@arg:
   321                           	opt stack 0
   322  000013                     ___aldiv@dividend:
   323                           	opt stack 0
   324                           
   325                           ; 4 bytes @ 0x12
   326  000013                     	ds	1
   327  000014                     _isdigit$459:
   328                           	opt stack 0
   329                           
   330                           ; 1 bytes @ 0x13
   331  000014                     	ds	1
   332  000015                     ??_ADC_read:
   333  000015                     Check_button_direction@result:
   334                           	opt stack 0
   335  000015                     Check_ModeWork@result:
   336                           	opt stack 0
   337  000015                     isdigit@c:
   338                           	opt stack 0
   339  000015                     Ressieve_String@length:
   340                           	opt stack 0
   341  000015                     ___wmul@multiplicand:
   342                           	opt stack 0
   343                           
   344                           ; 2 bytes @ 0x14
   345  000015                     	ds	1
   346  000016                     ___ftpack@exp:
   347                           	opt stack 0
   348                           
   349                           ; 1 bytes @ 0x15
   350  000016                     	ds	1
   351  000017                     ADC_read@channel:
   352                           	opt stack 0
   353  000017                     ___ftpack@sign:
   354                           	opt stack 0
   355  000017                     Ressieve_String@i:
   356                           	opt stack 0
   357  000017                     ___wmul@product:
   358                           	opt stack 0
   359  000017                     ___aldiv@divisor:
   360                           	opt stack 0
   361                           
   362                           ; 4 bytes @ 0x16
   363  000017                     	ds	1
   364  000018                     ??___ftpack:
   365                           
   366                           ; 1 bytes @ 0x17
   367  000018                     	ds	1
   368  000019                     ?_atoi:
   369                           	opt stack 0
   370  000019                     atoi@s:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x18
   374  000019                     	ds	2
   375  00001B                     ??_atoi:
   376  00001B                     ?___lwtoft:
   377                           	opt stack 0
   378  00001B                     ___aldiv@counter:
   379                           	opt stack 0
   380  00001B                     ___lwtoft@c:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x1A
   384  00001B                     	ds	1
   385  00001C                     ___aldiv@sign:
   386                           	opt stack 0
   387                           
   388                           ; 1 bytes @ 0x1B
   389  00001C                     	ds	1
   390  00001D                     atoi@sign:
   391                           	opt stack 0
   392  00001D                     ___aldiv@quotient:
   393                           	opt stack 0
   394                           
   395                           ; 4 bytes @ 0x1C
   396  00001D                     	ds	1
   397  00001E                     ?___ftdiv:
   398                           	opt stack 0
   399  00001E                     atoi@a:
   400                           	opt stack 0
   401  00001E                     ___ftdiv@f1:
   402                           	opt stack 0
   403                           
   404                           ; 3 bytes @ 0x1D
   405  00001E                     	ds	3
   406  000021                     ??_PWM_Init:
   407  000021                     ?___altoft:
   408                           	opt stack 0
   409  000021                     ___ftdiv@f2:
   410                           	opt stack 0
   411  000021                     Usart_Init@baud:
   412                           	opt stack 0
   413  000021                     ___altoft@c:
   414                           	opt stack 0
   415                           
   416                           ; 4 bytes @ 0x20
   417  000021                     	ds	3
   418  000024                     ??___ftdiv:
   419                           
   420                           ; 1 bytes @ 0x23
   421  000024                     	ds	1
   422  000025                     ??_Usart_Init:
   423  000025                     ??___altoft:
   424                           
   425                           ; 1 bytes @ 0x24
   426  000025                     	ds	2
   427  000027                     ___ftdiv@cntr:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x26
   431  000027                     	ds	1
   432  000028                     ___ftdiv@f3:
   433                           	opt stack 0
   434                           
   435                           ; 3 bytes @ 0x27
   436  000028                     	ds	1
   437  000029                     ___altoft@exp:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x28
   441  000029                     	ds	1
   442  00002A                     ___altoft@sign:
   443                           	opt stack 0
   444                           
   445                           ; 1 bytes @ 0x29
   446  00002A                     	ds	1
   447  00002B                     ___ftdiv@exp:
   448                           	opt stack 0
   449                           
   450                           ; 1 bytes @ 0x2A
   451  00002B                     	ds	1
   452  00002C                     ___ftdiv@sign:
   453                           	opt stack 0
   454                           
   455                           ; 1 bytes @ 0x2B
   456  00002C                     	ds	1
   457  00002D                     ?___ftmul:
   458                           	opt stack 0
   459  00002D                     Usart_Init@x:
   460                           	opt stack 0
   461  00002D                     ___ftmul@f1:
   462                           	opt stack 0
   463                           
   464                           ; 3 bytes @ 0x2C
   465  00002D                     	ds	3
   466  000030                     ___ftmul@f2:
   467                           	opt stack 0
   468                           
   469                           ; 3 bytes @ 0x2F
   470  000030                     	ds	3
   471  000033                     ??___ftmul:
   472                           
   473                           ; 1 bytes @ 0x32
   474  000033                     	ds	3
   475  000036                     ___ftmul@exp:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x35
   479  000036                     	ds	1
   480  000037                     ___ftmul@f3_as_product:
   481                           	opt stack 0
   482                           
   483                           ; 3 bytes @ 0x36
   484  000037                     	ds	3
   485  00003A                     ___ftmul@cntr:
   486                           	opt stack 0
   487                           
   488                           ; 1 bytes @ 0x39
   489  00003A                     	ds	1
   490  00003B                     ___ftmul@sign:
   491                           	opt stack 0
   492                           
   493                           ; 1 bytes @ 0x3A
   494  00003B                     	ds	1
   495  00003C                     ?___fttol:
   496                           	opt stack 0
   497  00003C                     ___fttol@f1:
   498                           	opt stack 0
   499                           
   500                           ; 3 bytes @ 0x3B
   501  00003C                     	ds	4
   502  000040                     ??___fttol:
   503                           
   504                           ; 1 bytes @ 0x3F
   505  000040                     	ds	5
   506                           tblptru	equ	0xFF8
   507                           tblptrh	equ	0xFF7
   508                           tblptrl	equ	0xFF6
   509                           tablat	equ	0xFF5
   510                           postinc0	equ	0xFEE
   511                           postdec1	equ	0xFE5
   512                           fsr1l	equ	0xFE1
   513                           
   514 ;;
   515 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   516 ;;
   517 ;; *************** function _main *****************
   518 ;; Defined at:
   519 ;;		line 57 in file "main.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;		None
   522 ;; Auto vars:     Size  Location     Type
   523 ;;  buf             5   14[BANK0 ] unsigned char [5]
   524 ;;  ConvertSpeed    2   21[BANK0 ] int 
   525 ;;  adcVal          2   19[BANK0 ] unsigned int 
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      void 
   528 ;; Registers used:
   529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   535 ;;      Params:         0       0       0       0       0       0       0       0       0
   536 ;;      Locals:         0       9       0       0       0       0       0       0       0
   537 ;;      Temps:          0       2       0       0       0       0       0       0       0
   538 ;;      Totals:         0      11       0       0       0       0       0       0       0
   539 ;;Total ram usage:       11 bytes
   540 ;; Hardware stack levels required when called:    4
   541 ;; This function calls:
   542 ;;		_ADC_Init
   543 ;;		_ADC_read
   544 ;;		_Check_ModeWork
   545 ;;		_Check_button_direction
   546 ;;		_PWM_Init
   547 ;;		_PWM_SetValue
   548 ;;		_Port_Init
   549 ;;		_Ressieve_String
   550 ;;		_Timer1_Init
   551 ;;		_Usart_Init
   552 ;;		___ftmul
   553 ;;		___fttol
   554 ;;		___lwtoft
   555 ;;		___wmul
   556 ;;		_atoi
   557 ;; This function is called by:
   558 ;;		Startup code after reset
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           	psect	text0
   563  000012                     __ptext0:
   564                           	opt stack 0
   565  000012                     _main:
   566                           	opt stack 27
   567                           
   568                           ;main.c: 59: GIE=1;
   569                           
   570                           ;incstack = 0
   571  000012  8EF2               	bsf	intcon,7,c	;volatile
   572                           
   573                           ;main.c: 60: PEIE=1;
   574  000014  8CF2               	bsf	intcon,6,c	;volatile
   575                           
   576                           ;main.c: 62: Port_Init();
   577  000016  EC3F  F006         	call	_Port_Init	;wreg free
   578                           
   579                           ;main.c: 63: Timer1_Init();
   580  00001A  EC57  F006         	call	_Timer1_Init	;wreg free
   581                           
   582                           ;main.c: 64: PWM_Init();
   583  00001E  EC58  F005         	call	_PWM_Init	;wreg free
   584                           
   585                           ;main.c: 65: PWM_SetValue(900);
   586  000022  0E03               	movlw	3
   587  000024  0100               	movlb	0	; () banked
   588  000026  6F67               	movwf	(PWM_SetValue@val+1)& (0+255),b
   589  000028  0E84               	movlw	132
   590  00002A  6F66               	movwf	PWM_SetValue@val& (0+255),b
   591  00002C  ECA0  F002         	call	_PWM_SetValue	;wreg free
   592                           
   593                           ;main.c: 66: Usart_Init(9600);
   594  000030  0E80               	movlw	128
   595  000032  6E21               	movwf	Usart_Init@baud,c
   596  000034  0E25               	movlw	37
   597  000036  6E22               	movwf	Usart_Init@baud+1,c
   598  000038  0E00               	movlw	0
   599  00003A  6E23               	movwf	Usart_Init@baud+2,c
   600  00003C  0E00               	movlw	0
   601  00003E  6E24               	movwf	Usart_Init@baud+3,c
   602  000040  EC15  F001         	call	_Usart_Init	;wreg free
   603                           
   604                           ;main.c: 67: ADC_Init(5.0);
   605  000044  0E00               	movlw	0
   606  000046  6E13               	movwf	ADC_Init@Uref,c
   607  000048  0EA0               	movlw	160
   608  00004A  6E14               	movwf	ADC_Init@Uref+1,c
   609  00004C  0E40               	movlw	64
   610  00004E  6E15               	movwf	ADC_Init@Uref+2,c
   611  000050  EC4B  F006         	call	_ADC_Init	;wreg free
   612  000054                     
   613                           ;main.c: 74: {
   614                           ;main.c: 75: if(Check_ModeWork()==1)
   615  000054  EC0B  F006         	call	_Check_ModeWork	;wreg free
   616  000058  06E8               	decf	wreg,f,c
   617  00005A  A4D8               	btfss	status,2,c
   618  00005C  D015               	goto	l106
   619                           
   620                           ;main.c: 76: {
   621                           ;main.c: 78: Ressieve_String(buf,2);
   622  00005E  0E6E               	movlw	low main@buf
   623  000060  6E13               	movwf	Ressieve_String@buffer,c
   624  000062  0E00               	movlw	high main@buf
   625  000064  6E14               	movwf	Ressieve_String@buffer+1,c
   626  000066  0E00               	movlw	0
   627  000068  6E16               	movwf	Ressieve_String@length+1,c
   628  00006A  0E02               	movlw	2
   629  00006C  6E15               	movwf	Ressieve_String@length,c
   630  00006E  ECCE  F005         	call	_Ressieve_String	;wreg free
   631                           
   632                           ;main.c: 79: Uz_pwm=atoi(buf);
   633  000072  0E6E               	movlw	low main@buf
   634  000074  6E19               	movwf	atoi@s,c
   635  000076  0E00               	movlw	high main@buf
   636  000078  6E1A               	movwf	atoi@s+1,c
   637  00007A  ECF8  F003         	call	_atoi	;wreg free
   638  00007E  C019  F077         	movff	?_atoi,_Uz_pwm
   639  000082  C01A  F078         	movff	?_atoi+1,_Uz_pwm+1
   640                           
   641                           ;main.c: 81: }
   642  000086  D042               	goto	l109
   643  000088                     l106:
   644                           
   645                           ;main.c: 82: else if(Check_ModeWork()==0)
   646  000088  EC0B  F006         	call	_Check_ModeWork	;wreg free
   647  00008C  0900               	iorlw	0
   648  00008E  A4D8               	btfss	status,2,c
   649  000090  D03D               	goto	l109
   650                           
   651                           ;main.c: 83: {
   652                           ;main.c: 85: adcVal=ADC_read(0);
   653  000092  0E00               	movlw	0
   654  000094  EC8A  F005         	call	_ADC_read
   655  000098  C013  F073         	movff	?_ADC_read,main@adcVal
   656  00009C  C014  F074         	movff	?_ADC_read+1,main@adcVal+1
   657                           
   658                           ;main.c: 86: ConvertSpeed=adcVal*1.96;
   659  0000A0  0EE1               	movlw	225
   660  0000A2  6E30               	movwf	___ftmul@f2,c
   661  0000A4  0EFA               	movlw	250
   662  0000A6  6E31               	movwf	___ftmul@f2+1,c
   663  0000A8  0E3F               	movlw	63
   664  0000AA  6E32               	movwf	___ftmul@f2+2,c
   665  0000AC  C073  F01B         	movff	main@adcVal,___lwtoft@c
   666  0000B0  C074  F01C         	movff	main@adcVal+1,___lwtoft@c+1
   667  0000B4  EC1E  F006         	call	___lwtoft	;wreg free
   668  0000B8  C01B  F02D         	movff	?___lwtoft,___ftmul@f1
   669  0000BC  C01C  F02E         	movff	?___lwtoft+1,___ftmul@f1+1
   670  0000C0  C01D  F02F         	movff	?___lwtoft+2,___ftmul@f1+2
   671  0000C4  EC26  F002         	call	___ftmul	;wreg free
   672  0000C8  C02D  F03C         	movff	?___ftmul,___fttol@f1
   673  0000CC  C02E  F03D         	movff	?___ftmul+1,___fttol@f1+1
   674  0000D0  C02F  F03E         	movff	?___ftmul+2,___fttol@f1+2
   675  0000D4  ECAA  F001         	call	___fttol	;wreg free
   676  0000D8  C03C  F075         	movff	?___fttol,main@ConvertSpeed
   677  0000DC  C03D  F076         	movff	?___fttol+1,main@ConvertSpeed+1
   678                           
   679                           ;main.c: 87: Uz_pwm=ConvertSpeed;
   680  0000E0  C075  F077         	movff	main@ConvertSpeed,_Uz_pwm
   681  0000E4  C076  F078         	movff	main@ConvertSpeed+1,_Uz_pwm+1
   682                           
   683                           ;main.c: 88: if(Check_button_direction()==1)
   684  0000E8  ECF8  F005         	call	_Check_button_direction	;wreg free
   685  0000EC  06E8               	decf	wreg,f,c
   686  0000EE  A4D8               	btfss	status,2,c
   687  0000F0  D00D               	goto	l109
   688                           
   689                           ;main.c: 89: {
   690                           ;main.c: 90: Uz_pwm*=-1;
   691  0000F2  C077  F013         	movff	_Uz_pwm,___wmul@multiplier
   692  0000F6  C078  F014         	movff	_Uz_pwm+1,___wmul@multiplier+1
   693  0000FA  0EFF               	movlw	255
   694  0000FC  6E16               	movwf	___wmul@multiplicand+1,c
   695  0000FE  6815               	setf	___wmul@multiplicand,c
   696  000100  ECE5  F005         	call	___wmul	;wreg free
   697  000104  C013  F077         	movff	?___wmul,_Uz_pwm
   698  000108  C014  F078         	movff	?___wmul+1,_Uz_pwm+1
   699  00010C                     l109:
   700                           
   701                           ;main.c: 91: }
   702                           ;main.c: 92: }
   703                           ;main.c: 95: if(Uz_pwm>2000)
   704  00010C  0100               	movlb	0	; () banked
   705  00010E  BF78               	btfsc	(_Uz_pwm+1)& (0+255),7,b
   706  000110  D00A               	goto	l110
   707  000112  0ED1               	movlw	209
   708  000114  5D77               	subwf	_Uz_pwm& (0+255),w,b
   709  000116  0E07               	movlw	7
   710  000118  5978               	subwfb	(_Uz_pwm+1)& (0+255),w,b
   711  00011A  A0D8               	btfss	status,0,c
   712  00011C  D004               	goto	l110
   713                           
   714                           ; BSR set to: 0
   715                           ;main.c: 96: {
   716                           ;main.c: 97: Uz_pwm=2000;
   717  00011E  0E07               	movlw	7
   718  000120  6F78               	movwf	(_Uz_pwm+1)& (0+255),b
   719  000122  0ED0               	movlw	208
   720  000124  6F77               	movwf	_Uz_pwm& (0+255),b
   721  000126                     l110:
   722                           
   723                           ; BSR set to: 0
   724                           ;main.c: 98: }
   725                           ;main.c: 99: if(Uz_pwm<-2000)
   726                           
   727                           ; BSR set to: 0
   728  000126  AF78               	btfss	(_Uz_pwm+1)& (0+255),7,b
   729  000128  D00A               	goto	l111
   730  00012A  0E30               	movlw	48
   731  00012C  5D77               	subwf	_Uz_pwm& (0+255),w,b
   732  00012E  0EF8               	movlw	248
   733  000130  5978               	subwfb	(_Uz_pwm+1)& (0+255),w,b
   734  000132  B0D8               	btfsc	status,0,c
   735  000134  D004               	goto	l111
   736                           
   737                           ; BSR set to: 0
   738                           ;main.c: 100: {
   739                           ;main.c: 101: Uz_pwm=-2000;
   740  000136  0EF8               	movlw	248
   741  000138  6F78               	movwf	(_Uz_pwm+1)& (0+255),b
   742  00013A  0E30               	movlw	48
   743  00013C  6F77               	movwf	_Uz_pwm& (0+255),b
   744  00013E                     l111:
   745                           
   746                           ; BSR set to: 0
   747                           ;main.c: 102: }
   748                           ;main.c: 104: if(Uz_pwm>0)
   749                           
   750                           ; BSR set to: 0
   751  00013E  BF78               	btfsc	(_Uz_pwm+1)& (0+255),7,b
   752  000140  D033               	goto	l115
   753  000142  5178               	movf	(_Uz_pwm+1)& (0+255),w,b
   754  000144  E127               	bnz	l2010
   755  000146  0577               	decf	_Uz_pwm& (0+255),w,b
   756  000148  B0D8               	btfsc	status,0,c
   757  00014A  D024               	goto	l113
   758  00014C  D02D               	goto	l115
   759  00014E                     
   760                           ; BSR set to: 0
   761                           ;main.c: 109: {
   762                           ;main.c: 110: Phs_n_pwm1=0;
   763                           
   764                           ; BSR set to: 0
   765  00014E  0E00               	movlw	0
   766  000150  6F7B               	movwf	_Phs_n_pwm1& (0+255),b
   767                           
   768                           ;main.c: 111: Phs_z_pwm1=0;
   769  000152  0E00               	movlw	0
   770  000154  6F7A               	movwf	_Phs_z_pwm1& (0+255),b
   771                           
   772                           ;main.c: 112: TMR1=0;
   773  000156  0E00               	movlw	0
   774  000158  6ECF               	movwf	4047,c	;volatile
   775  00015A  0E00               	movlw	0
   776  00015C  6ECE               	movwf	4046,c	;volatile
   777                           
   778                           ; BSR set to: 0
   779                           ;main.c: 113: TMR1IE=1;
   780  00015E  809D               	bsf	3997,0,c	;volatile
   781                           
   782                           ; BSR set to: 0
   783                           ;main.c: 114: TMR1ON=1;
   784  000160  80CD               	bsf	4045,0,c	;volatile
   785                           
   786                           ;main.c: 115: PORTD=0x0B;
   787  000162  0E0B               	movlw	11
   788  000164  6E83               	movwf	3971,c	;volatile
   789                           
   790                           ;main.c: 116: Phs_p_pwm1=1;
   791  000166  0E01               	movlw	1
   792  000168  D013               	goto	L2
   793  00016A                     
   794                           ; BSR set to: 0
   795                           ;main.c: 120: {
   796                           ;main.c: 121: if(TMR1>=Uz_pwm)
   797                           
   798                           ; BSR set to: 0
   799  00016A  5177               	movf	_Uz_pwm& (0+255),w,b
   800  00016C  5CCE               	subwf	4046,w,c	;volatile
   801  00016E  5178               	movf	(_Uz_pwm+1)& (0+255),w,b
   802  000170  58CF               	subwfb	4047,w,c	;volatile
   803  000172  A0D8               	btfss	status,0,c
   804  000174  D019               	goto	l115
   805                           
   806                           ; BSR set to: 0
   807                           ;main.c: 122: {
   808                           ;main.c: 123: PORTD = 0x0F;
   809  000176  0E0F               	movlw	15
   810  000178  6E83               	movwf	3971,c	;volatile
   811                           
   812                           ;main.c: 124: Phs_p_pwm1 = 2;
   813  00017A  0E02               	movlw	2
   814  00017C  D009               	goto	L2
   815  00017E                     
   816                           ; BSR set to: 0
   817                           ;main.c: 130: {
   818                           ;main.c: 131: if(TMR1>=Uz_pwm)
   819                           
   820                           ; BSR set to: 0
   821  00017E  5177               	movf	_Uz_pwm& (0+255),w,b
   822  000180  5CCE               	subwf	4046,w,c	;volatile
   823  000182  5178               	movf	(_Uz_pwm+1)& (0+255),w,b
   824  000184  58CF               	subwfb	4047,w,c	;volatile
   825  000186  A0D8               	btfss	status,0,c
   826  000188  D00F               	goto	l115
   827                           
   828                           ; BSR set to: 0
   829                           ;main.c: 132: {
   830                           ;main.c: 133: PORTD = 0x0A;
   831  00018A  0E0A               	movlw	10
   832  00018C  6E83               	movwf	3971,c	;volatile
   833                           
   834                           ;main.c: 134: Phs_p_pwm1 = 4;
   835  00018E  0E04               	movlw	4
   836  000190                     L2:
   837  000190  6F79               	movwf	_Phs_p_pwm1& (0+255),b
   838                           
   839                           ; BSR set to: 0
   840                           ;main.c: 137: }
   841                           ;main.c: 138: }
   842                           
   843                           ; BSR set to: 0
   844                           ;main.c: 135: }
   845                           ;main.c: 136: break;
   846  000192  D00A               	goto	l115
   847  000194                     l113:
   848  000194                     l2010:
   849                           
   850                           ; BSR set to: 0
   851  000194  5179               	movf	_Phs_p_pwm1& (0+255),w,b
   852                           
   853                           ; Switch size 1, requested type "space"
   854                           ; Number of cases is 3, Range of values is 0 to 3
   855                           ; switch strategies available:
   856                           ; Name         Instructions Cycles
   857                           ; simple_byte           10     6 (average)
   858                           ;	Chosen strategy is simple_byte
   859  000196  0A00               	xorlw	0	; case 0
   860  000198  B4D8               	btfsc	status,2,c
   861  00019A  D7D9               	goto	l114
   862  00019C  0A01               	xorlw	1	; case 1
   863  00019E  B4D8               	btfsc	status,2,c
   864  0001A0  D7E4               	goto	l116
   865  0001A2  0A02               	xorlw	2	; case 3
   866  0001A4  B4D8               	btfsc	status,2,c
   867  0001A6  D7EB               	goto	l118
   868  0001A8                     l115:
   869                           
   870                           ; BSR set to: 0
   871                           ;main.c: 139: }
   872                           ;main.c: 141: if(Uz_pwm<0)
   873                           
   874                           ; BSR set to: 0
   875                           
   876                           ; BSR set to: 0
   877  0001A8  BF78               	btfsc	(_Uz_pwm+1)& (0+255),7,b
   878  0001AA  D034               	goto	l121
   879  0001AC  D753               	goto	l105
   880  0001AE                     
   881                           ; BSR set to: 0
   882                           ;main.c: 146: {
   883                           ;main.c: 147: Phs_p_pwm1=0;
   884                           
   885                           ; BSR set to: 0
   886  0001AE  0E00               	movlw	0
   887  0001B0  6F79               	movwf	_Phs_p_pwm1& (0+255),b
   888                           
   889                           ;main.c: 148: Phs_z_pwm1=0;
   890  0001B2  0E00               	movlw	0
   891  0001B4  6F7A               	movwf	_Phs_z_pwm1& (0+255),b
   892                           
   893                           ;main.c: 149: TMR1=0;
   894  0001B6  0E00               	movlw	0
   895  0001B8  6ECF               	movwf	4047,c	;volatile
   896  0001BA  0E00               	movlw	0
   897  0001BC  6ECE               	movwf	4046,c	;volatile
   898                           
   899                           ; BSR set to: 0
   900                           ;main.c: 150: TMR1IE=1;
   901  0001BE  809D               	bsf	3997,0,c	;volatile
   902                           
   903                           ; BSR set to: 0
   904                           ;main.c: 151: TMR1ON=1;
   905  0001C0  80CD               	bsf	4045,0,c	;volatile
   906                           
   907                           ;main.c: 152: PORTD = 0x0E;
   908  0001C2  0E0E               	movlw	14
   909  0001C4  6E83               	movwf	3971,c	;volatile
   910                           
   911                           ;main.c: 153: Phs_n_pwm1 = 1;
   912  0001C6  0E01               	movlw	1
   913  0001C8  D023               	goto	L4
   914  0001CA                     
   915                           ; BSR set to: 0
   916                           ;main.c: 158: {
   917                           ;main.c: 159: if(TMR1>=(0-Uz_pwm))
   918                           
   919                           ; BSR set to: 0
   920  0001CA  C077  F06C         	movff	_Uz_pwm,??_main
   921  0001CE  C078  F06D         	movff	_Uz_pwm+1,??_main+1
   922  0001D2  1F6C               	comf	??_main& (0+255),f,b
   923  0001D4  1F6D               	comf	(??_main+1)& (0+255),f,b
   924  0001D6  4B6C               	infsnz	??_main& (0+255),f,b
   925  0001D8  2B6D               	incf	(??_main+1)& (0+255),f,b
   926  0001DA  516C               	movf	??_main& (0+255),w,b
   927  0001DC  5CCE               	subwf	4046,w,c	;volatile
   928  0001DE  516D               	movf	(??_main+1)& (0+255),w,b
   929  0001E0  58CF               	subwfb	4047,w,c	;volatile
   930  0001E2  A0D8               	btfss	status,0,c
   931  0001E4  D737               	goto	l105
   932                           
   933                           ; BSR set to: 0
   934                           ;main.c: 160: {
   935                           ;main.c: 162: PORTD=0x0F;
   936  0001E6  0E0F               	movlw	15
   937  0001E8  6E83               	movwf	3971,c	;volatile
   938                           
   939                           ;main.c: 163: Phs_n_pwm1=2;
   940  0001EA  0E02               	movlw	2
   941  0001EC  D011               	goto	L4
   942  0001EE                     
   943                           ; BSR set to: 0
   944                           ;main.c: 170: {
   945                           ;main.c: 171: if(TMR1>=(0-Uz_pwm))
   946                           
   947                           ; BSR set to: 0
   948  0001EE  C077  F06C         	movff	_Uz_pwm,??_main
   949  0001F2  C078  F06D         	movff	_Uz_pwm+1,??_main+1
   950  0001F6  1F6C               	comf	??_main& (0+255),f,b
   951  0001F8  1F6D               	comf	(??_main+1)& (0+255),f,b
   952  0001FA  4B6C               	infsnz	??_main& (0+255),f,b
   953  0001FC  2B6D               	incf	(??_main+1)& (0+255),f,b
   954  0001FE  516C               	movf	??_main& (0+255),w,b
   955  000200  5CCE               	subwf	4046,w,c	;volatile
   956  000202  516D               	movf	(??_main+1)& (0+255),w,b
   957  000204  58CF               	subwfb	4047,w,c	;volatile
   958  000206  A0D8               	btfss	status,0,c
   959  000208  D725               	goto	l105
   960                           
   961                           ; BSR set to: 0
   962                           ;main.c: 172: {
   963                           ;main.c: 173: PORTD=0x0A;
   964  00020A  0E0A               	movlw	10
   965  00020C  6E83               	movwf	3971,c	;volatile
   966                           
   967                           ;main.c: 174: Phs_n_pwm1 = 4;
   968  00020E  0E04               	movlw	4
   969  000210                     L4:
   970  000210  6F7B               	movwf	_Phs_n_pwm1& (0+255),b
   971                           
   972                           ; BSR set to: 0
   973                           ;main.c: 178: }
   974                           ;main.c: 179: }
   975                           
   976                           ; BSR set to: 0
   977                           ;main.c: 176: }
   978                           ;main.c: 177: break;
   979  000212  D720               	goto	l105
   980  000214                     l121:
   981                           
   982                           ; BSR set to: 0
   983                           
   984                           ; BSR set to: 0
   985  000214  517B               	movf	_Phs_n_pwm1& (0+255),w,b
   986                           
   987                           ; Switch size 1, requested type "space"
   988                           ; Number of cases is 3, Range of values is 0 to 3
   989                           ; switch strategies available:
   990                           ; Name         Instructions Cycles
   991                           ; simple_byte           10     6 (average)
   992                           ;	Chosen strategy is simple_byte
   993  000216  0A00               	xorlw	0	; case 0
   994  000218  B4D8               	btfsc	status,2,c
   995  00021A  D7C9               	goto	l122
   996  00021C  0A02               	xorlw	2	; case 2
   997  00021E  B4D8               	btfsc	status,2,c
   998  000220  D7D4               	goto	l124
   999  000222  0A01               	xorlw	1	; case 3
  1000  000224  B4D8               	btfsc	status,2,c
  1001  000226  D7E3               	goto	l126
  1002                           
  1003                           ; BSR set to: 0
  1004                           
  1005                           ; BSR set to: 0
  1006                           
  1007                           ; BSR set to: 0
  1008  000228  D715               	goto	l105
  1009  00022A                     __end_of_main:
  1010                           	opt stack 0
  1011                           tblptru	equ	0xFF8
  1012                           tblptrh	equ	0xFF7
  1013                           tblptrl	equ	0xFF6
  1014                           tablat	equ	0xFF5
  1015                           intcon	equ	0xFF2
  1016                           postinc0	equ	0xFEE
  1017                           wreg	equ	0xFE8
  1018                           postdec1	equ	0xFE5
  1019                           fsr1l	equ	0xFE1
  1020                           status	equ	0xFD8
  1021                           
  1022 ;; *************** function _atoi *****************
  1023 ;; Defined at:
  1024 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\atoi.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  s               2   24[COMRAM] PTR const unsigned char 
  1027 ;;		 -> main@buf(5), 
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;  a               2   29[COMRAM] int 
  1030 ;;  sign            1   28[COMRAM] unsigned char 
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  2   24[COMRAM] int 
  1033 ;; Registers used:
  1034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1040 ;;      Params:         2       0       0       0       0       0       0       0       0
  1041 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1042 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1043 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1044 ;;Total ram usage:        7 bytes
  1045 ;; Hardware stack levels used:    1
  1046 ;; Hardware stack levels required when called:    2
  1047 ;; This function calls:
  1048 ;;		___wmul
  1049 ;;		_isdigit
  1050 ;; This function is called by:
  1051 ;;		_main
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           	psect	text1
  1056  0007F0                     __ptext1:
  1057                           	opt stack 0
  1058  0007F0                     _atoi:
  1059                           	opt stack 28
  1060                           
  1061                           ; BSR set to: 0
  1062                           ;incstack = 0
  1063  0007F0  D002               	goto	l416
  1064  0007F2  4A19               	infsnz	atoi@s,f,c
  1065  0007F4  2A1A               	incf	atoi@s+1,f,c
  1066  0007F6                     l416:
  1067  0007F6  C019  FFD9         	movff	atoi@s,fsr2l
  1068  0007FA  C01A  FFDA         	movff	atoi@s+1,fsr2h
  1069  0007FE  0E20               	movlw	32
  1070  000800  18DE               	xorwf	postinc2,w,c
  1071  000802  B4D8               	btfsc	status,2,c
  1072  000804  D7F6               	goto	l417
  1073  000806  C019  FFD9         	movff	atoi@s,fsr2l
  1074  00080A  C01A  FFDA         	movff	atoi@s+1,fsr2h
  1075  00080E  0E09               	movlw	9
  1076  000810  18DE               	xorwf	postinc2,w,c
  1077  000812  B4D8               	btfsc	status,2,c
  1078  000814  D7EE               	goto	l417
  1079  000816  0E00               	movlw	0
  1080  000818  6E1F               	movwf	atoi@a+1,c
  1081  00081A  0E00               	movlw	0
  1082  00081C  6E1E               	movwf	atoi@a,c
  1083  00081E  0E00               	movlw	0
  1084  000820  6E1D               	movwf	atoi@sign,c
  1085  000822  C019  FFD9         	movff	atoi@s,fsr2l
  1086  000826  C01A  FFDA         	movff	atoi@s+1,fsr2h
  1087  00082A  0E2D               	movlw	45
  1088  00082C  18DE               	xorwf	postinc2,w,c
  1089  00082E  A4D8               	btfss	status,2,c
  1090  000830  D002               	goto	l419
  1091  000832  2A1D               	incf	atoi@sign,f,c
  1092  000834  D024               	goto	l1750
  1093  000836                     l419:
  1094  000836  C019  FFD9         	movff	atoi@s,fsr2l
  1095  00083A  C01A  FFDA         	movff	atoi@s+1,fsr2h
  1096  00083E  0E2B               	movlw	43
  1097  000840  18DE               	xorwf	postinc2,w,c
  1098  000842  A4D8               	btfss	status,2,c
  1099  000844  D01E               	goto	l422
  1100  000846  D01B               	goto	l1750
  1101  000848  C01E  F013         	movff	atoi@a,___wmul@multiplier
  1102  00084C  C01F  F014         	movff	atoi@a+1,___wmul@multiplier+1
  1103  000850  0E00               	movlw	0
  1104  000852  6E16               	movwf	___wmul@multiplicand+1,c
  1105  000854  0E0A               	movlw	10
  1106  000856  6E15               	movwf	___wmul@multiplicand,c
  1107  000858  ECE5  F005         	call	___wmul	;wreg free
  1108  00085C  C019  FFD9         	movff	atoi@s,fsr2l
  1109  000860  C01A  FFDA         	movff	atoi@s+1,fsr2h
  1110  000864  50DF               	movf	indf2,w,c
  1111  000866  6E1B               	movwf	??_atoi& (0+255),c
  1112  000868  6A1C               	clrf	(??_atoi+1)& (0+255),c
  1113  00086A  5013               	movf	?___wmul,w,c
  1114  00086C  261B               	addwf	??_atoi,f,c
  1115  00086E  5014               	movf	?___wmul+1,w,c
  1116  000870  221C               	addwfc	??_atoi+1,f,c
  1117  000872  0ED0               	movlw	208
  1118  000874  241B               	addwf	??_atoi,w,c
  1119  000876  6E1E               	movwf	atoi@a,c
  1120  000878  0EFF               	movlw	255
  1121  00087A  201C               	addwfc	??_atoi+1,w,c
  1122  00087C  6E1F               	movwf	atoi@a+1,c
  1123  00087E                     l1750:
  1124  00087E  4A19               	infsnz	atoi@s,f,c
  1125  000880  2A1A               	incf	atoi@s+1,f,c
  1126  000882                     l422:
  1127  000882  C019  FFD9         	movff	atoi@s,fsr2l
  1128  000886  C01A  FFDA         	movff	atoi@s+1,fsr2h
  1129  00088A  50DF               	movf	indf2,w,c
  1130  00088C  EC30  F006         	call	_isdigit
  1131  000890  B0D8               	btfsc	status,0,c
  1132  000892  D7DA               	goto	l423
  1133  000894  501D               	movf	atoi@sign,w,c
  1134  000896  B4D8               	btfsc	status,2,c
  1135  000898  D00D               	goto	l425
  1136  00089A  C01E  F01B         	movff	atoi@a,??_atoi
  1137  00089E  C01F  F01C         	movff	atoi@a+1,??_atoi+1
  1138  0008A2  1E1B               	comf	??_atoi,f,c
  1139  0008A4  1E1C               	comf	??_atoi+1,f,c
  1140  0008A6  4A1B               	infsnz	??_atoi,f,c
  1141  0008A8  2A1C               	incf	??_atoi+1,f,c
  1142  0008AA  C01B  F019         	movff	??_atoi,?_atoi
  1143  0008AE  C01C  F01A         	movff	??_atoi+1,?_atoi+1
  1144  0008B2  0012               	return	
  1145  0008B4                     l425:
  1146  0008B4  C01E  F019         	movff	atoi@a,?_atoi
  1147  0008B8  C01F  F01A         	movff	atoi@a+1,?_atoi+1
  1148  0008BC  0012               	return		;funcret
  1149  0008BE                     __end_of_atoi:
  1150                           	opt stack 0
  1151                           tblptru	equ	0xFF8
  1152                           tblptrh	equ	0xFF7
  1153                           tblptrl	equ	0xFF6
  1154                           tablat	equ	0xFF5
  1155                           intcon	equ	0xFF2
  1156                           postinc0	equ	0xFEE
  1157                           wreg	equ	0xFE8
  1158                           postdec1	equ	0xFE5
  1159                           fsr1l	equ	0xFE1
  1160                           indf2	equ	0xFDF
  1161                           postinc2	equ	0xFDE
  1162                           fsr2h	equ	0xFDA
  1163                           fsr2l	equ	0xFD9
  1164                           status	equ	0xFD8
  1165                           
  1166 ;; *************** function _isdigit *****************
  1167 ;; Defined at:
  1168 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\isdigit.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  c               1    wreg     unsigned char 
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;  c               1   20[COMRAM] unsigned char 
  1173 ;; Return value:  Size  Location     Type
  1174 ;;		None               void
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1182 ;;      Params:         0       0       0       0       0       0       0       0       0
  1183 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1184 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1185 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1186 ;;Total ram usage:        3 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:    1
  1189 ;; This function calls:
  1190 ;;		Nothing
  1191 ;; This function is called by:
  1192 ;;		_atoi
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           	psect	text2
  1197  000C60                     __ptext2:
  1198                           	opt stack 0
  1199  000C60                     _isdigit:
  1200                           	opt stack 28
  1201                           
  1202                           ;incstack = 0
  1203                           ;isdigit@c stored from wreg
  1204  000C60  6E15               	movwf	isdigit@c,c
  1205  000C62  0E00               	movlw	0
  1206  000C64  6E14               	movwf	_isdigit$459,c
  1207  000C66  0E3A               	movlw	58
  1208  000C68  6015               	cpfslt	isdigit@c,c
  1209  000C6A  D005               	goto	l597
  1210  000C6C  0E2F               	movlw	47
  1211  000C6E  6415               	cpfsgt	isdigit@c,c
  1212  000C70  D002               	goto	l597
  1213  000C72  0E01               	movlw	1
  1214  000C74  6E14               	movwf	_isdigit$459,c
  1215  000C76                     l597:
  1216  000C76  C014  F013         	movff	_isdigit$459,??_isdigit
  1217  000C7A  3013               	rrcf	??_isdigit,w,c
  1218  000C7C  0012               	return	
  1219  000C7E                     __end_of_isdigit:
  1220                           	opt stack 0
  1221                           tblptru	equ	0xFF8
  1222                           tblptrh	equ	0xFF7
  1223                           tblptrl	equ	0xFF6
  1224                           tablat	equ	0xFF5
  1225                           intcon	equ	0xFF2
  1226                           postinc0	equ	0xFEE
  1227                           wreg	equ	0xFE8
  1228                           postdec1	equ	0xFE5
  1229                           fsr1l	equ	0xFE1
  1230                           indf2	equ	0xFDF
  1231                           postinc2	equ	0xFDE
  1232                           fsr2h	equ	0xFDA
  1233                           fsr2l	equ	0xFD9
  1234                           status	equ	0xFD8
  1235                           
  1236 ;; *************** function ___wmul *****************
  1237 ;; Defined at:
  1238 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;  multiplier      2   18[COMRAM] unsigned int 
  1241 ;;  multiplicand    2   20[COMRAM] unsigned int 
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;  product         2   22[COMRAM] unsigned int 
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  2   18[COMRAM] unsigned int 
  1246 ;; Registers used:
  1247 ;;		wreg, status,2, status,0, prodl, prodh
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1253 ;;      Params:         4       0       0       0       0       0       0       0       0
  1254 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1255 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1256 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1257 ;;Total ram usage:        6 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; Hardware stack levels required when called:    1
  1260 ;; This function calls:
  1261 ;;		Nothing
  1262 ;; This function is called by:
  1263 ;;		_main
  1264 ;;		_atoi
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text3
  1269  000BCA                     __ptext3:
  1270                           	opt stack 0
  1271  000BCA                     ___wmul:
  1272                           	opt stack 28
  1273                           
  1274                           ;incstack = 0
  1275  000BCA  5013               	movf	___wmul@multiplier,w,c
  1276  000BCC  0215               	mulwf	___wmul@multiplicand,c
  1277  000BCE  CFF3 F017          	movff	prodl,___wmul@product
  1278  000BD2  CFF4 F018          	movff	prodh,___wmul@product+1
  1279  000BD6  5013               	movf	___wmul@multiplier,w,c
  1280  000BD8  0216               	mulwf	___wmul@multiplicand+1,c
  1281  000BDA  50F3               	movf	prodl,w,c
  1282  000BDC  2618               	addwf	___wmul@product+1,f,c
  1283  000BDE  5014               	movf	___wmul@multiplier+1,w,c
  1284  000BE0  0215               	mulwf	___wmul@multiplicand,c
  1285  000BE2  50F3               	movf	prodl,w,c
  1286  000BE4  2618               	addwf	___wmul@product+1,f,c
  1287  000BE6  C017  F013         	movff	___wmul@product,?___wmul
  1288  000BEA  C018  F014         	movff	___wmul@product+1,?___wmul+1
  1289  000BEE  0012               	return	
  1290  000BF0                     __end_of___wmul:
  1291                           	opt stack 0
  1292                           tblptru	equ	0xFF8
  1293                           tblptrh	equ	0xFF7
  1294                           tblptrl	equ	0xFF6
  1295                           tablat	equ	0xFF5
  1296                           prodh	equ	0xFF4
  1297                           prodl	equ	0xFF3
  1298                           intcon	equ	0xFF2
  1299                           postinc0	equ	0xFEE
  1300                           wreg	equ	0xFE8
  1301                           postdec1	equ	0xFE5
  1302                           fsr1l	equ	0xFE1
  1303                           indf2	equ	0xFDF
  1304                           postinc2	equ	0xFDE
  1305                           fsr2h	equ	0xFDA
  1306                           fsr2l	equ	0xFD9
  1307                           status	equ	0xFD8
  1308                           
  1309 ;; *************** function _Usart_Init *****************
  1310 ;; Defined at:
  1311 ;;		line 7 in file "USART.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  baud            4   32[COMRAM] long 
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;  x               2   44[COMRAM] unsigned int 
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  1    wreg      void 
  1318 ;; Registers used:
  1319 ;;		wreg, status,2, status,0, cstack
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1325 ;;      Params:         4       0       0       0       0       0       0       0       0
  1326 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1327 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1328 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1329 ;;Total ram usage:       14 bytes
  1330 ;; Hardware stack levels used:    1
  1331 ;; Hardware stack levels required when called:    2
  1332 ;; This function calls:
  1333 ;;		___aldiv
  1334 ;; This function is called by:
  1335 ;;		_main
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           	psect	text4
  1340  00022A                     __ptext4:
  1341                           	opt stack 0
  1342  00022A                     _Usart_Init:
  1343                           	opt stack 28
  1344                           
  1345                           ;USART.c: 9: uint16_t x;
  1346                           ;USART.c: 10: x=((8000000-baud*64)/(baud*64));
  1347                           
  1348                           ;incstack = 0
  1349  00022A  C021  F025         	movff	Usart_Init@baud,??_Usart_Init
  1350  00022E  C022  F026         	movff	Usart_Init@baud+1,??_Usart_Init+1
  1351  000232  C023  F027         	movff	Usart_Init@baud+2,??_Usart_Init+2
  1352  000236  C024  F028         	movff	Usart_Init@baud+3,??_Usart_Init+3
  1353  00023A  0E06               	movlw	6
  1354  00023C                     u1275:
  1355  00023C  90D8               	bcf	status,0,c
  1356  00023E  3625               	rlcf	??_Usart_Init,f,c
  1357  000240  3626               	rlcf	??_Usart_Init+1,f,c
  1358  000242  3627               	rlcf	??_Usart_Init+2,f,c
  1359  000244  3628               	rlcf	??_Usart_Init+3,f,c
  1360  000246  2EE8               	decfsz	wreg,f,c
  1361  000248  D7F9               	goto	u1275
  1362  00024A  1E25               	comf	??_Usart_Init,f,c
  1363  00024C  1E26               	comf	??_Usart_Init+1,f,c
  1364  00024E  1E27               	comf	??_Usart_Init+2,f,c
  1365  000250  1E28               	comf	??_Usart_Init+3,f,c
  1366  000252  2A25               	incf	??_Usart_Init,f,c
  1367  000254  0E00               	movlw	0
  1368  000256  2226               	addwfc	??_Usart_Init+1,f,c
  1369  000258  2227               	addwfc	??_Usart_Init+2,f,c
  1370  00025A  2228               	addwfc	??_Usart_Init+3,f,c
  1371  00025C  0E00               	movlw	0
  1372  00025E  2425               	addwf	??_Usart_Init,w,c
  1373  000260  6E13               	movwf	___aldiv@dividend,c
  1374  000262  0E12               	movlw	18
  1375  000264  2026               	addwfc	??_Usart_Init+1,w,c
  1376  000266  6E14               	movwf	___aldiv@dividend+1,c
  1377  000268  0E7A               	movlw	122
  1378  00026A  2027               	addwfc	??_Usart_Init+2,w,c
  1379  00026C  6E15               	movwf	___aldiv@dividend+2,c
  1380  00026E  0E00               	movlw	0
  1381  000270  2028               	addwfc	??_Usart_Init+3,w,c
  1382  000272  6E16               	movwf	___aldiv@dividend+3,c
  1383  000274  C021  F029         	movff	Usart_Init@baud,??_Usart_Init+4
  1384  000278  C022  F02A         	movff	Usart_Init@baud+1,??_Usart_Init+5
  1385  00027C  C023  F02B         	movff	Usart_Init@baud+2,??_Usart_Init+6
  1386  000280  C024  F02C         	movff	Usart_Init@baud+3,??_Usart_Init+7
  1387  000284  0E06               	movlw	6
  1388  000286                     u1285:
  1389  000286  90D8               	bcf	status,0,c
  1390  000288  3629               	rlcf	??_Usart_Init+4,f,c
  1391  00028A  362A               	rlcf	??_Usart_Init+5,f,c
  1392  00028C  362B               	rlcf	??_Usart_Init+6,f,c
  1393  00028E  362C               	rlcf	??_Usart_Init+7,f,c
  1394  000290  2EE8               	decfsz	wreg,f,c
  1395  000292  D7F9               	goto	u1285
  1396  000294  C029  F017         	movff	??_Usart_Init+4,___aldiv@divisor
  1397  000298  C02A  F018         	movff	??_Usart_Init+5,___aldiv@divisor+1
  1398  00029C  C02B  F019         	movff	??_Usart_Init+6,___aldiv@divisor+2
  1399  0002A0  C02C  F01A         	movff	??_Usart_Init+7,___aldiv@divisor+3
  1400  0002A4  EC5F  F004         	call	___aldiv	;wreg free
  1401  0002A8  C013  F02D         	movff	?___aldiv,Usart_Init@x
  1402  0002AC  C014  F02E         	movff	?___aldiv+1,Usart_Init@x+1
  1403                           
  1404                           ;USART.c: 11: if(x>255)
  1405  0002B0  042E               	decf	Usart_Init@x+1,w,c
  1406  0002B2  A0D8               	btfss	status,0,c
  1407  0002B4  D045               	goto	l223
  1408                           
  1409                           ;USART.c: 12: {
  1410                           ;USART.c: 13: x = (8000000 - baud*16)/(baud*16);
  1411  0002B6  C021  F025         	movff	Usart_Init@baud,??_Usart_Init
  1412  0002BA  C022  F026         	movff	Usart_Init@baud+1,??_Usart_Init+1
  1413  0002BE  C023  F027         	movff	Usart_Init@baud+2,??_Usart_Init+2
  1414  0002C2  C024  F028         	movff	Usart_Init@baud+3,??_Usart_Init+3
  1415  0002C6  0E04               	movlw	4
  1416  0002C8                     u1305:
  1417  0002C8  90D8               	bcf	status,0,c
  1418  0002CA  3625               	rlcf	??_Usart_Init,f,c
  1419  0002CC  3626               	rlcf	??_Usart_Init+1,f,c
  1420  0002CE  3627               	rlcf	??_Usart_Init+2,f,c
  1421  0002D0  3628               	rlcf	??_Usart_Init+3,f,c
  1422  0002D2  2EE8               	decfsz	wreg,f,c
  1423  0002D4  D7F9               	goto	u1305
  1424  0002D6  1E25               	comf	??_Usart_Init,f,c
  1425  0002D8  1E26               	comf	??_Usart_Init+1,f,c
  1426  0002DA  1E27               	comf	??_Usart_Init+2,f,c
  1427  0002DC  1E28               	comf	??_Usart_Init+3,f,c
  1428  0002DE  2A25               	incf	??_Usart_Init,f,c
  1429  0002E0  0E00               	movlw	0
  1430  0002E2  2226               	addwfc	??_Usart_Init+1,f,c
  1431  0002E4  2227               	addwfc	??_Usart_Init+2,f,c
  1432  0002E6  2228               	addwfc	??_Usart_Init+3,f,c
  1433  0002E8  0E00               	movlw	0
  1434  0002EA  2425               	addwf	??_Usart_Init,w,c
  1435  0002EC  6E13               	movwf	___aldiv@dividend,c
  1436  0002EE  0E12               	movlw	18
  1437  0002F0  2026               	addwfc	??_Usart_Init+1,w,c
  1438  0002F2  6E14               	movwf	___aldiv@dividend+1,c
  1439  0002F4  0E7A               	movlw	122
  1440  0002F6  2027               	addwfc	??_Usart_Init+2,w,c
  1441  0002F8  6E15               	movwf	___aldiv@dividend+2,c
  1442  0002FA  0E00               	movlw	0
  1443  0002FC  2028               	addwfc	??_Usart_Init+3,w,c
  1444  0002FE  6E16               	movwf	___aldiv@dividend+3,c
  1445  000300  C021  F029         	movff	Usart_Init@baud,??_Usart_Init+4
  1446  000304  C022  F02A         	movff	Usart_Init@baud+1,??_Usart_Init+5
  1447  000308  C023  F02B         	movff	Usart_Init@baud+2,??_Usart_Init+6
  1448  00030C  C024  F02C         	movff	Usart_Init@baud+3,??_Usart_Init+7
  1449  000310  0E04               	movlw	4
  1450  000312                     u1315:
  1451  000312  90D8               	bcf	status,0,c
  1452  000314  3629               	rlcf	??_Usart_Init+4,f,c
  1453  000316  362A               	rlcf	??_Usart_Init+5,f,c
  1454  000318  362B               	rlcf	??_Usart_Init+6,f,c
  1455  00031A  362C               	rlcf	??_Usart_Init+7,f,c
  1456  00031C  2EE8               	decfsz	wreg,f,c
  1457  00031E  D7F9               	goto	u1315
  1458  000320  C029  F017         	movff	??_Usart_Init+4,___aldiv@divisor
  1459  000324  C02A  F018         	movff	??_Usart_Init+5,___aldiv@divisor+1
  1460  000328  C02B  F019         	movff	??_Usart_Init+6,___aldiv@divisor+2
  1461  00032C  C02C  F01A         	movff	??_Usart_Init+7,___aldiv@divisor+3
  1462  000330  EC5F  F004         	call	___aldiv	;wreg free
  1463  000334  C013  F02D         	movff	?___aldiv,Usart_Init@x
  1464  000338  C014  F02E         	movff	?___aldiv+1,Usart_Init@x+1
  1465                           
  1466                           ;USART.c: 14: SPBRG = x;
  1467  00033C  C02D  FFAF         	movff	Usart_Init@x,4015	;volatile
  1468  000340                     l223:
  1469                           
  1470                           ;USART.c: 17: }
  1471                           ;USART.c: 18: if(x<256)
  1472  000340  042E               	decf	Usart_Init@x+1,w,c
  1473  000342  B0D8               	btfsc	status,0,c
  1474  000344  0012               	return	
  1475                           
  1476                           ;USART.c: 19: {
  1477                           ;USART.c: 20: SYNC=1;
  1478  000346  88AC               	bsf	4012,4,c	;volatile
  1479                           
  1480                           ;USART.c: 21: SPEN=1;
  1481  000348  8EAB               	bsf	4011,7,c	;volatile
  1482                           
  1483                           ;USART.c: 22: TRISC7=1;
  1484  00034A  8E94               	bsf	3988,7,c	;volatile
  1485                           
  1486                           ;USART.c: 23: TRISC6=0;
  1487  00034C  9C94               	bcf	3988,6,c	;volatile
  1488                           
  1489                           ;USART.c: 24: CREN=1;
  1490  00034E  88AB               	bsf	4011,4,c	;volatile
  1491                           
  1492                           ;USART.c: 25: TXEN=1;
  1493  000350  8AAC               	bsf	4012,5,c	;volatile
  1494  000352  0012               	return	
  1495  000354                     __end_of_Usart_Init:
  1496                           	opt stack 0
  1497                           tblptru	equ	0xFF8
  1498                           tblptrh	equ	0xFF7
  1499                           tblptrl	equ	0xFF6
  1500                           tablat	equ	0xFF5
  1501                           prodh	equ	0xFF4
  1502                           prodl	equ	0xFF3
  1503                           intcon	equ	0xFF2
  1504                           postinc0	equ	0xFEE
  1505                           wreg	equ	0xFE8
  1506                           postdec1	equ	0xFE5
  1507                           fsr1l	equ	0xFE1
  1508                           indf2	equ	0xFDF
  1509                           postinc2	equ	0xFDE
  1510                           fsr2h	equ	0xFDA
  1511                           fsr2l	equ	0xFD9
  1512                           status	equ	0xFD8
  1513                           
  1514 ;; *************** function _Timer1_Init *****************
  1515 ;; Defined at:
  1516 ;;		line 255 in file "main.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;		None
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;		None
  1521 ;; Return value:  Size  Location     Type
  1522 ;;                  1    wreg      void 
  1523 ;; Registers used:
  1524 ;;		wreg, status,2
  1525 ;; Tracked objects:
  1526 ;;		On entry : 0/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1530 ;;      Params:         0       0       0       0       0       0       0       0       0
  1531 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1532 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1533 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1534 ;;Total ram usage:        0 bytes
  1535 ;; Hardware stack levels used:    1
  1536 ;; Hardware stack levels required when called:    1
  1537 ;; This function calls:
  1538 ;;		Nothing
  1539 ;; This function is called by:
  1540 ;;		_main
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           	psect	text5
  1545  000CAE                     __ptext5:
  1546                           	opt stack 0
  1547  000CAE                     _Timer1_Init:
  1548                           	opt stack 29
  1549                           
  1550                           ;main.c: 259: T1CKPS0=1;
  1551                           
  1552                           ;incstack = 0
  1553  000CAE  88CD               	bsf	4045,4,c	;volatile
  1554                           
  1555                           ;main.c: 260: T1CKPS1=0;
  1556  000CB0  9ACD               	bcf	4045,5,c	;volatile
  1557                           
  1558                           ;main.c: 263: T1OSCEN=1;
  1559  000CB2  86CD               	bsf	4045,3,c	;volatile
  1560                           
  1561                           ;main.c: 266: TMR1CS=0;
  1562  000CB4  92CD               	bcf	4045,1,c	;volatile
  1563                           
  1564                           ;main.c: 271: TMR1=0x0000;
  1565  000CB6  0E00               	movlw	0
  1566  000CB8  6ECF               	movwf	4047,c	;volatile
  1567  000CBA  0E00               	movlw	0
  1568  000CBC  6ECE               	movwf	4046,c	;volatile
  1569  000CBE  0012               	return		;funcret
  1570  000CC0                     __end_of_Timer1_Init:
  1571                           	opt stack 0
  1572                           tblptru	equ	0xFF8
  1573                           tblptrh	equ	0xFF7
  1574                           tblptrl	equ	0xFF6
  1575                           tablat	equ	0xFF5
  1576                           prodh	equ	0xFF4
  1577                           prodl	equ	0xFF3
  1578                           intcon	equ	0xFF2
  1579                           postinc0	equ	0xFEE
  1580                           wreg	equ	0xFE8
  1581                           postdec1	equ	0xFE5
  1582                           fsr1l	equ	0xFE1
  1583                           indf2	equ	0xFDF
  1584                           postinc2	equ	0xFDE
  1585                           fsr2h	equ	0xFDA
  1586                           fsr2l	equ	0xFD9
  1587                           status	equ	0xFD8
  1588                           
  1589 ;; *************** function _Ressieve_String *****************
  1590 ;; Defined at:
  1591 ;;		line 67 in file "USART.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;  buffer          2   18[COMRAM] PTR unsigned char 
  1594 ;;		 -> main@buf(5), 
  1595 ;;  length          2   20[COMRAM] unsigned int 
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;  i               2   22[COMRAM] unsigned int 
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  1    wreg      void 
  1600 ;; Registers used:
  1601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1607 ;;      Params:         4       0       0       0       0       0       0       0       0
  1608 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1609 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1610 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1611 ;;Total ram usage:        6 bytes
  1612 ;; Hardware stack levels used:    1
  1613 ;; Hardware stack levels required when called:    2
  1614 ;; This function calls:
  1615 ;;		_Uart_Read
  1616 ;; This function is called by:
  1617 ;;		_main
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text6
  1622  000B9C                     __ptext6:
  1623                           	opt stack 0
  1624  000B9C                     _Ressieve_String:
  1625                           	opt stack 28
  1626                           
  1627                           ;USART.c: 69: uint16_t i;
  1628                           ;USART.c: 70: for(i=0;i<length;i++)
  1629                           
  1630                           ;incstack = 0
  1631  000B9C  0E00               	movlw	0
  1632  000B9E  6E18               	movwf	Ressieve_String@i+1,c
  1633  000BA0  0E00               	movlw	0
  1634  000BA2  6E17               	movwf	Ressieve_String@i,c
  1635  000BA4  D00B               	goto	l249
  1636  000BA6                     
  1637                           ;USART.c: 71: {
  1638                           ;USART.c: 72: buffer[i]=Uart_Read();
  1639  000BA6  5017               	movf	Ressieve_String@i,w,c
  1640  000BA8  2413               	addwf	Ressieve_String@buffer,w,c
  1641  000BAA  6ED9               	movwf	fsr2l,c
  1642  000BAC  5018               	movf	Ressieve_String@i+1,w,c
  1643  000BAE  2014               	addwfc	Ressieve_String@buffer+1,w,c
  1644  000BB0  6EDA               	movwf	fsr2h,c
  1645  000BB2  EC60  F006         	call	_Uart_Read	;wreg free
  1646  000BB6  6EDF               	movwf	indf2,c
  1647  000BB8  4A17               	infsnz	Ressieve_String@i,f,c
  1648  000BBA  2A18               	incf	Ressieve_String@i+1,f,c
  1649  000BBC                     l249:
  1650  000BBC  5015               	movf	Ressieve_String@length,w,c
  1651  000BBE  5C17               	subwf	Ressieve_String@i,w,c
  1652  000BC0  5016               	movf	Ressieve_String@length+1,w,c
  1653  000BC2  5818               	subwfb	Ressieve_String@i+1,w,c
  1654  000BC4  B0D8               	btfsc	status,0,c
  1655  000BC6  0012               	return	
  1656  000BC8  D7EE               	goto	l250
  1657  000BCA                     __end_of_Ressieve_String:
  1658                           	opt stack 0
  1659                           tblptru	equ	0xFF8
  1660                           tblptrh	equ	0xFF7
  1661                           tblptrl	equ	0xFF6
  1662                           tablat	equ	0xFF5
  1663                           prodh	equ	0xFF4
  1664                           prodl	equ	0xFF3
  1665                           intcon	equ	0xFF2
  1666                           postinc0	equ	0xFEE
  1667                           wreg	equ	0xFE8
  1668                           postdec1	equ	0xFE5
  1669                           fsr1l	equ	0xFE1
  1670                           indf2	equ	0xFDF
  1671                           postinc2	equ	0xFDE
  1672                           fsr2h	equ	0xFDA
  1673                           fsr2l	equ	0xFD9
  1674                           status	equ	0xFD8
  1675                           
  1676 ;; *************** function _Uart_Read *****************
  1677 ;; Defined at:
  1678 ;;		line 59 in file "USART.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;		None
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;		None
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      unsigned char 
  1685 ;; Registers used:
  1686 ;;		wreg, status,2
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1692 ;;      Params:         0       0       0       0       0       0       0       0       0
  1693 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1694 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1695 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1696 ;;Total ram usage:        0 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    1
  1699 ;; This function calls:
  1700 ;;		Nothing
  1701 ;; This function is called by:
  1702 ;;		_Ressieve_String
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text7
  1707  000CC0                     __ptext7:
  1708                           	opt stack 0
  1709  000CC0                     _Uart_Read:
  1710                           	opt stack 28
  1711                           
  1712                           ;USART.c: 61: while(!RCIF);
  1713                           
  1714                           ;incstack = 0
  1715  000CC0  AA9E               	btfss	3998,5,c	;volatile
  1716  000CC2  D7FE               	goto	_Uart_Read
  1717                           
  1718                           ;USART.c: 62: return RCREG;
  1719  000CC4  50AE               	movf	4014,w,c	;volatile
  1720  000CC6  0012               	return	
  1721  000CC8                     __end_of_Uart_Read:
  1722                           	opt stack 0
  1723                           tblptru	equ	0xFF8
  1724                           tblptrh	equ	0xFF7
  1725                           tblptrl	equ	0xFF6
  1726                           tablat	equ	0xFF5
  1727                           prodh	equ	0xFF4
  1728                           prodl	equ	0xFF3
  1729                           intcon	equ	0xFF2
  1730                           postinc0	equ	0xFEE
  1731                           wreg	equ	0xFE8
  1732                           postdec1	equ	0xFE5
  1733                           fsr1l	equ	0xFE1
  1734                           indf2	equ	0xFDF
  1735                           postinc2	equ	0xFDE
  1736                           fsr2h	equ	0xFDA
  1737                           fsr2l	equ	0xFD9
  1738                           status	equ	0xFD8
  1739                           
  1740 ;; *************** function _Port_Init *****************
  1741 ;; Defined at:
  1742 ;;		line 186 in file "main.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;		None
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;		None
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  1    wreg      void 
  1749 ;; Registers used:
  1750 ;;		None
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1756 ;;      Params:         0       0       0       0       0       0       0       0       0
  1757 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1758 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1759 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1760 ;;Total ram usage:        0 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; Hardware stack levels required when called:    1
  1763 ;; This function calls:
  1764 ;;		Nothing
  1765 ;; This function is called by:
  1766 ;;		_main
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           	psect	text8
  1771  000C7E                     __ptext8:
  1772                           	opt stack 0
  1773  000C7E                     _Port_Init:
  1774                           	opt stack 29
  1775                           
  1776                           ;main.c: 188: TRISD0=0;
  1777                           
  1778                           ;incstack = 0
  1779  000C7E  9095               	bcf	3989,0,c	;volatile
  1780                           
  1781                           ;main.c: 189: TRISD1=0;
  1782  000C80  9295               	bcf	3989,1,c	;volatile
  1783                           
  1784                           ;main.c: 190: TRISD2=0;
  1785  000C82  9495               	bcf	3989,2,c	;volatile
  1786                           
  1787                           ;main.c: 191: TRISD3=0;
  1788  000C84  9695               	bcf	3989,3,c	;volatile
  1789                           
  1790                           ;main.c: 193: TRISC1=0;
  1791  000C86  9294               	bcf	3988,1,c	;volatile
  1792                           
  1793                           ;main.c: 195: TRISC0=1;
  1794  000C88  8094               	bsf	3988,0,c	;volatile
  1795                           
  1796                           ;main.c: 196: TRISB0=1;
  1797  000C8A  8093               	bsf	3987,0,c	;volatile
  1798                           
  1799                           ;main.c: 198: PORTDbits.RD0=0;
  1800  000C8C  9083               	bcf	3971,0,c	;volatile
  1801                           
  1802                           ;main.c: 199: PORTDbits.RD1=0;
  1803  000C8E  9283               	bcf	3971,1,c	;volatile
  1804                           
  1805                           ;main.c: 200: PORTDbits.RD2=0;
  1806  000C90  9483               	bcf	3971,2,c	;volatile
  1807                           
  1808                           ;main.c: 201: PORTDbits.RD3=0;
  1809  000C92  9683               	bcf	3971,3,c	;volatile
  1810  000C94  0012               	return		;funcret
  1811  000C96                     __end_of_Port_Init:
  1812                           	opt stack 0
  1813                           tblptru	equ	0xFF8
  1814                           tblptrh	equ	0xFF7
  1815                           tblptrl	equ	0xFF6
  1816                           tablat	equ	0xFF5
  1817                           prodh	equ	0xFF4
  1818                           prodl	equ	0xFF3
  1819                           intcon	equ	0xFF2
  1820                           postinc0	equ	0xFEE
  1821                           wreg	equ	0xFE8
  1822                           postdec1	equ	0xFE5
  1823                           fsr1l	equ	0xFE1
  1824                           indf2	equ	0xFDF
  1825                           postinc2	equ	0xFDE
  1826                           fsr2h	equ	0xFDA
  1827                           fsr2l	equ	0xFD9
  1828                           status	equ	0xFD8
  1829                           
  1830 ;; *************** function _PWM_SetValue *****************
  1831 ;; Defined at:
  1832 ;;		line 293 in file "main.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;  val             2    6[BANK0 ] unsigned int 
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;		None
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      void 
  1839 ;; Registers used:
  1840 ;;		wreg, status,2, status,0, cstack
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1846 ;;      Params:         0       2       0       0       0       0       0       0       0
  1847 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1848 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1849 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1850 ;;Total ram usage:        6 bytes
  1851 ;; Hardware stack levels used:    1
  1852 ;; Hardware stack levels required when called:    3
  1853 ;; This function calls:
  1854 ;;		___aldiv
  1855 ;;		___altoft
  1856 ;;		___ftdiv
  1857 ;;		___ftmul
  1858 ;;		___fttol
  1859 ;;		___lwtoft
  1860 ;; This function is called by:
  1861 ;;		_main
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           	psect	text9
  1866  000540                     __ptext9:
  1867                           	opt stack 0
  1868  000540                     _PWM_SetValue:
  1869                           	opt stack 27
  1870                           
  1871                           ;main.c: 295: if(val<1023)
  1872                           
  1873                           ;incstack = 0
  1874  000540  0100               	movlb	0	; () banked
  1875  000542  2966               	incf	PWM_SetValue@val& (0+255),w,b
  1876  000544  0E03               	movlw	3
  1877  000546  5967               	subwfb	(PWM_SetValue@val+1)& (0+255),w,b
  1878  000548  B0D8               	btfsc	status,0,c
  1879  00054A  0012               	return	
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;main.c: 296: {
  1883                           ;main.c: 297: val=((float)val /1023)*(8000000/(freq*4));
  1884  00054C  C045  F068         	movff	_freq,??_PWM_SetValue
  1885  000550  C046  F069         	movff	_freq+1,??_PWM_SetValue+1
  1886  000554  C047  F06A         	movff	_freq+2,??_PWM_SetValue+2
  1887  000558  C048  F06B         	movff	_freq+3,??_PWM_SetValue+3
  1888  00055C  0E02               	movlw	2
  1889  00055E                     u1725:
  1890  00055E  90D8               	bcf	status,0,c
  1891  000560  3768               	rlcf	??_PWM_SetValue& (0+255),f,b
  1892  000562  3769               	rlcf	(??_PWM_SetValue+1)& (0+255),f,b
  1893  000564  376A               	rlcf	(??_PWM_SetValue+2)& (0+255),f,b
  1894  000566  376B               	rlcf	(??_PWM_SetValue+3)& (0+255),f,b
  1895  000568  2EE8               	decfsz	wreg,f,c
  1896  00056A  D7F9               	goto	u1725
  1897  00056C  C068  F017         	movff	??_PWM_SetValue,___aldiv@divisor
  1898  000570  C069  F018         	movff	??_PWM_SetValue+1,___aldiv@divisor+1
  1899  000574  C06A  F019         	movff	??_PWM_SetValue+2,___aldiv@divisor+2
  1900  000578  C06B  F01A         	movff	??_PWM_SetValue+3,___aldiv@divisor+3
  1901  00057C  0E00               	movlw	0
  1902  00057E  6E13               	movwf	___aldiv@dividend,c
  1903  000580  0E12               	movlw	18
  1904  000582  6E14               	movwf	___aldiv@dividend+1,c
  1905  000584  0E7A               	movlw	122
  1906  000586  6E15               	movwf	___aldiv@dividend+2,c
  1907  000588  0E00               	movlw	0
  1908  00058A  6E16               	movwf	___aldiv@dividend+3,c
  1909  00058C  EC5F  F004         	call	___aldiv	;wreg free
  1910  000590  C013  F021         	movff	?___aldiv,___altoft@c
  1911  000594  C014  F022         	movff	?___aldiv+1,___altoft@c+1
  1912  000598  C015  F023         	movff	?___aldiv+2,___altoft@c+2
  1913  00059C  C016  F024         	movff	?___aldiv+3,___altoft@c+3
  1914  0005A0  EC1C  F005         	call	___altoft	;wreg free
  1915  0005A4  C021  F030         	movff	?___altoft,___ftmul@f2
  1916  0005A8  C022  F031         	movff	?___altoft+1,___ftmul@f2+1
  1917  0005AC  C023  F032         	movff	?___altoft+2,___ftmul@f2+2
  1918  0005B0  0EC0               	movlw	192
  1919  0005B2  6E21               	movwf	___ftdiv@f2,c
  1920  0005B4  0E7F               	movlw	127
  1921  0005B6  6E22               	movwf	___ftdiv@f2+1,c
  1922  0005B8  0E44               	movlw	68
  1923  0005BA  6E23               	movwf	___ftdiv@f2+2,c
  1924  0005BC  C066  F01B         	movff	PWM_SetValue@val,___lwtoft@c
  1925  0005C0  C067  F01C         	movff	PWM_SetValue@val+1,___lwtoft@c+1
  1926  0005C4  EC1E  F006         	call	___lwtoft	;wreg free
  1927  0005C8  C01B  F01E         	movff	?___lwtoft,___ftdiv@f1
  1928  0005CC  C01C  F01F         	movff	?___lwtoft+1,___ftdiv@f1+1
  1929  0005D0  C01D  F020         	movff	?___lwtoft+2,___ftdiv@f1+2
  1930  0005D4  EC15  F003         	call	___ftdiv	;wreg free
  1931  0005D8  C01E  F02D         	movff	?___ftdiv,___ftmul@f1
  1932  0005DC  C01F  F02E         	movff	?___ftdiv+1,___ftmul@f1+1
  1933  0005E0  C020  F02F         	movff	?___ftdiv+2,___ftmul@f1+2
  1934  0005E4  EC26  F002         	call	___ftmul	;wreg free
  1935  0005E8  C02D  F03C         	movff	?___ftmul,___fttol@f1
  1936  0005EC  C02E  F03D         	movff	?___ftmul+1,___fttol@f1+1
  1937  0005F0  C02F  F03E         	movff	?___ftmul+2,___fttol@f1+2
  1938  0005F4  ECAA  F001         	call	___fttol	;wreg free
  1939  0005F8  C03C  F066         	movff	?___fttol,PWM_SetValue@val
  1940  0005FC  C03D  F067         	movff	?___fttol+1,PWM_SetValue@val+1
  1941                           
  1942                           ;main.c: 298: DC2B1=val&1;
  1943  000600  0100               	movlb	0	; () banked
  1944  000602  A166               	btfss	PWM_SetValue@val& (0+255),0,b
  1945  000604  D002               	goto	u1730
  1946  000606  8ABA               	bsf	4026,5,c	;volatile
  1947  000608  D001               	goto	u1745
  1948  00060A                     u1730:
  1949  00060A  9ABA               	bcf	4026,5,c	;volatile
  1950  00060C                     u1745:
  1951                           
  1952                           ;main.c: 299: DC2B0=val&2;
  1953  00060C  98BA               	bcf	4026,4,c	;volatile
  1954                           
  1955                           ;main.c: 300: CCPR2L = val >> 2;
  1956  00060E  C066  F068         	movff	PWM_SetValue@val,??_PWM_SetValue
  1957  000612  C067  F069         	movff	PWM_SetValue@val+1,??_PWM_SetValue+1
  1958  000616  0100               	movlb	0	; () banked
  1959  000618  90D8               	bcf	status,0,c
  1960  00061A  3369               	rrcf	(??_PWM_SetValue+1)& (0+255),f,b
  1961  00061C  3368               	rrcf	??_PWM_SetValue& (0+255),f,b
  1962  00061E  90D8               	bcf	status,0,c
  1963  000620  3369               	rrcf	(??_PWM_SetValue+1)& (0+255),f,b
  1964  000622  3368               	rrcf	??_PWM_SetValue& (0+255),f,b
  1965  000624  5168               	movf	??_PWM_SetValue& (0+255),w,b
  1966  000626  6EBB               	movwf	4027,c	;volatile
  1967  000628  0012               	return	
  1968  00062A                     __end_of_PWM_SetValue:
  1969                           	opt stack 0
  1970                           tblptru	equ	0xFF8
  1971                           tblptrh	equ	0xFF7
  1972                           tblptrl	equ	0xFF6
  1973                           tablat	equ	0xFF5
  1974                           prodh	equ	0xFF4
  1975                           prodl	equ	0xFF3
  1976                           intcon	equ	0xFF2
  1977                           postinc0	equ	0xFEE
  1978                           wreg	equ	0xFE8
  1979                           postdec1	equ	0xFE5
  1980                           fsr1l	equ	0xFE1
  1981                           indf2	equ	0xFDF
  1982                           postinc2	equ	0xFDE
  1983                           fsr2h	equ	0xFDA
  1984                           fsr2l	equ	0xFD9
  1985                           status	equ	0xFD8
  1986                           
  1987 ;; *************** function ___lwtoft *****************
  1988 ;; Defined at:
  1989 ;;		line 28 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;  c               2   26[COMRAM] unsigned int 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  3   26[COMRAM] float 
  1996 ;; Registers used:
  1997 ;;		wreg, status,2, status,0, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2003 ;;      Params:         3       0       0       0       0       0       0       0       0
  2004 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2005 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2006 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2007 ;;Total ram usage:        3 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; Hardware stack levels required when called:    2
  2010 ;; This function calls:
  2011 ;;		___ftpack
  2012 ;; This function is called by:
  2013 ;;		_main
  2014 ;;		_PWM_SetValue
  2015 ;;		_Get_Voltage
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text10
  2020  000C3C                     __ptext10:
  2021                           	opt stack 0
  2022  000C3C                     ___lwtoft:
  2023                           	opt stack 28
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;incstack = 0
  2027  000C3C  C01B  F013         	movff	___lwtoft@c,___ftpack@arg
  2028  000C40  C01C  F014         	movff	___lwtoft@c+1,___ftpack@arg+1
  2029  000C44  6A15               	clrf	___ftpack@arg+2,c
  2030  000C46  0E8E               	movlw	142
  2031  000C48  6E16               	movwf	___ftpack@exp,c
  2032  000C4A  0E00               	movlw	0
  2033  000C4C  6E17               	movwf	___ftpack@sign,c
  2034  000C4E  ECC5  F004         	call	___ftpack	;wreg free
  2035  000C52  C013  F01B         	movff	?___ftpack,?___lwtoft
  2036  000C56  C014  F01C         	movff	?___ftpack+1,?___lwtoft+1
  2037  000C5A  C015  F01D         	movff	?___ftpack+2,?___lwtoft+2
  2038  000C5E  0012               	return	
  2039  000C60                     __end_of___lwtoft:
  2040                           	opt stack 0
  2041                           tblptru	equ	0xFF8
  2042                           tblptrh	equ	0xFF7
  2043                           tblptrl	equ	0xFF6
  2044                           tablat	equ	0xFF5
  2045                           prodh	equ	0xFF4
  2046                           prodl	equ	0xFF3
  2047                           intcon	equ	0xFF2
  2048                           postinc0	equ	0xFEE
  2049                           wreg	equ	0xFE8
  2050                           postdec1	equ	0xFE5
  2051                           fsr1l	equ	0xFE1
  2052                           indf2	equ	0xFDF
  2053                           postinc2	equ	0xFDE
  2054                           fsr2h	equ	0xFDA
  2055                           fsr2l	equ	0xFD9
  2056                           status	equ	0xFD8
  2057                           
  2058 ;; *************** function ___fttol *****************
  2059 ;; Defined at:
  2060 ;;		line 44 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\fttol.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;  f1              3   59[COMRAM] float 
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;  lval            4    1[BANK0 ] unsigned long 
  2065 ;;  exp1            1    5[BANK0 ] unsigned char 
  2066 ;;  sign1           1    0[BANK0 ] unsigned char 
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  4   59[COMRAM] long 
  2069 ;; Registers used:
  2070 ;;		wreg, status,2, status,0
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2076 ;;      Params:         4       0       0       0       0       0       0       0       0
  2077 ;;      Locals:         0       6       0       0       0       0       0       0       0
  2078 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2079 ;;      Totals:         9       6       0       0       0       0       0       0       0
  2080 ;;Total ram usage:       15 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; Hardware stack levels required when called:    1
  2083 ;; This function calls:
  2084 ;;		Nothing
  2085 ;; This function is called by:
  2086 ;;		_main
  2087 ;;		_PWM_SetValue
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text11
  2092  000354                     __ptext11:
  2093                           	opt stack 0
  2094  000354                     ___fttol:
  2095                           	opt stack 29
  2096                           
  2097                           ;incstack = 0
  2098  000354  C03E  F040         	movff	___fttol@f1+2,??___fttol
  2099  000358  6A41               	clrf	(??___fttol+1)& (0+255),c
  2100  00035A  6A42               	clrf	(??___fttol+2)& (0+255),c
  2101  00035C  343D               	rlcf	___fttol@f1+1,w,c
  2102  00035E  3640               	rlcf	??___fttol& (0+255),f,c
  2103  000360  E301               	bnc	u1631
  2104  000362  8041               	bsf	(??___fttol+1)& (0+255),0,c
  2105  000364                     u1631:
  2106  000364  5040               	movf	??___fttol,w,c
  2107  000366  0100               	movlb	0	; () banked
  2108  000368  6F65               	movwf	___fttol@exp1& (0+255),b
  2109  00036A  5165               	movf	___fttol@exp1& (0+255),w,b
  2110  00036C  A4D8               	btfss	status,2,c
  2111  00036E  D009               	goto	l582
  2112                           
  2113                           ; BSR set to: 0
  2114  000370  0E00               	movlw	0
  2115  000372  6E3C               	movwf	?___fttol,c
  2116  000374  0E00               	movlw	0
  2117  000376  6E3D               	movwf	?___fttol+1,c
  2118  000378  0E00               	movlw	0
  2119  00037A  6E3E               	movwf	?___fttol+2,c
  2120  00037C  0E00               	movlw	0
  2121  00037E  6E3F               	movwf	?___fttol+3,c
  2122                           
  2123                           ; BSR set to: 0
  2124  000380  0012               	return	
  2125  000382                     l582:
  2126                           
  2127                           ; BSR set to: 0
  2128                           
  2129                           ; BSR set to: 0
  2130  000382  0E17               	movlw	23
  2131  000384  6E40               	movwf	??___fttol& (0+255),c
  2132  000386  C03C  F041         	movff	___fttol@f1,??___fttol+1
  2133  00038A  C03D  F042         	movff	___fttol@f1+1,??___fttol+2
  2134  00038E  C03E  F043         	movff	___fttol@f1+2,??___fttol+3
  2135  000392  2840               	incf	??___fttol,w,c
  2136  000394  6E44               	movwf	(??___fttol+4)& (0+255),c
  2137  000396  D004               	goto	u1650
  2138  000398                     u1655:
  2139  000398  90D8               	bcf	status,0,c
  2140  00039A  3243               	rrcf	??___fttol+3,f,c
  2141  00039C  3242               	rrcf	??___fttol+2,f,c
  2142  00039E  3241               	rrcf	??___fttol+1,f,c
  2143  0003A0                     u1650:
  2144  0003A0  2E44               	decfsz	(??___fttol+4)& (0+255),f,c
  2145  0003A2  D7FA               	goto	u1655
  2146  0003A4  5041               	movf	??___fttol+1,w,c
  2147  0003A6  0100               	movlb	0	; () banked
  2148  0003A8  6F60               	movwf	___fttol@sign1& (0+255),b
  2149                           
  2150                           ; BSR set to: 0
  2151  0003AA  8E3D               	bsf	___fttol@f1+1,7,c
  2152                           
  2153                           ; BSR set to: 0
  2154  0003AC  0EFF               	movlw	255
  2155  0003AE  163C               	andwf	___fttol@f1,f,c
  2156  0003B0  0EFF               	movlw	255
  2157  0003B2  163D               	andwf	___fttol@f1+1,f,c
  2158  0003B4  0E00               	movlw	0
  2159  0003B6  163E               	andwf	___fttol@f1+2,f,c
  2160                           
  2161                           ; BSR set to: 0
  2162  0003B8  503C               	movf	___fttol@f1,w,c
  2163  0003BA  6F61               	movwf	___fttol@lval& (0+255),b
  2164  0003BC  503D               	movf	___fttol@f1+1,w,c
  2165  0003BE  6F62               	movwf	(___fttol@lval+1)& (0+255),b
  2166  0003C0  503E               	movf	___fttol@f1+2,w,c
  2167  0003C2  6F63               	movwf	(___fttol@lval+2)& (0+255),b
  2168  0003C4  6B64               	clrf	(___fttol@lval+3)& (0+255),b
  2169                           
  2170                           ; BSR set to: 0
  2171  0003C6  0E8E               	movlw	142
  2172  0003C8  5F65               	subwf	___fttol@exp1& (0+255),f,b
  2173                           
  2174                           ; BSR set to: 0
  2175  0003CA  AF65               	btfss	___fttol@exp1& (0+255),7,b
  2176  0003CC  D016               	goto	l584
  2177                           
  2178                           ; BSR set to: 0
  2179  0003CE  5165               	movf	___fttol@exp1& (0+255),w,b
  2180  0003D0  0A80               	xorlw	128
  2181  0003D2  0F8F               	addlw	143
  2182  0003D4  B0D8               	btfsc	status,0,c
  2183  0003D6  D009               	goto	l585
  2184                           
  2185                           ; BSR set to: 0
  2186  0003D8  0E00               	movlw	0
  2187  0003DA  6E3C               	movwf	?___fttol,c
  2188  0003DC  0E00               	movlw	0
  2189  0003DE  6E3D               	movwf	?___fttol+1,c
  2190  0003E0  0E00               	movlw	0
  2191  0003E2  6E3E               	movwf	?___fttol+2,c
  2192  0003E4  0E00               	movlw	0
  2193  0003E6  6E3F               	movwf	?___fttol+3,c
  2194                           
  2195                           ; BSR set to: 0
  2196  0003E8  0012               	return	
  2197  0003EA                     l585:
  2198                           
  2199                           ; BSR set to: 0
  2200                           
  2201                           ; BSR set to: 0
  2202                           
  2203                           ; BSR set to: 0
  2204  0003EA  90D8               	bcf	status,0,c
  2205  0003EC  3364               	rrcf	(___fttol@lval+3)& (0+255),f,b
  2206  0003EE  3363               	rrcf	(___fttol@lval+2)& (0+255),f,b
  2207  0003F0  3362               	rrcf	(___fttol@lval+1)& (0+255),f,b
  2208  0003F2  3361               	rrcf	___fttol@lval& (0+255),f,b
  2209                           
  2210                           ; BSR set to: 0
  2211  0003F4  3F65               	incfsz	___fttol@exp1& (0+255),f,b
  2212  0003F6  D7F9               	goto	l585
  2213                           
  2214                           ; BSR set to: 0
  2215  0003F8  D015               	goto	u1690
  2216  0003FA                     l584:
  2217                           
  2218                           ; BSR set to: 0
  2219                           
  2220                           ; BSR set to: 0
  2221  0003FA  0E17               	movlw	23
  2222  0003FC  6565               	cpfsgt	___fttol@exp1& (0+255),b
  2223  0003FE  D00F               	goto	l590
  2224                           
  2225                           ; BSR set to: 0
  2226  000400  0E00               	movlw	0
  2227  000402  6E3C               	movwf	?___fttol,c
  2228  000404  0E00               	movlw	0
  2229  000406  6E3D               	movwf	?___fttol+1,c
  2230  000408  0E00               	movlw	0
  2231  00040A  6E3E               	movwf	?___fttol+2,c
  2232  00040C  0E00               	movlw	0
  2233  00040E  6E3F               	movwf	?___fttol+3,c
  2234                           
  2235                           ; BSR set to: 0
  2236  000410  0012               	return	
  2237  000412                     
  2238                           ; BSR set to: 0
  2239                           
  2240                           ; BSR set to: 0
  2241  000412  90D8               	bcf	status,0,c
  2242  000414  3761               	rlcf	___fttol@lval& (0+255),f,b
  2243  000416  3762               	rlcf	(___fttol@lval+1)& (0+255),f,b
  2244  000418  3763               	rlcf	(___fttol@lval+2)& (0+255),f,b
  2245  00041A  3764               	rlcf	(___fttol@lval+3)& (0+255),f,b
  2246  00041C  0765               	decf	___fttol@exp1& (0+255),f,b
  2247  00041E                     l590:
  2248                           
  2249                           ; BSR set to: 0
  2250                           
  2251                           ; BSR set to: 0
  2252  00041E  5165               	movf	___fttol@exp1& (0+255),w,b
  2253  000420  A4D8               	btfss	status,2,c
  2254  000422  D7F7               	goto	l591
  2255  000424                     u1690:
  2256                           
  2257                           ; BSR set to: 0
  2258                           
  2259                           ; BSR set to: 0
  2260                           
  2261                           ; BSR set to: 0
  2262  000424  5160               	movf	___fttol@sign1& (0+255),w,b
  2263  000426  B4D8               	btfsc	status,2,c
  2264  000428  D008               	goto	l593
  2265                           
  2266                           ; BSR set to: 0
  2267  00042A  1F64               	comf	(___fttol@lval+3)& (0+255),f,b
  2268  00042C  1F63               	comf	(___fttol@lval+2)& (0+255),f,b
  2269  00042E  1F62               	comf	(___fttol@lval+1)& (0+255),f,b
  2270  000430  6D61               	negf	___fttol@lval& (0+255),b
  2271  000432  0E00               	movlw	0
  2272  000434  2362               	addwfc	(___fttol@lval+1)& (0+255),f,b
  2273  000436  2363               	addwfc	(___fttol@lval+2)& (0+255),f,b
  2274  000438  2364               	addwfc	(___fttol@lval+3)& (0+255),f,b
  2275  00043A                     l593:
  2276                           
  2277                           ; BSR set to: 0
  2278                           
  2279                           ; BSR set to: 0
  2280  00043A  C061  F03C         	movff	___fttol@lval,?___fttol
  2281  00043E  C062  F03D         	movff	___fttol@lval+1,?___fttol+1
  2282  000442  C063  F03E         	movff	___fttol@lval+2,?___fttol+2
  2283  000446  C064  F03F         	movff	___fttol@lval+3,?___fttol+3
  2284  00044A  0012               	return	
  2285  00044C                     __end_of___fttol:
  2286                           	opt stack 0
  2287                           tblptru	equ	0xFF8
  2288                           tblptrh	equ	0xFF7
  2289                           tblptrl	equ	0xFF6
  2290                           tablat	equ	0xFF5
  2291                           prodh	equ	0xFF4
  2292                           prodl	equ	0xFF3
  2293                           intcon	equ	0xFF2
  2294                           postinc0	equ	0xFEE
  2295                           wreg	equ	0xFE8
  2296                           postdec1	equ	0xFE5
  2297                           fsr1l	equ	0xFE1
  2298                           indf2	equ	0xFDF
  2299                           postinc2	equ	0xFDE
  2300                           fsr2h	equ	0xFDA
  2301                           fsr2l	equ	0xFD9
  2302                           status	equ	0xFD8
  2303                           
  2304 ;; *************** function ___ftmul *****************
  2305 ;; Defined at:
  2306 ;;		line 62 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\ftmul.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  f1              3   44[COMRAM] float 
  2309 ;;  f2              3   47[COMRAM] float 
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;  f3_as_produc    3   54[COMRAM] unsigned um
  2312 ;;  sign            1   58[COMRAM] unsigned char 
  2313 ;;  cntr            1   57[COMRAM] unsigned char 
  2314 ;;  exp             1   53[COMRAM] unsigned char 
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  3   44[COMRAM] float 
  2317 ;; Registers used:
  2318 ;;		wreg, status,2, status,0, cstack
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2324 ;;      Params:         6       0       0       0       0       0       0       0       0
  2325 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2326 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2327 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2328 ;;Total ram usage:       15 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; Hardware stack levels required when called:    2
  2331 ;; This function calls:
  2332 ;;		___ftpack
  2333 ;; This function is called by:
  2334 ;;		_main
  2335 ;;		_PWM_SetValue
  2336 ;;		_Get_Voltage
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340                           	psect	text12
  2341  00044C                     __ptext12:
  2342                           	opt stack 0
  2343  00044C                     ___ftmul:
  2344                           	opt stack 28
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;incstack = 0
  2348  00044C  C02F  F033         	movff	___ftmul@f1+2,??___ftmul
  2349  000450  6A34               	clrf	(??___ftmul+1)& (0+255),c
  2350  000452  6A35               	clrf	(??___ftmul+2)& (0+255),c
  2351  000454  342E               	rlcf	___ftmul@f1+1,w,c
  2352  000456  3633               	rlcf	??___ftmul& (0+255),f,c
  2353  000458  E301               	bnc	u1051
  2354  00045A  8034               	bsf	(??___ftmul+1)& (0+255),0,c
  2355  00045C                     u1051:
  2356  00045C  5033               	movf	??___ftmul,w,c
  2357  00045E  6E36               	movwf	___ftmul@exp,c
  2358  000460  5036               	movf	___ftmul@exp,w,c
  2359  000462  A4D8               	btfss	status,2,c
  2360  000464  D007               	goto	l561
  2361  000466  0E00               	movlw	0
  2362  000468  6E2D               	movwf	?___ftmul,c
  2363  00046A  0E00               	movlw	0
  2364  00046C  6E2E               	movwf	?___ftmul+1,c
  2365  00046E  0E00               	movlw	0
  2366  000470  6E2F               	movwf	?___ftmul+2,c
  2367  000472  0012               	return	
  2368  000474                     l561:
  2369  000474  C032  F033         	movff	___ftmul@f2+2,??___ftmul
  2370  000478  6A34               	clrf	(??___ftmul+1)& (0+255),c
  2371  00047A  6A35               	clrf	(??___ftmul+2)& (0+255),c
  2372  00047C  3431               	rlcf	___ftmul@f2+1,w,c
  2373  00047E  3633               	rlcf	??___ftmul& (0+255),f,c
  2374  000480  E301               	bnc	u1071
  2375  000482  8034               	bsf	(??___ftmul+1)& (0+255),0,c
  2376  000484                     u1071:
  2377  000484  5033               	movf	??___ftmul,w,c
  2378  000486  6E3B               	movwf	___ftmul@sign,c
  2379  000488  503B               	movf	___ftmul@sign,w,c
  2380  00048A  A4D8               	btfss	status,2,c
  2381  00048C  D007               	goto	l563
  2382  00048E  0E00               	movlw	0
  2383  000490  6E2D               	movwf	?___ftmul,c
  2384  000492  0E00               	movlw	0
  2385  000494  6E2E               	movwf	?___ftmul+1,c
  2386  000496  0E00               	movlw	0
  2387  000498  6E2F               	movwf	?___ftmul+2,c
  2388  00049A  0012               	return	
  2389  00049C                     l563:
  2390  00049C  503B               	movf	___ftmul@sign,w,c
  2391  00049E  0F7B               	addlw	123
  2392  0004A0  2636               	addwf	___ftmul@exp,f,c
  2393  0004A2  C02F  F03B         	movff	___ftmul@f1+2,___ftmul@sign
  2394  0004A6  5032               	movf	___ftmul@f2+2,w,c
  2395  0004A8  1A3B               	xorwf	___ftmul@sign,f,c
  2396  0004AA  0E80               	movlw	128
  2397  0004AC  163B               	andwf	___ftmul@sign,f,c
  2398  0004AE  8E2E               	bsf	___ftmul@f1+1,7,c
  2399  0004B0  8E31               	bsf	___ftmul@f2+1,7,c
  2400  0004B2  0EFF               	movlw	255
  2401  0004B4  1630               	andwf	___ftmul@f2,f,c
  2402  0004B6  0EFF               	movlw	255
  2403  0004B8  1631               	andwf	___ftmul@f2+1,f,c
  2404  0004BA  0E00               	movlw	0
  2405  0004BC  1632               	andwf	___ftmul@f2+2,f,c
  2406  0004BE  0E00               	movlw	0
  2407  0004C0  6E37               	movwf	___ftmul@f3_as_product,c
  2408  0004C2  0E00               	movlw	0
  2409  0004C4  6E38               	movwf	___ftmul@f3_as_product+1,c
  2410  0004C6  0E00               	movlw	0
  2411  0004C8  6E39               	movwf	___ftmul@f3_as_product+2,c
  2412  0004CA  0E07               	movlw	7
  2413  0004CC  6E3A               	movwf	___ftmul@cntr,c
  2414  0004CE  A02D               	btfss	___ftmul@f1,0,c
  2415  0004D0  D006               	goto	l565
  2416  0004D2  5030               	movf	___ftmul@f2,w,c
  2417  0004D4  2637               	addwf	___ftmul@f3_as_product,f,c
  2418  0004D6  5031               	movf	___ftmul@f2+1,w,c
  2419  0004D8  2238               	addwfc	___ftmul@f3_as_product+1,f,c
  2420  0004DA  5032               	movf	___ftmul@f2+2,w,c
  2421  0004DC  2239               	addwfc	___ftmul@f3_as_product+2,f,c
  2422  0004DE                     l565:
  2423  0004DE  90D8               	bcf	status,0,c
  2424  0004E0  322F               	rrcf	___ftmul@f1+2,f,c
  2425  0004E2  322E               	rrcf	___ftmul@f1+1,f,c
  2426  0004E4  322D               	rrcf	___ftmul@f1,f,c
  2427  0004E6  90D8               	bcf	status,0,c
  2428  0004E8  3630               	rlcf	___ftmul@f2,f,c
  2429  0004EA  3631               	rlcf	___ftmul@f2+1,f,c
  2430  0004EC  3632               	rlcf	___ftmul@f2+2,f,c
  2431  0004EE  2E3A               	decfsz	___ftmul@cntr,f,c
  2432  0004F0  D7EE               	goto	l564
  2433  0004F2  0E09               	movlw	9
  2434  0004F4  6E3A               	movwf	___ftmul@cntr,c
  2435  0004F6  A02D               	btfss	___ftmul@f1,0,c
  2436  0004F8  D006               	goto	l568
  2437  0004FA  5030               	movf	___ftmul@f2,w,c
  2438  0004FC  2637               	addwf	___ftmul@f3_as_product,f,c
  2439  0004FE  5031               	movf	___ftmul@f2+1,w,c
  2440  000500  2238               	addwfc	___ftmul@f3_as_product+1,f,c
  2441  000502  5032               	movf	___ftmul@f2+2,w,c
  2442  000504  2239               	addwfc	___ftmul@f3_as_product+2,f,c
  2443  000506                     l568:
  2444  000506  90D8               	bcf	status,0,c
  2445  000508  322F               	rrcf	___ftmul@f1+2,f,c
  2446  00050A  322E               	rrcf	___ftmul@f1+1,f,c
  2447  00050C  322D               	rrcf	___ftmul@f1,f,c
  2448  00050E  90D8               	bcf	status,0,c
  2449  000510  3239               	rrcf	___ftmul@f3_as_product+2,f,c
  2450  000512  3238               	rrcf	___ftmul@f3_as_product+1,f,c
  2451  000514  3237               	rrcf	___ftmul@f3_as_product,f,c
  2452  000516  2E3A               	decfsz	___ftmul@cntr,f,c
  2453  000518  D7EE               	goto	l567
  2454  00051A  C037  F013         	movff	___ftmul@f3_as_product,___ftpack@arg
  2455  00051E  C038  F014         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2456  000522  C039  F015         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2457  000526  C036  F016         	movff	___ftmul@exp,___ftpack@exp
  2458  00052A  C03B  F017         	movff	___ftmul@sign,___ftpack@sign
  2459  00052E  ECC5  F004         	call	___ftpack	;wreg free
  2460  000532  C013  F02D         	movff	?___ftpack,?___ftmul
  2461  000536  C014  F02E         	movff	?___ftpack+1,?___ftmul+1
  2462  00053A  C015  F02F         	movff	?___ftpack+2,?___ftmul+2
  2463  00053E  0012               	return	
  2464  000540                     __end_of___ftmul:
  2465                           	opt stack 0
  2466                           tblptru	equ	0xFF8
  2467                           tblptrh	equ	0xFF7
  2468                           tblptrl	equ	0xFF6
  2469                           tablat	equ	0xFF5
  2470                           prodh	equ	0xFF4
  2471                           prodl	equ	0xFF3
  2472                           intcon	equ	0xFF2
  2473                           postinc0	equ	0xFEE
  2474                           wreg	equ	0xFE8
  2475                           postdec1	equ	0xFE5
  2476                           fsr1l	equ	0xFE1
  2477                           indf2	equ	0xFDF
  2478                           postinc2	equ	0xFDE
  2479                           fsr2h	equ	0xFDA
  2480                           fsr2l	equ	0xFD9
  2481                           status	equ	0xFD8
  2482                           
  2483 ;; *************** function ___ftdiv *****************
  2484 ;; Defined at:
  2485 ;;		line 54 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;  f1              3   29[COMRAM] float 
  2488 ;;  f2              3   32[COMRAM] float 
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;  f3              3   39[COMRAM] float 
  2491 ;;  sign            1   43[COMRAM] unsigned char 
  2492 ;;  exp             1   42[COMRAM] unsigned char 
  2493 ;;  cntr            1   38[COMRAM] unsigned char 
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  3   29[COMRAM] float 
  2496 ;; Registers used:
  2497 ;;		wreg, status,2, status,0, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2503 ;;      Params:         6       0       0       0       0       0       0       0       0
  2504 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2505 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2506 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2507 ;;Total ram usage:       15 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; Hardware stack levels required when called:    2
  2510 ;; This function calls:
  2511 ;;		___ftpack
  2512 ;; This function is called by:
  2513 ;;		_PWM_SetValue
  2514 ;;		_Get_Voltage
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           	psect	text13
  2519  00062A                     __ptext13:
  2520                           	opt stack 0
  2521  00062A                     ___ftdiv:
  2522                           	opt stack 27
  2523                           
  2524                           ;incstack = 0
  2525  00062A  C020  F024         	movff	___ftdiv@f1+2,??___ftdiv
  2526  00062E  6A25               	clrf	(??___ftdiv+1)& (0+255),c
  2527  000630  6A26               	clrf	(??___ftdiv+2)& (0+255),c
  2528  000632  341F               	rlcf	___ftdiv@f1+1,w,c
  2529  000634  3624               	rlcf	??___ftdiv& (0+255),f,c
  2530  000636  E301               	bnc	u1001
  2531  000638  8025               	bsf	(??___ftdiv+1)& (0+255),0,c
  2532  00063A                     u1001:
  2533  00063A  5024               	movf	??___ftdiv,w,c
  2534  00063C  6E2B               	movwf	___ftdiv@exp,c
  2535  00063E  502B               	movf	___ftdiv@exp,w,c
  2536  000640  A4D8               	btfss	status,2,c
  2537  000642  D007               	goto	l546
  2538  000644  0E00               	movlw	0
  2539  000646  6E1E               	movwf	?___ftdiv,c
  2540  000648  0E00               	movlw	0
  2541  00064A  6E1F               	movwf	?___ftdiv+1,c
  2542  00064C  0E00               	movlw	0
  2543  00064E  6E20               	movwf	?___ftdiv+2,c
  2544  000650  0012               	return	
  2545  000652                     l546:
  2546  000652  C023  F024         	movff	___ftdiv@f2+2,??___ftdiv
  2547  000656  6A25               	clrf	(??___ftdiv+1)& (0+255),c
  2548  000658  6A26               	clrf	(??___ftdiv+2)& (0+255),c
  2549  00065A  3422               	rlcf	___ftdiv@f2+1,w,c
  2550  00065C  3624               	rlcf	??___ftdiv& (0+255),f,c
  2551  00065E  E301               	bnc	u1021
  2552  000660  8025               	bsf	(??___ftdiv+1)& (0+255),0,c
  2553  000662                     u1021:
  2554  000662  5024               	movf	??___ftdiv,w,c
  2555  000664  6E2C               	movwf	___ftdiv@sign,c
  2556  000666  502C               	movf	___ftdiv@sign,w,c
  2557  000668  A4D8               	btfss	status,2,c
  2558  00066A  D007               	goto	l548
  2559  00066C  0E00               	movlw	0
  2560  00066E  6E1E               	movwf	?___ftdiv,c
  2561  000670  0E00               	movlw	0
  2562  000672  6E1F               	movwf	?___ftdiv+1,c
  2563  000674  0E00               	movlw	0
  2564  000676  6E20               	movwf	?___ftdiv+2,c
  2565  000678  0012               	return	
  2566  00067A                     l548:
  2567  00067A  0E00               	movlw	0
  2568  00067C  6E28               	movwf	___ftdiv@f3,c
  2569  00067E  0E00               	movlw	0
  2570  000680  6E29               	movwf	___ftdiv@f3+1,c
  2571  000682  0E00               	movlw	0
  2572  000684  6E2A               	movwf	___ftdiv@f3+2,c
  2573  000686  502C               	movf	___ftdiv@sign,w,c
  2574  000688  0F89               	addlw	137
  2575  00068A  5E2B               	subwf	___ftdiv@exp,f,c
  2576  00068C  C020  F02C         	movff	___ftdiv@f1+2,___ftdiv@sign
  2577  000690  5023               	movf	___ftdiv@f2+2,w,c
  2578  000692  1A2C               	xorwf	___ftdiv@sign,f,c
  2579  000694  0E80               	movlw	128
  2580  000696  162C               	andwf	___ftdiv@sign,f,c
  2581  000698  8E1F               	bsf	___ftdiv@f1+1,7,c
  2582  00069A  0EFF               	movlw	255
  2583  00069C  161E               	andwf	___ftdiv@f1,f,c
  2584  00069E  0EFF               	movlw	255
  2585  0006A0  161F               	andwf	___ftdiv@f1+1,f,c
  2586  0006A2  0E00               	movlw	0
  2587  0006A4  1620               	andwf	___ftdiv@f1+2,f,c
  2588  0006A6  8E22               	bsf	___ftdiv@f2+1,7,c
  2589  0006A8  0EFF               	movlw	255
  2590  0006AA  1621               	andwf	___ftdiv@f2,f,c
  2591  0006AC  0EFF               	movlw	255
  2592  0006AE  1622               	andwf	___ftdiv@f2+1,f,c
  2593  0006B0  0E00               	movlw	0
  2594  0006B2  1623               	andwf	___ftdiv@f2+2,f,c
  2595  0006B4  0E18               	movlw	24
  2596  0006B6  6E27               	movwf	___ftdiv@cntr,c
  2597  0006B8  90D8               	bcf	status,0,c
  2598  0006BA  3628               	rlcf	___ftdiv@f3,f,c
  2599  0006BC  3629               	rlcf	___ftdiv@f3+1,f,c
  2600  0006BE  362A               	rlcf	___ftdiv@f3+2,f,c
  2601  0006C0  5021               	movf	___ftdiv@f2,w,c
  2602  0006C2  5C1E               	subwf	___ftdiv@f1,w,c
  2603  0006C4  5022               	movf	___ftdiv@f2+1,w,c
  2604  0006C6  581F               	subwfb	___ftdiv@f1+1,w,c
  2605  0006C8  5023               	movf	___ftdiv@f2+2,w,c
  2606  0006CA  5820               	subwfb	___ftdiv@f1+2,w,c
  2607  0006CC  A0D8               	btfss	status,0,c
  2608  0006CE  D007               	goto	l550
  2609  0006D0  5021               	movf	___ftdiv@f2,w,c
  2610  0006D2  5E1E               	subwf	___ftdiv@f1,f,c
  2611  0006D4  5022               	movf	___ftdiv@f2+1,w,c
  2612  0006D6  5A1F               	subwfb	___ftdiv@f1+1,f,c
  2613  0006D8  5023               	movf	___ftdiv@f2+2,w,c
  2614  0006DA  5A20               	subwfb	___ftdiv@f1+2,f,c
  2615  0006DC  8028               	bsf	___ftdiv@f3,0,c
  2616  0006DE                     l550:
  2617  0006DE  90D8               	bcf	status,0,c
  2618  0006E0  361E               	rlcf	___ftdiv@f1,f,c
  2619  0006E2  361F               	rlcf	___ftdiv@f1+1,f,c
  2620  0006E4  3620               	rlcf	___ftdiv@f1+2,f,c
  2621  0006E6  2E27               	decfsz	___ftdiv@cntr,f,c
  2622  0006E8  D7E7               	goto	l549
  2623  0006EA  C028  F013         	movff	___ftdiv@f3,___ftpack@arg
  2624  0006EE  C029  F014         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2625  0006F2  C02A  F015         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2626  0006F6  C02B  F016         	movff	___ftdiv@exp,___ftpack@exp
  2627  0006FA  C02C  F017         	movff	___ftdiv@sign,___ftpack@sign
  2628  0006FE  ECC5  F004         	call	___ftpack	;wreg free
  2629  000702  C013  F01E         	movff	?___ftpack,?___ftdiv
  2630  000706  C014  F01F         	movff	?___ftpack+1,?___ftdiv+1
  2631  00070A  C015  F020         	movff	?___ftpack+2,?___ftdiv+2
  2632  00070E  0012               	return	
  2633  000710                     __end_of___ftdiv:
  2634                           	opt stack 0
  2635                           tblptru	equ	0xFF8
  2636                           tblptrh	equ	0xFF7
  2637                           tblptrl	equ	0xFF6
  2638                           tablat	equ	0xFF5
  2639                           prodh	equ	0xFF4
  2640                           prodl	equ	0xFF3
  2641                           intcon	equ	0xFF2
  2642                           postinc0	equ	0xFEE
  2643                           wreg	equ	0xFE8
  2644                           postdec1	equ	0xFE5
  2645                           fsr1l	equ	0xFE1
  2646                           indf2	equ	0xFDF
  2647                           postinc2	equ	0xFDE
  2648                           fsr2h	equ	0xFDA
  2649                           fsr2l	equ	0xFD9
  2650                           status	equ	0xFD8
  2651                           
  2652 ;; *************** function ___altoft *****************
  2653 ;; Defined at:
  2654 ;;		line 42 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\altoft.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;  c               4   32[COMRAM] long 
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;  sign            1   41[COMRAM] unsigned char 
  2659 ;;  exp             1   40[COMRAM] unsigned char 
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  3   32[COMRAM] float 
  2662 ;; Registers used:
  2663 ;;		wreg, status,2, status,0, cstack
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2669 ;;      Params:         4       0       0       0       0       0       0       0       0
  2670 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2671 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2672 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2673 ;;Total ram usage:       10 bytes
  2674 ;; Hardware stack levels used:    1
  2675 ;; Hardware stack levels required when called:    2
  2676 ;; This function calls:
  2677 ;;		___ftpack
  2678 ;; This function is called by:
  2679 ;;		_PWM_SetValue
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           	psect	text14
  2684  000A38                     __ptext14:
  2685                           	opt stack 0
  2686  000A38                     ___altoft:
  2687                           	opt stack 27
  2688                           
  2689                           ;incstack = 0
  2690  000A38  0E00               	movlw	0
  2691  000A3A  6E2A               	movwf	___altoft@sign,c
  2692  000A3C  0E8E               	movlw	142
  2693  000A3E  6E29               	movwf	___altoft@exp,c
  2694  000A40  AE24               	btfss	___altoft@c+3,7,c
  2695  000A42  D011               	goto	l337
  2696  000A44  1E24               	comf	___altoft@c+3,f,c
  2697  000A46  1E23               	comf	___altoft@c+2,f,c
  2698  000A48  1E22               	comf	___altoft@c+1,f,c
  2699  000A4A  6C21               	negf	___altoft@c,c
  2700  000A4C  0E00               	movlw	0
  2701  000A4E  2222               	addwfc	___altoft@c+1,f,c
  2702  000A50  2223               	addwfc	___altoft@c+2,f,c
  2703  000A52  2224               	addwfc	___altoft@c+3,f,c
  2704  000A54  0E01               	movlw	1
  2705  000A56  6E2A               	movwf	___altoft@sign,c
  2706  000A58  D006               	goto	l337
  2707  000A5A  90D8               	bcf	status,0,c
  2708  000A5C  3224               	rrcf	___altoft@c+3,f,c
  2709  000A5E  3223               	rrcf	___altoft@c+2,f,c
  2710  000A60  3222               	rrcf	___altoft@c+1,f,c
  2711  000A62  3221               	rrcf	___altoft@c,f,c
  2712  000A64  2A29               	incf	___altoft@exp,f,c
  2713  000A66                     l337:
  2714  000A66  0E00               	movlw	0
  2715  000A68  1421               	andwf	___altoft@c,w,c
  2716  000A6A  6E25               	movwf	??___altoft& (0+255),c
  2717  000A6C  0E00               	movlw	0
  2718  000A6E  1422               	andwf	___altoft@c+1,w,c
  2719  000A70  6E26               	movwf	(??___altoft+1)& (0+255),c
  2720  000A72  0E00               	movlw	0
  2721  000A74  1423               	andwf	___altoft@c+2,w,c
  2722  000A76  6E27               	movwf	(??___altoft+2)& (0+255),c
  2723  000A78  0EFF               	movlw	255
  2724  000A7A  1424               	andwf	___altoft@c+3,w,c
  2725  000A7C  6E28               	movwf	(??___altoft+3)& (0+255),c
  2726  000A7E  5025               	movf	??___altoft,w,c
  2727  000A80  1026               	iorwf	??___altoft+1,w,c
  2728  000A82  1027               	iorwf	??___altoft+2,w,c
  2729  000A84  1028               	iorwf	??___altoft+3,w,c
  2730  000A86  A4D8               	btfss	status,2,c
  2731  000A88  D7E8               	goto	l338
  2732  000A8A  C021  F013         	movff	___altoft@c,___ftpack@arg
  2733  000A8E  C022  F014         	movff	___altoft@c+1,___ftpack@arg+1
  2734  000A92  C023  F015         	movff	___altoft@c+2,___ftpack@arg+2
  2735  000A96  C029  F016         	movff	___altoft@exp,___ftpack@exp
  2736  000A9A  C02A  F017         	movff	___altoft@sign,___ftpack@sign
  2737  000A9E  ECC5  F004         	call	___ftpack	;wreg free
  2738  000AA2  C013  F021         	movff	?___ftpack,?___altoft
  2739  000AA6  C014  F022         	movff	?___ftpack+1,?___altoft+1
  2740  000AAA  C015  F023         	movff	?___ftpack+2,?___altoft+2
  2741  000AAE  0012               	return	
  2742  000AB0                     __end_of___altoft:
  2743                           	opt stack 0
  2744                           tblptru	equ	0xFF8
  2745                           tblptrh	equ	0xFF7
  2746                           tblptrl	equ	0xFF6
  2747                           tablat	equ	0xFF5
  2748                           prodh	equ	0xFF4
  2749                           prodl	equ	0xFF3
  2750                           intcon	equ	0xFF2
  2751                           postinc0	equ	0xFEE
  2752                           wreg	equ	0xFE8
  2753                           postdec1	equ	0xFE5
  2754                           fsr1l	equ	0xFE1
  2755                           indf2	equ	0xFDF
  2756                           postinc2	equ	0xFDE
  2757                           fsr2h	equ	0xFDA
  2758                           fsr2l	equ	0xFD9
  2759                           status	equ	0xFD8
  2760                           
  2761 ;; *************** function ___ftpack *****************
  2762 ;; Defined at:
  2763 ;;		line 62 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\float.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  arg             3   18[COMRAM] unsigned um
  2766 ;;  exp             1   21[COMRAM] unsigned char 
  2767 ;;  sign            1   22[COMRAM] unsigned char 
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;		None
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  3   18[COMRAM] float 
  2772 ;; Registers used:
  2773 ;;		wreg, status,2, status,0
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2779 ;;      Params:         5       0       0       0       0       0       0       0       0
  2780 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2781 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2782 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2783 ;;Total ram usage:        8 bytes
  2784 ;; Hardware stack levels used:    1
  2785 ;; Hardware stack levels required when called:    1
  2786 ;; This function calls:
  2787 ;;		Nothing
  2788 ;; This function is called by:
  2789 ;;		___altoft
  2790 ;;		___ftdiv
  2791 ;;		___ftmul
  2792 ;;		___lwtoft
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           	psect	text15
  2797  00098A                     __ptext15:
  2798                           	opt stack 0
  2799  00098A                     ___ftpack:
  2800                           	opt stack 28
  2801                           
  2802                           ;incstack = 0
  2803  00098A  5016               	movf	___ftpack@exp,w,c
  2804  00098C  B4D8               	btfsc	status,2,c
  2805  00098E  D005               	goto	u840
  2806  000990  5013               	movf	___ftpack@arg,w,c
  2807  000992  1014               	iorwf	___ftpack@arg+1,w,c
  2808  000994  1015               	iorwf	___ftpack@arg+2,w,c
  2809  000996  A4D8               	btfss	status,2,c
  2810  000998  D00C               	goto	l482
  2811  00099A                     u840:
  2812  00099A  0E00               	movlw	0
  2813  00099C  6E13               	movwf	?___ftpack,c
  2814  00099E  0E00               	movlw	0
  2815  0009A0  6E14               	movwf	?___ftpack+1,c
  2816  0009A2  0E00               	movlw	0
  2817  0009A4  6E15               	movwf	?___ftpack+2,c
  2818  0009A6  0012               	return	
  2819  0009A8  2A16               	incf	___ftpack@exp,f,c
  2820  0009AA  90D8               	bcf	status,0,c
  2821  0009AC  3215               	rrcf	___ftpack@arg+2,f,c
  2822  0009AE  3214               	rrcf	___ftpack@arg+1,f,c
  2823  0009B0  3213               	rrcf	___ftpack@arg,f,c
  2824  0009B2                     l482:
  2825  0009B2  0E00               	movlw	0
  2826  0009B4  1413               	andwf	___ftpack@arg,w,c
  2827  0009B6  6E18               	movwf	??___ftpack& (0+255),c
  2828  0009B8  0E00               	movlw	0
  2829  0009BA  1414               	andwf	___ftpack@arg+1,w,c
  2830  0009BC  6E19               	movwf	(??___ftpack+1)& (0+255),c
  2831  0009BE  0EFE               	movlw	254
  2832  0009C0  1415               	andwf	___ftpack@arg+2,w,c
  2833  0009C2  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  2834  0009C4  5018               	movf	??___ftpack,w,c
  2835  0009C6  1019               	iorwf	??___ftpack+1,w,c
  2836  0009C8  101A               	iorwf	??___ftpack+2,w,c
  2837  0009CA  B4D8               	btfsc	status,2,c
  2838  0009CC  D00C               	goto	l485
  2839  0009CE  D7EC               	goto	l483
  2840  0009D0  2A16               	incf	___ftpack@exp,f,c
  2841  0009D2  0E01               	movlw	1
  2842  0009D4  2613               	addwf	___ftpack@arg,f,c
  2843  0009D6  0E00               	movlw	0
  2844  0009D8  2214               	addwfc	___ftpack@arg+1,f,c
  2845  0009DA  0E00               	movlw	0
  2846  0009DC  2215               	addwfc	___ftpack@arg+2,f,c
  2847  0009DE  90D8               	bcf	status,0,c
  2848  0009E0  3215               	rrcf	___ftpack@arg+2,f,c
  2849  0009E2  3214               	rrcf	___ftpack@arg+1,f,c
  2850  0009E4  3213               	rrcf	___ftpack@arg,f,c
  2851  0009E6                     l485:
  2852  0009E6  0E00               	movlw	0
  2853  0009E8  1413               	andwf	___ftpack@arg,w,c
  2854  0009EA  6E18               	movwf	??___ftpack& (0+255),c
  2855  0009EC  0E00               	movlw	0
  2856  0009EE  1414               	andwf	___ftpack@arg+1,w,c
  2857  0009F0  6E19               	movwf	(??___ftpack+1)& (0+255),c
  2858  0009F2  0EFF               	movlw	255
  2859  0009F4  1415               	andwf	___ftpack@arg+2,w,c
  2860  0009F6  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  2861  0009F8  5018               	movf	??___ftpack,w,c
  2862  0009FA  1019               	iorwf	??___ftpack+1,w,c
  2863  0009FC  101A               	iorwf	??___ftpack+2,w,c
  2864  0009FE  B4D8               	btfsc	status,2,c
  2865  000A00  D006               	goto	l488
  2866  000A02  D7E6               	goto	l486
  2867  000A04  0616               	decf	___ftpack@exp,f,c
  2868  000A06  90D8               	bcf	status,0,c
  2869  000A08  3613               	rlcf	___ftpack@arg,f,c
  2870  000A0A  3614               	rlcf	___ftpack@arg+1,f,c
  2871  000A0C  3615               	rlcf	___ftpack@arg+2,f,c
  2872  000A0E                     l488:
  2873  000A0E  BE14               	btfsc	___ftpack@arg+1,7,c
  2874  000A10  D003               	goto	u880
  2875  000A12  0E02               	movlw	2
  2876  000A14  6016               	cpfslt	___ftpack@exp,c
  2877  000A16  D7F6               	goto	l489
  2878  000A18                     u880:
  2879  000A18  A016               	btfss	___ftpack@exp,0,c
  2880  000A1A  9E14               	bcf	___ftpack@arg+1,7,c
  2881  000A1C  90D8               	bcf	status,0,c
  2882  000A1E  3216               	rrcf	___ftpack@exp,f,c
  2883  000A20  5016               	movf	___ftpack@exp,w,c
  2884  000A22  1215               	iorwf	___ftpack@arg+2,f,c
  2885  000A24  5017               	movf	___ftpack@sign,w,c
  2886  000A26  A4D8               	btfss	status,2,c
  2887  000A28  8E15               	bsf	___ftpack@arg+2,7,c
  2888  000A2A  C013  F013         	movff	___ftpack@arg,?___ftpack
  2889  000A2E  C014  F014         	movff	___ftpack@arg+1,?___ftpack+1
  2890  000A32  C015  F015         	movff	___ftpack@arg+2,?___ftpack+2
  2891  000A36  0012               	return	
  2892  000A38                     __end_of___ftpack:
  2893                           	opt stack 0
  2894                           tblptru	equ	0xFF8
  2895                           tblptrh	equ	0xFF7
  2896                           tblptrl	equ	0xFF6
  2897                           tablat	equ	0xFF5
  2898                           prodh	equ	0xFF4
  2899                           prodl	equ	0xFF3
  2900                           intcon	equ	0xFF2
  2901                           postinc0	equ	0xFEE
  2902                           wreg	equ	0xFE8
  2903                           postdec1	equ	0xFE5
  2904                           fsr1l	equ	0xFE1
  2905                           indf2	equ	0xFDF
  2906                           postinc2	equ	0xFDE
  2907                           fsr2h	equ	0xFDA
  2908                           fsr2l	equ	0xFD9
  2909                           status	equ	0xFD8
  2910                           
  2911 ;; *************** function _PWM_Init *****************
  2912 ;; Defined at:
  2913 ;;		line 277 in file "main.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;		None
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;		None
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      void 
  2920 ;; Registers used:
  2921 ;;		wreg, status,2, status,0, cstack
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2927 ;;      Params:         0       0       0       0       0       0       0       0       0
  2928 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2929 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2930 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2931 ;;Total ram usage:        4 bytes
  2932 ;; Hardware stack levels used:    1
  2933 ;; Hardware stack levels required when called:    2
  2934 ;; This function calls:
  2935 ;;		___aldiv
  2936 ;; This function is called by:
  2937 ;;		_main
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941                           	psect	text16
  2942  000AB0                     __ptext16:
  2943                           	opt stack 0
  2944  000AB0                     _PWM_Init:
  2945                           	opt stack 28
  2946                           
  2947                           ;main.c: 279: PR2 = (8000000/(freq*4*4)) - 1;
  2948                           
  2949                           ;incstack = 0
  2950  000AB0  0E00               	movlw	0
  2951  000AB2  6E13               	movwf	___aldiv@dividend,c
  2952  000AB4  0E12               	movlw	18
  2953  000AB6  6E14               	movwf	___aldiv@dividend+1,c
  2954  000AB8  0E7A               	movlw	122
  2955  000ABA  6E15               	movwf	___aldiv@dividend+2,c
  2956  000ABC  0E00               	movlw	0
  2957  000ABE  6E16               	movwf	___aldiv@dividend+3,c
  2958  000AC0  C045  F021         	movff	_freq,??_PWM_Init
  2959  000AC4  C046  F022         	movff	_freq+1,??_PWM_Init+1
  2960  000AC8  C047  F023         	movff	_freq+2,??_PWM_Init+2
  2961  000ACC  C048  F024         	movff	_freq+3,??_PWM_Init+3
  2962  000AD0  0E02               	movlw	2
  2963  000AD2                     u1215:
  2964  000AD2  90D8               	bcf	status,0,c
  2965  000AD4  3621               	rlcf	??_PWM_Init,f,c
  2966  000AD6  3622               	rlcf	??_PWM_Init+1,f,c
  2967  000AD8  3623               	rlcf	??_PWM_Init+2,f,c
  2968  000ADA  3624               	rlcf	??_PWM_Init+3,f,c
  2969  000ADC  2EE8               	decfsz	wreg,f,c
  2970  000ADE  D7F9               	goto	u1215
  2971  000AE0  0E02               	movlw	2
  2972  000AE2                     u1225:
  2973  000AE2  90D8               	bcf	status,0,c
  2974  000AE4  3621               	rlcf	??_PWM_Init,f,c
  2975  000AE6  3622               	rlcf	??_PWM_Init+1,f,c
  2976  000AE8  3623               	rlcf	??_PWM_Init+2,f,c
  2977  000AEA  3624               	rlcf	??_PWM_Init+3,f,c
  2978  000AEC  2EE8               	decfsz	wreg,f,c
  2979  000AEE  D7F9               	goto	u1225
  2980  000AF0  C021  F017         	movff	??_PWM_Init,___aldiv@divisor
  2981  000AF4  C022  F018         	movff	??_PWM_Init+1,___aldiv@divisor+1
  2982  000AF8  C023  F019         	movff	??_PWM_Init+2,___aldiv@divisor+2
  2983  000AFC  C024  F01A         	movff	??_PWM_Init+3,___aldiv@divisor+3
  2984  000B00  EC5F  F004         	call	___aldiv	;wreg free
  2985  000B04  0413               	decf	?___aldiv,w,c
  2986  000B06  6ECB               	movwf	4043,c	;volatile
  2987                           
  2988                           ;main.c: 281: CCP2M3=1;
  2989  000B08  86BA               	bsf	4026,3,c	;volatile
  2990                           
  2991                           ;main.c: 282: CCP2M2=1;
  2992  000B0A  84BA               	bsf	4026,2,c	;volatile
  2993                           
  2994                           ;main.c: 285: T2CKPS0=1;
  2995  000B0C  80CA               	bsf	4042,0,c	;volatile
  2996                           
  2997                           ;main.c: 286: T2CKPS1=0;
  2998  000B0E  92CA               	bcf	4042,1,c	;volatile
  2999                           
  3000                           ;main.c: 287: TRISC1=0;
  3001  000B10  9294               	bcf	3988,1,c	;volatile
  3002  000B12  0012               	return		;funcret
  3003  000B14                     __end_of_PWM_Init:
  3004                           	opt stack 0
  3005                           tblptru	equ	0xFF8
  3006                           tblptrh	equ	0xFF7
  3007                           tblptrl	equ	0xFF6
  3008                           tablat	equ	0xFF5
  3009                           prodh	equ	0xFF4
  3010                           prodl	equ	0xFF3
  3011                           intcon	equ	0xFF2
  3012                           postinc0	equ	0xFEE
  3013                           wreg	equ	0xFE8
  3014                           postdec1	equ	0xFE5
  3015                           fsr1l	equ	0xFE1
  3016                           indf2	equ	0xFDF
  3017                           postinc2	equ	0xFDE
  3018                           fsr2h	equ	0xFDA
  3019                           fsr2l	equ	0xFD9
  3020                           status	equ	0xFD8
  3021                           
  3022 ;; *************** function ___aldiv *****************
  3023 ;; Defined at:
  3024 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\aldiv.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;  dividend        4   18[COMRAM] long 
  3027 ;;  divisor         4   22[COMRAM] long 
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;  quotient        4   28[COMRAM] long 
  3030 ;;  sign            1   27[COMRAM] unsigned char 
  3031 ;;  counter         1   26[COMRAM] unsigned char 
  3032 ;; Return value:  Size  Location     Type
  3033 ;;                  4   18[COMRAM] long 
  3034 ;; Registers used:
  3035 ;;		wreg, status,2, status,0
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3041 ;;      Params:         8       0       0       0       0       0       0       0       0
  3042 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3043 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3044 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3045 ;;Total ram usage:       14 bytes
  3046 ;; Hardware stack levels used:    1
  3047 ;; Hardware stack levels required when called:    1
  3048 ;; This function calls:
  3049 ;;		Nothing
  3050 ;; This function is called by:
  3051 ;;		_PWM_Init
  3052 ;;		_PWM_SetValue
  3053 ;;		_Usart_Init
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text17
  3058  0008BE                     __ptext17:
  3059                           	opt stack 0
  3060  0008BE                     ___aldiv:
  3061                           	opt stack 28
  3062                           
  3063                           ;incstack = 0
  3064  0008BE  0E00               	movlw	0
  3065  0008C0  6E1C               	movwf	___aldiv@sign,c
  3066  0008C2  AE1A               	btfss	___aldiv@divisor+3,7,c
  3067  0008C4  D00A               	goto	l308
  3068  0008C6  1E1A               	comf	___aldiv@divisor+3,f,c
  3069  0008C8  1E19               	comf	___aldiv@divisor+2,f,c
  3070  0008CA  1E18               	comf	___aldiv@divisor+1,f,c
  3071  0008CC  6C17               	negf	___aldiv@divisor,c
  3072  0008CE  0E00               	movlw	0
  3073  0008D0  2218               	addwfc	___aldiv@divisor+1,f,c
  3074  0008D2  2219               	addwfc	___aldiv@divisor+2,f,c
  3075  0008D4  221A               	addwfc	___aldiv@divisor+3,f,c
  3076  0008D6  0E01               	movlw	1
  3077  0008D8  6E1C               	movwf	___aldiv@sign,c
  3078  0008DA                     l308:
  3079  0008DA  AE16               	btfss	___aldiv@dividend+3,7,c
  3080  0008DC  D00A               	goto	l309
  3081  0008DE  1E16               	comf	___aldiv@dividend+3,f,c
  3082  0008E0  1E15               	comf	___aldiv@dividend+2,f,c
  3083  0008E2  1E14               	comf	___aldiv@dividend+1,f,c
  3084  0008E4  6C13               	negf	___aldiv@dividend,c
  3085  0008E6  0E00               	movlw	0
  3086  0008E8  2214               	addwfc	___aldiv@dividend+1,f,c
  3087  0008EA  2215               	addwfc	___aldiv@dividend+2,f,c
  3088  0008EC  2216               	addwfc	___aldiv@dividend+3,f,c
  3089  0008EE  0E01               	movlw	1
  3090  0008F0  1A1C               	xorwf	___aldiv@sign,f,c
  3091  0008F2                     l309:
  3092  0008F2  0E00               	movlw	0
  3093  0008F4  6E1D               	movwf	___aldiv@quotient,c
  3094  0008F6  0E00               	movlw	0
  3095  0008F8  6E1E               	movwf	___aldiv@quotient+1,c
  3096  0008FA  0E00               	movlw	0
  3097  0008FC  6E1F               	movwf	___aldiv@quotient+2,c
  3098  0008FE  0E00               	movlw	0
  3099  000900  6E20               	movwf	___aldiv@quotient+3,c
  3100  000902  5017               	movf	___aldiv@divisor,w,c
  3101  000904  1018               	iorwf	___aldiv@divisor+1,w,c
  3102  000906  1019               	iorwf	___aldiv@divisor+2,w,c
  3103  000908  101A               	iorwf	___aldiv@divisor+3,w,c
  3104  00090A  B4D8               	btfsc	status,2,c
  3105  00090C  D02A               	goto	l316
  3106  00090E  0E01               	movlw	1
  3107  000910  6E1B               	movwf	___aldiv@counter,c
  3108  000912  D006               	goto	l311
  3109  000914  90D8               	bcf	status,0,c
  3110  000916  3617               	rlcf	___aldiv@divisor,f,c
  3111  000918  3618               	rlcf	___aldiv@divisor+1,f,c
  3112  00091A  3619               	rlcf	___aldiv@divisor+2,f,c
  3113  00091C  361A               	rlcf	___aldiv@divisor+3,f,c
  3114  00091E  2A1B               	incf	___aldiv@counter,f,c
  3115  000920                     l311:
  3116  000920  AE1A               	btfss	___aldiv@divisor+3,7,c
  3117  000922  D7F8               	goto	l312
  3118  000924                     u950:
  3119  000924  90D8               	bcf	status,0,c
  3120  000926  361D               	rlcf	___aldiv@quotient,f,c
  3121  000928  361E               	rlcf	___aldiv@quotient+1,f,c
  3122  00092A  361F               	rlcf	___aldiv@quotient+2,f,c
  3123  00092C  3620               	rlcf	___aldiv@quotient+3,f,c
  3124  00092E  5017               	movf	___aldiv@divisor,w,c
  3125  000930  5C13               	subwf	___aldiv@dividend,w,c
  3126  000932  5018               	movf	___aldiv@divisor+1,w,c
  3127  000934  5814               	subwfb	___aldiv@dividend+1,w,c
  3128  000936  5019               	movf	___aldiv@divisor+2,w,c
  3129  000938  5815               	subwfb	___aldiv@dividend+2,w,c
  3130  00093A  501A               	movf	___aldiv@divisor+3,w,c
  3131  00093C  5816               	subwfb	___aldiv@dividend+3,w,c
  3132  00093E  A0D8               	btfss	status,0,c
  3133  000940  D009               	goto	l315
  3134  000942  5017               	movf	___aldiv@divisor,w,c
  3135  000944  5E13               	subwf	___aldiv@dividend,f,c
  3136  000946  5018               	movf	___aldiv@divisor+1,w,c
  3137  000948  5A14               	subwfb	___aldiv@dividend+1,f,c
  3138  00094A  5019               	movf	___aldiv@divisor+2,w,c
  3139  00094C  5A15               	subwfb	___aldiv@dividend+2,f,c
  3140  00094E  501A               	movf	___aldiv@divisor+3,w,c
  3141  000950  5A16               	subwfb	___aldiv@dividend+3,f,c
  3142  000952  801D               	bsf	___aldiv@quotient,0,c
  3143  000954                     l315:
  3144  000954  90D8               	bcf	status,0,c
  3145  000956  321A               	rrcf	___aldiv@divisor+3,f,c
  3146  000958  3219               	rrcf	___aldiv@divisor+2,f,c
  3147  00095A  3218               	rrcf	___aldiv@divisor+1,f,c
  3148  00095C  3217               	rrcf	___aldiv@divisor,f,c
  3149  00095E  2E1B               	decfsz	___aldiv@counter,f,c
  3150  000960  D7E1               	goto	u950
  3151  000962                     l316:
  3152  000962  501C               	movf	___aldiv@sign,w,c
  3153  000964  B4D8               	btfsc	status,2,c
  3154  000966  D008               	goto	l317
  3155  000968  1E20               	comf	___aldiv@quotient+3,f,c
  3156  00096A  1E1F               	comf	___aldiv@quotient+2,f,c
  3157  00096C  1E1E               	comf	___aldiv@quotient+1,f,c
  3158  00096E  6C1D               	negf	___aldiv@quotient,c
  3159  000970  0E00               	movlw	0
  3160  000972  221E               	addwfc	___aldiv@quotient+1,f,c
  3161  000974  221F               	addwfc	___aldiv@quotient+2,f,c
  3162  000976  2220               	addwfc	___aldiv@quotient+3,f,c
  3163  000978                     l317:
  3164  000978  C01D  F013         	movff	___aldiv@quotient,?___aldiv
  3165  00097C  C01E  F014         	movff	___aldiv@quotient+1,?___aldiv+1
  3166  000980  C01F  F015         	movff	___aldiv@quotient+2,?___aldiv+2
  3167  000984  C020  F016         	movff	___aldiv@quotient+3,?___aldiv+3
  3168  000988  0012               	return	
  3169  00098A                     __end_of___aldiv:
  3170                           	opt stack 0
  3171                           tblptru	equ	0xFF8
  3172                           tblptrh	equ	0xFF7
  3173                           tblptrl	equ	0xFF6
  3174                           tablat	equ	0xFF5
  3175                           prodh	equ	0xFF4
  3176                           prodl	equ	0xFF3
  3177                           intcon	equ	0xFF2
  3178                           postinc0	equ	0xFEE
  3179                           wreg	equ	0xFE8
  3180                           postdec1	equ	0xFE5
  3181                           fsr1l	equ	0xFE1
  3182                           indf2	equ	0xFDF
  3183                           postinc2	equ	0xFDE
  3184                           fsr2h	equ	0xFDA
  3185                           fsr2l	equ	0xFD9
  3186                           status	equ	0xFD8
  3187                           
  3188 ;; *************** function _Check_button_direction *****************
  3189 ;; Defined at:
  3190 ;;		line 211 in file "main.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;		None
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;  count           2   18[COMRAM] unsigned int 
  3195 ;;  result          1   20[COMRAM] unsigned char 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      unsigned char 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3205 ;;      Params:         0       0       0       0       0       0       0       0       0
  3206 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3207 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3208 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3209 ;;Total ram usage:        3 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; Hardware stack levels required when called:    1
  3212 ;; This function calls:
  3213 ;;		Nothing
  3214 ;; This function is called by:
  3215 ;;		_main
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text18
  3220  000BF0                     __ptext18:
  3221                           	opt stack 0
  3222  000BF0                     _Check_button_direction:
  3223                           	opt stack 29
  3224                           
  3225                           ;main.c: 213: uint8_t result=0;
  3226                           
  3227                           ;incstack = 0
  3228  000BF0  0E00               	movlw	0
  3229  000BF2  6E15               	movwf	Check_button_direction@result,c
  3230                           
  3231                           ;main.c: 214: uint16_t count;
  3232                           ;main.c: 217: while(RC0)
  3233  000BF4  D00C               	goto	l139
  3234  000BF6                     
  3235                           ;main.c: 218: {
  3236                           ;main.c: 219: if(count<5000)
  3237  000BF6  0E88               	movlw	136
  3238  000BF8  5C13               	subwf	Check_button_direction@count,w,c
  3239  000BFA  0E13               	movlw	19
  3240  000BFC  5814               	subwfb	Check_button_direction@count+1,w,c
  3241  000BFE  B0D8               	btfsc	status,0,c
  3242  000C00  D003               	goto	l138
  3243                           
  3244                           ;main.c: 220: {
  3245                           ;main.c: 221: count++;
  3246  000C02  4A13               	infsnz	Check_button_direction@count,f,c
  3247  000C04  2A14               	incf	Check_button_direction@count+1,f,c
  3248                           
  3249                           ;main.c: 222: }
  3250  000C06  D003               	goto	l139
  3251  000C08                     l138:
  3252                           
  3253                           ;main.c: 223: else
  3254                           ;main.c: 224: {
  3255                           ;main.c: 225: result=1;
  3256  000C08  0E01               	movlw	1
  3257  000C0A  6E15               	movwf	Check_button_direction@result,c
  3258                           
  3259                           ;main.c: 226: break;
  3260  000C0C  D002               	goto	u1450
  3261  000C0E                     l139:
  3262  000C0E  B082               	btfsc	3970,0,c	;volatile
  3263  000C10  D7F2               	goto	l137
  3264  000C12                     u1450:
  3265                           
  3266                           ;main.c: 227: }
  3267                           ;main.c: 228: }
  3268                           ;main.c: 229: return result;
  3269  000C12  5015               	movf	Check_button_direction@result,w,c
  3270  000C14  0012               	return	
  3271  000C16                     __end_of_Check_button_direction:
  3272                           	opt stack 0
  3273                           tblptru	equ	0xFF8
  3274                           tblptrh	equ	0xFF7
  3275                           tblptrl	equ	0xFF6
  3276                           tablat	equ	0xFF5
  3277                           prodh	equ	0xFF4
  3278                           prodl	equ	0xFF3
  3279                           intcon	equ	0xFF2
  3280                           postinc0	equ	0xFEE
  3281                           wreg	equ	0xFE8
  3282                           postdec1	equ	0xFE5
  3283                           fsr1l	equ	0xFE1
  3284                           indf2	equ	0xFDF
  3285                           postinc2	equ	0xFDE
  3286                           fsr2h	equ	0xFDA
  3287                           fsr2l	equ	0xFD9
  3288                           status	equ	0xFD8
  3289                           
  3290 ;; *************** function _Check_ModeWork *****************
  3291 ;; Defined at:
  3292 ;;		line 234 in file "main.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;		None
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;  count           2   18[COMRAM] unsigned int 
  3297 ;;  result          1   20[COMRAM] unsigned char 
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  1    wreg      unsigned char 
  3300 ;; Registers used:
  3301 ;;		wreg, status,2, status,0
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3307 ;;      Params:         0       0       0       0       0       0       0       0       0
  3308 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3309 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3310 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3311 ;;Total ram usage:        3 bytes
  3312 ;; Hardware stack levels used:    1
  3313 ;; Hardware stack levels required when called:    1
  3314 ;; This function calls:
  3315 ;;		Nothing
  3316 ;; This function is called by:
  3317 ;;		_main
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           	psect	text19
  3322  000C16                     __ptext19:
  3323                           	opt stack 0
  3324  000C16                     _Check_ModeWork:
  3325                           	opt stack 29
  3326                           
  3327                           ;main.c: 236: uint8_t result=0;
  3328                           
  3329                           ;incstack = 0
  3330  000C16  0E00               	movlw	0
  3331  000C18  6E15               	movwf	Check_ModeWork@result,c
  3332                           
  3333                           ;main.c: 237: uint16_t count;
  3334                           ;main.c: 238: while(RB0)
  3335  000C1A  D00C               	goto	l147
  3336  000C1C                     
  3337                           ;main.c: 239: {
  3338                           ;main.c: 240: if(count<5000)
  3339  000C1C  0E88               	movlw	136
  3340  000C1E  5C13               	subwf	Check_ModeWork@count,w,c
  3341  000C20  0E13               	movlw	19
  3342  000C22  5814               	subwfb	Check_ModeWork@count+1,w,c
  3343  000C24  B0D8               	btfsc	status,0,c
  3344  000C26  D003               	goto	l146
  3345                           
  3346                           ;main.c: 241: {
  3347                           ;main.c: 242: count++;
  3348  000C28  4A13               	infsnz	Check_ModeWork@count,f,c
  3349  000C2A  2A14               	incf	Check_ModeWork@count+1,f,c
  3350                           
  3351                           ;main.c: 243: }
  3352  000C2C  D003               	goto	l147
  3353  000C2E                     l146:
  3354                           
  3355                           ;main.c: 244: else
  3356                           ;main.c: 245: {
  3357                           ;main.c: 246: result=1;
  3358  000C2E  0E01               	movlw	1
  3359  000C30  6E15               	movwf	Check_ModeWork@result,c
  3360                           
  3361                           ;main.c: 247: break;
  3362  000C32  D002               	goto	u1340
  3363  000C34                     l147:
  3364  000C34  B081               	btfsc	3969,0,c	;volatile
  3365  000C36  D7F2               	goto	l145
  3366  000C38                     u1340:
  3367                           
  3368                           ;main.c: 248: }
  3369                           ;main.c: 249: }
  3370                           ;main.c: 250: return result;
  3371  000C38  5015               	movf	Check_ModeWork@result,w,c
  3372  000C3A  0012               	return	
  3373  000C3C                     __end_of_Check_ModeWork:
  3374                           	opt stack 0
  3375                           tblptru	equ	0xFF8
  3376                           tblptrh	equ	0xFF7
  3377                           tblptrl	equ	0xFF6
  3378                           tablat	equ	0xFF5
  3379                           prodh	equ	0xFF4
  3380                           prodl	equ	0xFF3
  3381                           intcon	equ	0xFF2
  3382                           postinc0	equ	0xFEE
  3383                           wreg	equ	0xFE8
  3384                           postdec1	equ	0xFE5
  3385                           fsr1l	equ	0xFE1
  3386                           indf2	equ	0xFDF
  3387                           postinc2	equ	0xFDE
  3388                           fsr2h	equ	0xFDA
  3389                           fsr2l	equ	0xFD9
  3390                           status	equ	0xFD8
  3391                           
  3392 ;; *************** function _ADC_read *****************
  3393 ;; Defined at:
  3394 ;;		line 24 in file "ADC.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;  channel         1    wreg     unsigned char 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  channel         1   22[COMRAM] unsigned char 
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  2   18[COMRAM] unsigned int 
  3401 ;; Registers used:
  3402 ;;		wreg, status,2, status,0
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3408 ;;      Params:         2       0       0       0       0       0       0       0       0
  3409 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3410 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3411 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3412 ;;Total ram usage:        5 bytes
  3413 ;; Hardware stack levels used:    1
  3414 ;; Hardware stack levels required when called:    1
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		_main
  3419 ;;		_Get_Speed
  3420 ;;		_Get_Voltage
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           	psect	text20
  3425  000B14                     __ptext20:
  3426                           	opt stack 0
  3427  000B14                     _ADC_read:
  3428                           	opt stack 29
  3429                           
  3430                           ;incstack = 0
  3431                           ;ADC_read@channel stored from wreg
  3432  000B14  6E17               	movwf	ADC_read@channel,c
  3433                           
  3434                           ;ADC.c: 27: if(channel>12)
  3435  000B16  0E0C               	movlw	12
  3436  000B18  6417               	cpfsgt	ADC_read@channel,c
  3437  000B1A  D005               	goto	l187
  3438                           
  3439                           ;ADC.c: 28: {
  3440                           ;ADC.c: 29: return 0;
  3441  000B1C  0E00               	movlw	0
  3442  000B1E  6E14               	movwf	?_ADC_read+1,c
  3443  000B20  0E00               	movlw	0
  3444  000B22  6E13               	movwf	?_ADC_read,c
  3445                           
  3446                           ;ADC.c: 31: }
  3447  000B24  0012               	return	
  3448  000B26                     l187:
  3449                           
  3450                           ;ADC.c: 32: else
  3451                           ;ADC.c: 33: {
  3452                           ;ADC.c: 34: ADCON0&=0xC5;
  3453  000B26  0EC5               	movlw	197
  3454  000B28  16C2               	andwf	4034,f,c	;volatile
  3455                           
  3456                           ;ADC.c: 35: ADCON0|=channel<<3;
  3457  000B2A  3817               	swapf	ADC_read@channel,w,c
  3458  000B2C  42E8               	rrncf	wreg,f,c
  3459  000B2E  0BF8               	andlw	248
  3460  000B30  12C2               	iorwf	4034,f,c	;volatile
  3461                           
  3462                           ;ADC.c: 36: _delay((unsigned long)((2)*(8000000/4000.0)));
  3463  000B32  0E06               	movlw	6
  3464  000B34  6E15               	movwf	??_ADC_read& (0+255),c
  3465  000B36  0E30               	movlw	48
  3466  000B38                     u1867:
  3467  000B38  2EE8               	decfsz	wreg,f,c
  3468  000B3A  D7FE               	bra	u1867
  3469  000B3C  2E15               	decfsz	??_ADC_read& (0+255),f,c
  3470  000B3E  D7FC               	bra	u1867
  3471  000B40  D000               	nop2	
  3472                           
  3473                           ;ADC.c: 37: GO_nDONE = 1;
  3474  000B42  82C2               	bsf	4034,1,c	;volatile
  3475  000B44  B2C2               	btfsc	4034,1,c	;volatile
  3476  000B46  D7FE               	goto	l191
  3477                           
  3478                           ;ADC.c: 39: return ((ADRESH<<8)+ADRESL);
  3479  000B48  50C4               	movf	4036,w,c	;volatile
  3480  000B4A  6E16               	movwf	(??_ADC_read+1)& (0+255),c
  3481  000B4C  6A15               	clrf	??_ADC_read& (0+255),c
  3482  000B4E  50C3               	movf	4035,w,c	;volatile
  3483  000B50  2415               	addwf	??_ADC_read,w,c
  3484  000B52  6E13               	movwf	?_ADC_read,c
  3485  000B54  0E00               	movlw	0
  3486  000B56  2016               	addwfc	??_ADC_read+1,w,c
  3487  000B58  6E14               	movwf	?_ADC_read+1,c
  3488  000B5A  0012               	return	
  3489  000B5C                     __end_of_ADC_read:
  3490                           	opt stack 0
  3491                           tblptru	equ	0xFF8
  3492                           tblptrh	equ	0xFF7
  3493                           tblptrl	equ	0xFF6
  3494                           tablat	equ	0xFF5
  3495                           prodh	equ	0xFF4
  3496                           prodl	equ	0xFF3
  3497                           intcon	equ	0xFF2
  3498                           postinc0	equ	0xFEE
  3499                           wreg	equ	0xFE8
  3500                           postdec1	equ	0xFE5
  3501                           fsr1l	equ	0xFE1
  3502                           indf2	equ	0xFDF
  3503                           postinc2	equ	0xFDE
  3504                           fsr2h	equ	0xFDA
  3505                           fsr2l	equ	0xFD9
  3506                           status	equ	0xFD8
  3507                           
  3508 ;; *************** function _ADC_Init *****************
  3509 ;; Defined at:
  3510 ;;		line 7 in file "ADC.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;  Uref            3   18[COMRAM] float 
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;		None
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  1    wreg      void 
  3517 ;; Registers used:
  3518 ;;		None
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3524 ;;      Params:         3       0       0       0       0       0       0       0       0
  3525 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3526 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3527 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3528 ;;Total ram usage:        3 bytes
  3529 ;; Hardware stack levels used:    1
  3530 ;; Hardware stack levels required when called:    1
  3531 ;; This function calls:
  3532 ;;		Nothing
  3533 ;; This function is called by:
  3534 ;;		_main
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538                           	psect	text21
  3539  000C96                     __ptext21:
  3540                           	opt stack 0
  3541  000C96                     _ADC_Init:
  3542                           	opt stack 29
  3543                           
  3544                           ;ADC.c: 10: ADCS2=1;
  3545                           
  3546                           ;incstack = 0
  3547  000C96  84C0               	bsf	4032,2,c	;volatile
  3548                           
  3549                           ;ADC.c: 11: ADCS1=0;
  3550  000C98  92C0               	bcf	4032,1,c	;volatile
  3551                           
  3552                           ;ADC.c: 12: ADCS0=0;
  3553  000C9A  90C0               	bcf	4032,0,c	;volatile
  3554                           
  3555                           ;ADC.c: 14: ADON=1;
  3556  000C9C  80C2               	bsf	4034,0,c	;volatile
  3557                           
  3558                           ;ADC.c: 16: ADFM=1;
  3559  000C9E  8EC0               	bsf	4032,7,c	;volatile
  3560                           
  3561                           ;ADC.c: 18: Vref=Uref;
  3562  000CA0  C013  F049         	movff	ADC_Init@Uref,_Vref
  3563  000CA4  C014  F04A         	movff	ADC_Init@Uref+1,_Vref+1
  3564  000CA8  C015  F04B         	movff	ADC_Init@Uref+2,_Vref+2
  3565  000CAC  0012               	return		;funcret
  3566  000CAE                     __end_of_ADC_Init:
  3567                           	opt stack 0
  3568                           tblptru	equ	0xFF8
  3569                           tblptrh	equ	0xFF7
  3570                           tblptrl	equ	0xFF6
  3571                           tablat	equ	0xFF5
  3572                           prodh	equ	0xFF4
  3573                           prodl	equ	0xFF3
  3574                           intcon	equ	0xFF2
  3575                           postinc0	equ	0xFEE
  3576                           wreg	equ	0xFE8
  3577                           postdec1	equ	0xFE5
  3578                           fsr1l	equ	0xFE1
  3579                           indf2	equ	0xFDF
  3580                           postinc2	equ	0xFDE
  3581                           fsr2h	equ	0xFDA
  3582                           fsr2l	equ	0xFD9
  3583                           status	equ	0xFD8
  3584                           
  3585 ;; *************** function _Timer1_OVF_Vector *****************
  3586 ;; Defined at:
  3587 ;;		line 27 in file "main.c"
  3588 ;; Parameters:    Size  Location     Type
  3589 ;;		None
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;		None
  3592 ;; Return value:  Size  Location     Type
  3593 ;;                  1    wreg      void 
  3594 ;; Registers used:
  3595 ;;		wreg, status,2, status,0
  3596 ;; Tracked objects:
  3597 ;;		On entry : 0/0
  3598 ;;		On exit  : 0/0
  3599 ;;		Unchanged: 0/0
  3600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3601 ;;      Params:         0       0       0       0       0       0       0       0       0
  3602 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3603 ;;      Temps:         18       0       0       0       0       0       0       0       0
  3604 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3605 ;;Total ram usage:       18 bytes
  3606 ;; Hardware stack levels used:    1
  3607 ;; This function calls:
  3608 ;;		Nothing
  3609 ;; This function is called by:
  3610 ;;		Interrupt level 2
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           	psect	intcode
  3615  000008                     __pintcode:
  3616                           	opt stack 0
  3617  000008                     _Timer1_OVF_Vector:
  3618                           	opt stack 27
  3619                           
  3620                           ;incstack = 0
  3621  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3622  00000A  ED88  F003         	call	int_func,f	;refresh shadow registers
  3623                           tblptru	equ	0xFF8
  3624                           tblptrh	equ	0xFF7
  3625                           tblptrl	equ	0xFF6
  3626                           tablat	equ	0xFF5
  3627                           prodh	equ	0xFF4
  3628                           prodl	equ	0xFF3
  3629                           intcon	equ	0xFF2
  3630                           postinc0	equ	0xFEE
  3631                           wreg	equ	0xFE8
  3632                           postdec1	equ	0xFE5
  3633                           fsr1l	equ	0xFE1
  3634                           indf2	equ	0xFDF
  3635                           postinc2	equ	0xFDE
  3636                           fsr2h	equ	0xFDA
  3637                           fsr2l	equ	0xFD9
  3638                           status	equ	0xFD8
  3639                           
  3640                           	psect	intcode_body
  3641  000710                     __pintcode_body:
  3642                           	opt stack 27
  3643  000710                     int_func:
  3644                           	opt stack 27
  3645  000710  0006               	pop		; remove dummy address from shadow register refresh
  3646  000712  CFFA F001          	movff	pclath,??_Timer1_OVF_Vector
  3647  000716  CFFB F002          	movff	pclatu,??_Timer1_OVF_Vector+1
  3648  00071A  CFE9 F003          	movff	fsr0l,??_Timer1_OVF_Vector+2
  3649  00071E  CFEA F004          	movff	fsr0h,??_Timer1_OVF_Vector+3
  3650  000722  CFE1 F005          	movff	fsr1l,??_Timer1_OVF_Vector+4
  3651  000726  CFE2 F006          	movff	fsr1h,??_Timer1_OVF_Vector+5
  3652  00072A  CFD9 F007          	movff	fsr2l,??_Timer1_OVF_Vector+6
  3653  00072E  CFDA F008          	movff	fsr2h,??_Timer1_OVF_Vector+7
  3654  000732  CFF3 F009          	movff	prodl,??_Timer1_OVF_Vector+8
  3655  000736  CFF4 F00A          	movff	prodh,??_Timer1_OVF_Vector+9
  3656  00073A  CFF6 F00B          	movff	tblptrl,??_Timer1_OVF_Vector+10
  3657  00073E  CFF7 F00C          	movff	tblptrh,??_Timer1_OVF_Vector+11
  3658  000742  CFF8 F00D          	movff	tblptru,??_Timer1_OVF_Vector+12
  3659  000746  CFF5 F00E          	movff	tablat,??_Timer1_OVF_Vector+13
  3660  00074A  C04C  F00F         	movff	btemp,??_Timer1_OVF_Vector+14
  3661  00074E  C04D  F010         	movff	btemp+1,??_Timer1_OVF_Vector+15
  3662  000752  C04E  F011         	movff	btemp+2,??_Timer1_OVF_Vector+16
  3663  000756  C04F  F012         	movff	btemp+3,??_Timer1_OVF_Vector+17
  3664                           
  3665                           ;main.c: 29: if(TMR1IE&&TMR1IF)
  3666  00075A  B09D               	btfsc	3997,0,c	;volatile
  3667  00075C  A09E               	btfss	3998,0,c	;volatile
  3668  00075E  D021               	goto	i2l99
  3669                           
  3670                           ;main.c: 30: {
  3671                           ;main.c: 31: if(Phs_p_pwm1==2)
  3672  000760  0E02               	movlw	2
  3673  000762  0100               	movlb	0	; () banked
  3674  000764  1979               	xorwf	_Phs_p_pwm1& (0+255),w,b
  3675  000766  A4D8               	btfss	status,2,c
  3676  000768  D004               	goto	i2l96
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;main.c: 32: {
  3680                           ;main.c: 33: PORTD = 0x0B;
  3681  00076A  0E0B               	movlw	11
  3682  00076C  6E83               	movwf	3971,c	;volatile
  3683                           
  3684                           ;main.c: 34: Phs_p_pwm1=3;
  3685  00076E  0E03               	movlw	3
  3686  000770  6F79               	movwf	_Phs_p_pwm1& (0+255),b
  3687  000772                     i2l96:
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;main.c: 35: }
  3691                           ;main.c: 36: if(Phs_p_pwm1==4)
  3692                           
  3693                           ; BSR set to: 0
  3694  000772  0E04               	movlw	4
  3695  000774  1979               	xorwf	_Phs_p_pwm1& (0+255),w,b
  3696  000776  A4D8               	btfss	status,2,c
  3697  000778  D004               	goto	i2l97
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;main.c: 37: {
  3701                           ;main.c: 38: PORTD = 0x0B;
  3702  00077A  0E0B               	movlw	11
  3703  00077C  6E83               	movwf	3971,c	;volatile
  3704                           
  3705                           ;main.c: 39: Phs_p_pwm1=1;
  3706  00077E  0E01               	movlw	1
  3707  000780  6F79               	movwf	_Phs_p_pwm1& (0+255),b
  3708  000782                     i2l97:
  3709                           
  3710                           ; BSR set to: 0
  3711                           ;main.c: 40: }
  3712                           ;main.c: 41: if(Phs_n_pwm1==2)
  3713                           
  3714                           ; BSR set to: 0
  3715  000782  0E02               	movlw	2
  3716  000784  197B               	xorwf	_Phs_n_pwm1& (0+255),w,b
  3717  000786  A4D8               	btfss	status,2,c
  3718  000788  D004               	goto	i2l98
  3719                           
  3720                           ; BSR set to: 0
  3721                           ;main.c: 42: {
  3722                           ;main.c: 43: PORTD = 0x0E;
  3723  00078A  0E0E               	movlw	14
  3724  00078C  6E83               	movwf	3971,c	;volatile
  3725                           
  3726                           ;main.c: 44: Phs_n_pwm1=3;
  3727  00078E  0E03               	movlw	3
  3728  000790  6F7B               	movwf	_Phs_n_pwm1& (0+255),b
  3729  000792                     i2l98:
  3730                           
  3731                           ; BSR set to: 0
  3732                           ;main.c: 45: }
  3733                           ;main.c: 46: if(Phs_n_pwm1==4)
  3734                           
  3735                           ; BSR set to: 0
  3736  000792  0E04               	movlw	4
  3737  000794  197B               	xorwf	_Phs_n_pwm1& (0+255),w,b
  3738  000796  A4D8               	btfss	status,2,c
  3739  000798  D004               	goto	i2l99
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;main.c: 47: {
  3743                           ;main.c: 48: PORTD = 0x0E;
  3744  00079A  0E0E               	movlw	14
  3745  00079C  6E83               	movwf	3971,c	;volatile
  3746                           
  3747                           ;main.c: 49: Phs_n_pwm1=1;
  3748  00079E  0E01               	movlw	1
  3749  0007A0  6F7B               	movwf	_Phs_n_pwm1& (0+255),b
  3750  0007A2                     i2l99:
  3751                           
  3752                           ;main.c: 50: }
  3753                           ;main.c: 51: }
  3754                           ;main.c: 52: TMR1IF=0;
  3755                           
  3756                           ; BSR set to: 0
  3757                           
  3758                           ; BSR set to: 0
  3759  0007A2  909E               	bcf	3998,0,c	;volatile
  3760  0007A4  C012  F04F         	movff	??_Timer1_OVF_Vector+17,btemp+3
  3761  0007A8  C011  F04E         	movff	??_Timer1_OVF_Vector+16,btemp+2
  3762  0007AC  C010  F04D         	movff	??_Timer1_OVF_Vector+15,btemp+1
  3763  0007B0  C00F  F04C         	movff	??_Timer1_OVF_Vector+14,btemp
  3764  0007B4  C00E  FFF5         	movff	??_Timer1_OVF_Vector+13,tablat
  3765  0007B8  C00D  FFF8         	movff	??_Timer1_OVF_Vector+12,tblptru
  3766  0007BC  C00C  FFF7         	movff	??_Timer1_OVF_Vector+11,tblptrh
  3767  0007C0  C00B  FFF6         	movff	??_Timer1_OVF_Vector+10,tblptrl
  3768  0007C4  C00A  FFF4         	movff	??_Timer1_OVF_Vector+9,prodh
  3769  0007C8  C009  FFF3         	movff	??_Timer1_OVF_Vector+8,prodl
  3770  0007CC  C008  FFDA         	movff	??_Timer1_OVF_Vector+7,fsr2h
  3771  0007D0  C007  FFD9         	movff	??_Timer1_OVF_Vector+6,fsr2l
  3772  0007D4  C006  FFE2         	movff	??_Timer1_OVF_Vector+5,fsr1h
  3773  0007D8  C005  FFE1         	movff	??_Timer1_OVF_Vector+4,fsr1l
  3774  0007DC  C004  FFEA         	movff	??_Timer1_OVF_Vector+3,fsr0h
  3775  0007E0  C003  FFE9         	movff	??_Timer1_OVF_Vector+2,fsr0l
  3776  0007E4  C002  FFFB         	movff	??_Timer1_OVF_Vector+1,pclatu
  3777  0007E8  C001  FFFA         	movff	??_Timer1_OVF_Vector,pclath
  3778  0007EC  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3779  0007EE  0011               	retfie		f
  3780  0007F0                     __end_of_Timer1_OVF_Vector:
  3781                           	opt stack 0
  3782  0000                     pclatu	equ	0xFFB
  3783                           pclath	equ	0xFFA
  3784                           tblptru	equ	0xFF8
  3785                           tblptrh	equ	0xFF7
  3786                           tblptrl	equ	0xFF6
  3787                           tablat	equ	0xFF5
  3788                           prodh	equ	0xFF4
  3789                           prodl	equ	0xFF3
  3790                           intcon	equ	0xFF2
  3791                           postinc0	equ	0xFEE
  3792                           fsr0h	equ	0xFEA
  3793                           fsr0l	equ	0xFE9
  3794                           wreg	equ	0xFE8
  3795                           postdec1	equ	0xFE5
  3796                           fsr1h	equ	0xFE2
  3797                           fsr1l	equ	0xFE1
  3798                           indf2	equ	0xFDF
  3799                           postinc2	equ	0xFDE
  3800                           fsr2h	equ	0xFDA
  3801                           fsr2l	equ	0xFD9
  3802                           status	equ	0xFD8
  3803                           pclatu	equ	0xFFB
  3804                           pclath	equ	0xFFA
  3805                           tblptru	equ	0xFF8
  3806                           tblptrh	equ	0xFF7
  3807                           tblptrl	equ	0xFF6
  3808                           tablat	equ	0xFF5
  3809                           prodh	equ	0xFF4
  3810                           prodl	equ	0xFF3
  3811                           intcon	equ	0xFF2
  3812                           postinc0	equ	0xFEE
  3813                           fsr0h	equ	0xFEA
  3814                           fsr0l	equ	0xFE9
  3815                           wreg	equ	0xFE8
  3816                           postdec1	equ	0xFE5
  3817                           fsr1h	equ	0xFE2
  3818                           fsr1l	equ	0xFE1
  3819                           indf2	equ	0xFDF
  3820                           postinc2	equ	0xFDE
  3821                           fsr2h	equ	0xFDA
  3822                           fsr2l	equ	0xFD9
  3823                           status	equ	0xFD8
  3824                           
  3825                           	psect	rparam
  3826  0000                     pclatu	equ	0xFFB
  3827                           pclath	equ	0xFFA
  3828                           tblptru	equ	0xFF8
  3829                           tblptrh	equ	0xFF7
  3830                           tblptrl	equ	0xFF6
  3831                           tablat	equ	0xFF5
  3832                           prodh	equ	0xFF4
  3833                           prodl	equ	0xFF3
  3834                           intcon	equ	0xFF2
  3835                           postinc0	equ	0xFEE
  3836                           fsr0h	equ	0xFEA
  3837                           fsr0l	equ	0xFE9
  3838                           wreg	equ	0xFE8
  3839                           postdec1	equ	0xFE5
  3840                           fsr1h	equ	0xFE2
  3841                           fsr1l	equ	0xFE1
  3842                           indf2	equ	0xFDF
  3843                           postinc2	equ	0xFDE
  3844                           fsr2h	equ	0xFDA
  3845                           fsr2l	equ	0xFD9
  3846                           status	equ	0xFD8
  3847                           
  3848                           	psect	temp
  3849  00004C                     btemp:
  3850                           	opt stack 0
  3851  00004C                     	ds	1
  3852  0000                     int$flags	set	btemp
  3853  0000                     wtemp6	set	btemp+1
  3854                           pclatu	equ	0xFFB
  3855                           pclath	equ	0xFFA
  3856                           tblptru	equ	0xFF8
  3857                           tblptrh	equ	0xFF7
  3858                           tblptrl	equ	0xFF6
  3859                           tablat	equ	0xFF5
  3860                           prodh	equ	0xFF4
  3861                           prodl	equ	0xFF3
  3862                           intcon	equ	0xFF2
  3863                           postinc0	equ	0xFEE
  3864                           fsr0h	equ	0xFEA
  3865                           fsr0l	equ	0xFE9
  3866                           wreg	equ	0xFE8
  3867                           postdec1	equ	0xFE5
  3868                           fsr1h	equ	0xFE2
  3869                           fsr1l	equ	0xFE1
  3870                           indf2	equ	0xFDF
  3871                           postinc2	equ	0xFDE
  3872                           fsr2h	equ	0xFDA
  3873                           fsr2l	equ	0xFD9
  3874                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     68      75
    BANK0           160     23      28
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> main@buf(BANK0[5]), 

    Ressieve_String@buffer	PTR unsigned char  size(2) Largest target is 5
		 -> main@buf(BANK0[5]), 


Critical Paths under _main in COMRAM

    _main->___fttol
    _atoi->___wmul
    _Usart_Init->___aldiv
    _PWM_SetValue->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___lwtoft
    ___altoft->___aldiv
    _PWM_Init->___aldiv

Critical Paths under _Timer1_OVF_Vector in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_PWM_SetValue
    _PWM_SetValue->___fttol

Critical Paths under _Timer1_OVF_Vector in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer1_OVF_Vector in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer1_OVF_Vector in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer1_OVF_Vector in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer1_OVF_Vector in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer1_OVF_Vector in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Timer1_OVF_Vector in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Timer1_OVF_Vector in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   24241
                                             12 BANK0     11    11      0
                           _ADC_Init
                           _ADC_read
                     _Check_ModeWork
             _Check_button_direction
                           _PWM_Init
                       _PWM_SetValue
                          _Port_Init
                    _Ressieve_String
                        _Timer1_Init
                         _Usart_Init
                            ___ftmul
                            ___fttol
                           ___lwtoft
                             ___wmul
                               _atoi
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 7     5      2     835
                                             24 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Usart_Init                                          14    10      4    1140
                                             32 COMRAM    14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ressieve_String                                      6     2      4     242
                                             18 COMRAM     6     2      4
                          _Uart_Read
 ---------------------------------------------------------------------------------
 (2) _Uart_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Port_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_SetValue                                         6     4      2   13622
                                              6 BANK0      6     4      2
                            ___aldiv
                           ___altoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2716
                                             26 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     551
                                             59 COMRAM     9     5      4
                                              0 BANK0      6     6      0
                            ___aldiv (ARG)
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3374
                                             44 COMRAM    15     9      6
                            ___aldiv (ARG)
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3176
                                             29 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___altoft                                            10     6      4    2680
                                             32 COMRAM    10     6      4
                            ___aldiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2466
                                             18 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             4     4      0     908
                                             32 COMRAM     4     4      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     908
                                             18 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Check_button_direction                               3     3      0      47
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Check_ModeWork                                       3     3      0      47
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             5     3      2      44
                                             18 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             3     0      3      98
                                             18 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Timer1_OVF_Vector                                   18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_read
   _Check_ModeWork
   _Check_button_direction
   _PWM_Init
     ___aldiv
   _PWM_SetValue
     ___aldiv
     ___altoft
       ___aldiv (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___aldiv (ARG)
       ___altoft (ARG)
         ___aldiv (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___aldiv (ARG)
       ___altoft (ARG)
         ___aldiv (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___aldiv (ARG)
         ___altoft (ARG)
           ___aldiv (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _Port_Init
   _Ressieve_String
     _Uart_Read
   _Timer1_Init
   _Usart_Init
     ___aldiv
   ___ftmul
     ___aldiv (ARG)
     ___altoft (ARG)
       ___aldiv (ARG)
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___aldiv (ARG)
     ___altoft (ARG)
       ___aldiv (ARG)
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___aldiv (ARG)
       ___altoft (ARG)
         ___aldiv (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   ___wmul
   _atoi
     ___wmul
     _isdigit

 _Timer1_OVF_Vector (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     17      1C       5       17.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     44      4B       1       79.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      67      20        0.0%
DATA                 0      0      67       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Jun 21 17:02:47 2018

                   ___altoft@exp 0029                    ___altoft@sign 002A  
          __size_of_PWM_SetValue 00EA                 ??_Check_ModeWork 0013  
                    __CFG_BOR$ON 000000              ___wmul@multiplicand 0015  
                    __CFG_BORV$3 000000                     __CFG_CP0$OFF 000000  
                   __CFG_CP1$OFF 000000                     __CFG_CP2$OFF 000000  
                   __CFG_CP3$OFF 000000                      __CFG_LVP$ON 000000  
                            l110 0126                              l111 013E  
                            l121 0214                              l113 0194  
                            l105 0054                              l122 01AE  
                            l114 014E                              l106 0088  
                            l115 01A8                              l124 01CA  
                            l116 016A                              l109 010C  
                            l126 01EE                              l118 017E  
                            l311 0920                              l223 0340  
                            l312 0914                              l145 0C1C  
                            l137 0BF6                              l146 0C2E  
                            l138 0C08                              l250 0BA6  
                            l147 0C34                              l139 0C0E  
                            l315 0954                              l316 0962  
                            l308 08DA                              l317 0978  
                            l309 08F2                              l422 0882  
                            l191 0B44                              l423 0848  
                            l416 07F6                              l337 0A66  
                            l249 0BBC                              l425 08B4  
                            l417 07F2                              l338 0A5A  
                            l187 0B26                              l419 0836  
                            l550 06DE                              l561 0474  
                            l482 09B2                              l546 0652  
                            l483 09A8                              l563 049C  
                            l548 067A                              l564 04CE  
                            l485 09E6                              l549 06B8  
                            l565 04DE                              l486 09D0  
                            l590 041E                              l582 0382  
                            l567 04F6                              l591 0412  
                            l488 0A0E                              l568 0506  
                            l584 03FA                              l489 0A04  
                            l593 043A                              l585 03EA  
                            l597 0C76                              _GIE 007F97  
                   __CFG_CPB$OFF 000000                              _RB0 007C08  
                            _RC0 007C10                              _PR2 000FCB  
                   __CFG_CPD$OFF 000000                              u840 099A  
                            u950 0924                              u880 0A18  
                            wreg 000FE8                     ___ftdiv@cntr 0027  
                   ___ftdiv@sign 002C                     __CFG_WDT$OFF 000000  
                           l2010 0194                             l1750 087E  
                           _ADFM 007E07                             _ADON 007E10  
                           _CREN 007D5C                             u1001 063A  
                           u1021 0662                             u1051 045C  
                           u1215 0AD2                             u1071 0484  
                           u1225 0AE2                             u1305 02C8  
                           u1315 0312                             u1340 0C38  
                           u1450 0C12                             u1275 023C  
                           u1285 0286                             u1631 0364  
                           u1650 03A0                             u1730 060A  
                           u1725 055E                             u1655 0398  
                           u1745 060C                             u1690 0424  
                           u1867 0B38                             _PEIE 007F96  
                           _RCIF 007CF5                             i2l96 0772  
                           i2l97 0782                             i2l98 0792  
                           i2l99 07A2                             _TMR1 000FCE  
                           _SPEN 007D5F                             _TRMT 007D61  
                           _TXEN 007D65                             _SYNC 007D64  
                           _Vref 0049                             _atoi 07F0  
                           _main 0012                             _freq 0045  
                   ___ftpack@arg 0013                     ___ftpack@exp 0016  
                PWM_SetValue@val 0066                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           fsr0l 000FE9                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 004C                 __end_of_ADC_Init 0CAE  
                           prodh 000FF4                             prodl 000FF3  
                           start 000E                 __end_of_ADC_read 0B5C  
                  __CFG_IESO$OFF 000000                     _PWM_SetValue 0540  
    Check_button_direction@count 0013                    __CFG_MCLRE$ON 000000  
                   ___ftmul@cntr 003A                     ___param_bank 000000  
                   ___ftmul@sign 003B                     ___fttol@exp1 0065  
                   ___fttol@lval 0061           _Check_button_direction 0BF0  
                  __CFG_PLLDIV$1 000000                   __CFG_CCP2MX$ON 000000  
                          _DC2B0 007DD4                            _DC2B1 007DD5  
                __end_of___aldiv 098A                            ?_atoi 0019  
                          _ADCS0 007E00                            _ADCS1 007E01  
                          _ADCS2 007E02                            ?_main 0001  
                __end_of___ftdiv 0710                  __end_of___ftmul 0540  
                __end_of___fttol 044C                            _RCREG 000FAE  
                          _SPBRG 000FAF                            _PORTD 000F83  
                  __CFG_USBDIV$1 000000                            _TXREG 000FAD  
                  __CFG_PWRT$OFF 000000                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT2$OFF 000000  
                  __CFG_WRT3$OFF 000000                   __CFG_EBTR0$OFF 000000  
                 __CFG_FCMEN$OFF 000000                   __CFG_EBTR1$OFF 000000  
                 __CFG_EBTR2$OFF 000000                   __CFG_EBTR3$OFF 000000  
                  __CFG_WRTB$OFF 000000                    __CFG_WRTC$OFF 000000  
                  __CFG_WRTD$OFF 000000                   __CFG_EBTRB$OFF 000000  
                __end_of_isdigit 0C7E                    ___ftpack@sign 0017  
                          atoi@a 001E                            atoi@s 0019  
                          pclath 000FFA                 __end_of_PWM_Init 0B14  
                          tablat 000FF5                            status 000FD8  
                          wtemp6 004D                   __CFG_ICPRT$OFF 000000  
                __initialization 0B5C     Check_button_direction@result 0015  
                   __end_of_atoi 08BE                     __end_of_main 022A  
                         ??_atoi 001B                           ??_main 006C  
                  ___fttol@sign1 0060                    __activetblptr 000002  
                         _ADCON0 000FC2                           _CCP2M2 007DD2  
                         _CCP2M3 007DD3                 __end_of___altoft 0AB0  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
                         _CCPR2L 000FBB                 __end_of___ftpack 0A38  
       __size_of_Ressieve_String 002E                       _Phs_n_pwm1 007B  
               __end_of___lwtoft 0C60                       _Phs_p_pwm1 0079  
                         _TMR1IE 007CE8                           _TMR1IF 007CF0  
                         _TMR1CS 007E69                           _TMR1ON 007E68  
                         _TRISB0 007C98                           _TRISC0 007CA0  
                         _TRISC1 007CA1                           _TRISD0 007CA8  
                         _TRISD1 007CA9                           _TRISD2 007CAA  
                         _TRISD3 007CAB                           _TRISC6 007CA6  
                         _TRISC7 007CA7                       _Phs_z_pwm1 007A  
                  ??_Timer1_Init 0013                   __CFG_XINST$OFF 000000  
                         _Uz_pwm 0077                        ??___aldiv 001B  
                         ___wmul 0BCA                   __CFG_STVREN$ON 000000  
                      ??___ftdiv 0024                        ??___ftmul 0033  
                      ??___fttol 0040               __size_of_Uart_Read 0008  
          ___ftmul@f3_as_product 0037                     __pdataCOMRAM 0045  
                      ??_isdigit 0013               __size_of_Port_Init 0018  
                      ?_ADC_Init 0013                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                      ?_ADC_read 0013                  __CFG_FOSC$EC_EC 000000  
                     _Usart_Init 022A                       __accesstop 0060  
        __end_of__initialization 0B8E                       ___altoft@c 0021  
                __CFG_PBADEN$OFF 000000                    ___rparam_used 000001  
                     ___ftdiv@f1 001E                       ___ftdiv@f2 0021  
                     ___ftdiv@f3 0028                       ___ftmul@f1 002D  
                     ___ftmul@f2 0030                       ___fttol@f1 003C  
                 __pcstackCOMRAM 0001              __end_of_Timer1_Init 0CC0  
              _Timer1_OVF_Vector 0008                       ___lwtoft@c 001B  
                      ?_PWM_Init 0001               ?_Timer1_OVF_Vector 0001  
                ADC_read@channel 0017                       ??_ADC_Init 0016  
                     ??_ADC_read 0015              ??_Timer1_OVF_Vector 0001  
                     __pbssBANK0 0077                __end_of_Uart_Read 0CC8  
               main@ConvertSpeed 0075                __end_of_Port_Init 0C96  
              ??_Ressieve_String 0017          ?_Check_button_direction 0001  
                        ?___wmul 0013        __end_of_Timer1_OVF_Vector 07F0  
                      ?___altoft 0021                        ?___ftpack 0013  
                     ??_PWM_Init 0021                          _T1CKPS0 007E6C  
                        _T1CKPS1 007E6D                          _T2CKPS0 007E50  
                        _T2CKPS1 007E51                        ?___lwtoft 001B  
                        _T1OSCEN 007E6B                  __CFG_VREGEN$OFF 000000  
                    ?_Usart_Init 0021   __end_of_Check_button_direction 0C16  
                        __Hparam 0000                      _Timer1_Init 0CAE  
                   ADC_Init@Uref 0013                          __Lparam 0000  
                        ___aldiv 08BE                          ___ftdiv 062A  
                __size_of___wmul 0026                          ___ftmul 044C  
                        ___fttol 0354                       ??___altoft 0025  
                        __pcinit 0B5C                       ??___ftpack 0018  
                        __ramtop 0800                          __ptext0 0012  
                        __ptext1 07F0                          __ptext2 0C60  
                        __ptext3 0BCA                          __ptext4 022A  
                        __ptext5 0CAE                          __ptext6 0B9C  
                        __ptext7 0CC0                          __ptext8 0C7E  
                        __ptext9 0540                       ??___lwtoft 001E  
                        _isdigit 0C60                 ___aldiv@dividend 0013  
        __size_of_Check_ModeWork 0026                          main@buf 006E  
                 __pintcode_body 0710             end_of_initialization 0B8E  
                  __Lmediumconst 0000                          int_func 0710  
               Ressieve_String@i 0017                 ___aldiv@quotient 001D  
                        postdec1 000FE5                          postinc0 000FEE  
                        postinc2 000FDE       __size_of_Timer1_OVF_Vector 07E8  
                      _PORTDbits 000F83              __size_of_Usart_Init 012A  
              __size_of_ADC_Init 0018                __size_of_ADC_read 0048  
                     main@adcVal 0073                      ___ftdiv@exp 002B  
                    ___ftmul@exp 0036                   __end_of___wmul 0BF0  
                 Usart_Init@baud 0021                    __pidataCOMRAM 0CC8  
              __size_of_PWM_Init 0064              start_initialization 0B5C  
                    Usart_Init@x 002D                  _Ressieve_String 0B9C  
                  ?_PWM_SetValue 0066                        _Uart_Read 0CC0  
                       ??___wmul 0017                        _Port_Init 0C7E  
               __CFG_LPT1OSC$OFF 000000                __size_of___altoft 0078  
              __size_of___ftpack 00AE                      __pbssCOMRAM 0049  
              __size_of___lwtoft 0024                    __pcstackBANK0 0060  
                 _Check_ModeWork 0C16                     ??_Usart_Init 0025  
                 ??_PWM_SetValue 0068                     ?_Timer1_Init 0001  
                     ?_Uart_Read 0001                        __pintcode 0008  
                       ?___aldiv 0013                         ?___ftdiv 001E  
                     ?_Port_Init 0001                         ?___ftmul 002D  
           Check_ModeWork@result 0015                         ?___fttol 003C  
             __end_of_Usart_Init 0354           __end_of_Check_ModeWork 0C3C  
        __end_of_Ressieve_String 0BCA                         ?_isdigit 0001  
                       _ADC_Init 0C96                         _ADC_read 0B14  
                ___aldiv@divisor 0017                  ___aldiv@counter 001B  
                 ___wmul@product 0017                         _GO_nDONE 007E11  
               __CFG_WDTPS$32768 000000                         _PWM_Init 0AB0  
              ___wmul@multiplier 0013                  ?_Check_ModeWork 0001  
                      copy_data0 0B70                         __Hrparam 0000  
                    ??_Uart_Read 0013                         __Lrparam 0000  
          Ressieve_String@buffer 0013            Ressieve_String@length 0015  
                    ??_Port_Init 0013                 __size_of___aldiv 00CC  
               __size_of___ftdiv 00E6                         ___altoft 0A38  
               __size_of___ftmul 00F4                 __size_of___fttol 00F8  
                       ___ftpack 098A                      _isdigit$459 0014  
                       ___lwtoft 0C3C             __end_of_PWM_SetValue 062A  
               ?_Ressieve_String 0013                 __size_of_isdigit 001E  
            Check_ModeWork@count 0013                         __ptext10 0C3C  
                       __ptext11 0354                         __ptext20 0B14  
                       __ptext12 044C                         __ptext21 0C96  
                       __ptext13 062A                         __ptext14 0A38  
                       __ptext15 098A                         __ptext16 0AB0  
                       __ptext17 08BE                         __ptext18 0BF0  
                       __ptext19 0C16         ??_Check_button_direction 0013  
                  __size_of_atoi 00CE                    __size_of_main 0218  
           __size_of_Timer1_Init 0012                         int$flags 004C  
                       atoi@sign 001D            __CFG_CPUDIV$OSC1_PLL2 000000  
                       isdigit@c 0015                         intlevel2 0000  
                   ___aldiv@sign 001C  __size_of_Check_button_direction 0026  
