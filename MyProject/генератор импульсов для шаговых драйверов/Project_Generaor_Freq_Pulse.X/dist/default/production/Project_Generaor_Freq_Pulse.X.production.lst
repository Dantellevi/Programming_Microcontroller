

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Apr 06 12:53:07 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 1.45
    53                           ; Generated 16/11/2017 GMT
    54                           ; 
    55                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F877A Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  000E                     	;# 
   102  000F                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0015                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001B                     	;# 
   117  001C                     	;# 
   118  001D                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  0087                     	;# 
   125  0088                     	;# 
   126  0089                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0094                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  0088                     	;# 
   186  0089                     	;# 
   187  008C                     	;# 
   188  008D                     	;# 
   189  008E                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0094                     	;# 
   254  0098                     	;# 
   255  0099                     	;# 
   256  009C                     	;# 
   257  009D                     	;# 
   258  009E                     	;# 
   259  009F                     	;# 
   260  010C                     	;# 
   261  010D                     	;# 
   262  010E                     	;# 
   263  010F                     	;# 
   264  018C                     	;# 
   265  018D                     	;# 
   266  0000                     	;# 
   267  0001                     	;# 
   268  0002                     	;# 
   269  0003                     	;# 
   270  0004                     	;# 
   271  0005                     	;# 
   272  0006                     	;# 
   273  0007                     	;# 
   274  0008                     	;# 
   275  0009                     	;# 
   276  000A                     	;# 
   277  000B                     	;# 
   278  000C                     	;# 
   279  000D                     	;# 
   280  000E                     	;# 
   281  000E                     	;# 
   282  000F                     	;# 
   283  0010                     	;# 
   284  0011                     	;# 
   285  0012                     	;# 
   286  0013                     	;# 
   287  0014                     	;# 
   288  0015                     	;# 
   289  0015                     	;# 
   290  0016                     	;# 
   291  0017                     	;# 
   292  0018                     	;# 
   293  0019                     	;# 
   294  001A                     	;# 
   295  001B                     	;# 
   296  001B                     	;# 
   297  001C                     	;# 
   298  001D                     	;# 
   299  001E                     	;# 
   300  001F                     	;# 
   301  0081                     	;# 
   302  0085                     	;# 
   303  0086                     	;# 
   304  0087                     	;# 
   305  0088                     	;# 
   306  0089                     	;# 
   307  008C                     	;# 
   308  008D                     	;# 
   309  008E                     	;# 
   310  0091                     	;# 
   311  0092                     	;# 
   312  0093                     	;# 
   313  0094                     	;# 
   314  0098                     	;# 
   315  0099                     	;# 
   316  009C                     	;# 
   317  009D                     	;# 
   318  009E                     	;# 
   319  009F                     	;# 
   320  010C                     	;# 
   321  010D                     	;# 
   322  010E                     	;# 
   323  010F                     	;# 
   324  018C                     	;# 
   325  018D                     	;# 
   326  0000                     	;# 
   327  0001                     	;# 
   328  0002                     	;# 
   329  0003                     	;# 
   330  0004                     	;# 
   331  0005                     	;# 
   332  0006                     	;# 
   333  0007                     	;# 
   334  0008                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  000D                     	;# 
   340  000E                     	;# 
   341  000E                     	;# 
   342  000F                     	;# 
   343  0010                     	;# 
   344  0011                     	;# 
   345  0012                     	;# 
   346  0013                     	;# 
   347  0014                     	;# 
   348  0015                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0017                     	;# 
   352  0018                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  001D                     	;# 
   359  001E                     	;# 
   360  001F                     	;# 
   361  0081                     	;# 
   362  0085                     	;# 
   363  0086                     	;# 
   364  0087                     	;# 
   365  0088                     	;# 
   366  0089                     	;# 
   367  008C                     	;# 
   368  008D                     	;# 
   369  008E                     	;# 
   370  0091                     	;# 
   371  0092                     	;# 
   372  0093                     	;# 
   373  0094                     	;# 
   374  0098                     	;# 
   375  0099                     	;# 
   376  009C                     	;# 
   377  009D                     	;# 
   378  009E                     	;# 
   379  009F                     	;# 
   380  010C                     	;# 
   381  010D                     	;# 
   382  010E                     	;# 
   383  010F                     	;# 
   384  018C                     	;# 
   385  018D                     	;# 
   386                           
   387                           	psect	idataBANK0
   388  07F9                     __pidataBANK0:	
   389                           
   390                           ;initializer for _FreqTim
   391  07F9  3401               	retlw	1
   392  07FA  3400               	retlw	0
   393                           
   394                           ;initializer for _flag_count
   395  07FB  3401               	retlw	1
   396                           
   397                           ;initializer for _Freq
   398  07FC  3488               	retlw	136
   399  07FD  3413               	retlw	19
   400  07FE  3400               	retlw	0
   401  07FF  3400               	retlw	0
   402                           
   403                           	psect	stringtext
   404  0100                     __pstringtext:	
   405  0100                     stringtab:	
   406  0100                     __stringtab:	
   407                           
   408                           ;	String table - string pointers are 2 bytes each
   409  0100  1BFF               	btfsc	btemp+1,7
   410  0101  290A               	ljmp	stringcode
   411  0102  1383               	bcf	3,7
   412  0103  187F               	btfsc	btemp+1,0
   413  0104  1783               	bsf	3,7
   414  0105  0800               	movf	0,w
   415  0106  0A84               	incf	4,f
   416  0107  1903               	skipnz
   417  0108  0AFF               	incf	btemp+1,f
   418  0109  0008               	return
   419  010A                     stringcode:	
   420  010A  087F               	movf	btemp+1,w
   421  010B  397F               	andlw	127
   422  010C  008A               	movwf	10
   423  010D  0804               	movf	4,w
   424  010E  0A84               	incf	4,f
   425  010F  1903               	skipnz
   426  0110  0AFF               	incf	btemp+1,f
   427  0111  0082               	movwf	2
   428  0112                     __stringbase:	
   429  0112                     __end_of__stringtab:	
   430  0112                     _symbol:	
   431  0112  3400               	retlw	0
   432  0113  3400               	retlw	0
   433  0114  3400               	retlw	0
   434  0115  3400               	retlw	0
   435  0116  3400               	retlw	0
   436  0117  3400               	retlw	0
   437  0118  3400               	retlw	0
   438  0119  344F               	retlw	79
   439  011A  3400               	retlw	0
   440  011B  3400               	retlw	0
   441  011C  3400               	retlw	0
   442  011D  3407               	retlw	7
   443  011E  3400               	retlw	0
   444  011F  3407               	retlw	7
   445  0120  3400               	retlw	0
   446  0121  3414               	retlw	20
   447  0122  347F               	retlw	127
   448  0123  3414               	retlw	20
   449  0124  347F               	retlw	127
   450  0125  3414               	retlw	20
   451  0126  3424               	retlw	36
   452  0127  342A               	retlw	42
   453  0128  347F               	retlw	127
   454  0129  342A               	retlw	42
   455  012A  3412               	retlw	18
   456  012B  3423               	retlw	35
   457  012C  3413               	retlw	19
   458  012D  3408               	retlw	8
   459  012E  3464               	retlw	100
   460  012F  3462               	retlw	98
   461  0130  3436               	retlw	54
   462  0131  3449               	retlw	73
   463  0132  3455               	retlw	85
   464  0133  3422               	retlw	34
   465  0134  3440               	retlw	64
   466  0135  3400               	retlw	0
   467  0136  3405               	retlw	5
   468  0137  3403               	retlw	3
   469  0138  3400               	retlw	0
   470  0139  3400               	retlw	0
   471  013A  3400               	retlw	0
   472  013B  341C               	retlw	28
   473  013C  3422               	retlw	34
   474  013D  3441               	retlw	65
   475  013E  3400               	retlw	0
   476  013F  3400               	retlw	0
   477  0140  3441               	retlw	65
   478  0141  3422               	retlw	34
   479  0142  341C               	retlw	28
   480  0143  3400               	retlw	0
   481  0144  3414               	retlw	20
   482  0145  3408               	retlw	8
   483  0146  343E               	retlw	62
   484  0147  3408               	retlw	8
   485  0148  3414               	retlw	20
   486  0149  3408               	retlw	8
   487  014A  3408               	retlw	8
   488  014B  343E               	retlw	62
   489  014C  3408               	retlw	8
   490  014D  3408               	retlw	8
   491  014E  3400               	retlw	0
   492  014F  3450               	retlw	80
   493  0150  3430               	retlw	48
   494  0151  3400               	retlw	0
   495  0152  3400               	retlw	0
   496  0153  3408               	retlw	8
   497  0154  3408               	retlw	8
   498  0155  3408               	retlw	8
   499  0156  3408               	retlw	8
   500  0157  3408               	retlw	8
   501  0158  3400               	retlw	0
   502  0159  3460               	retlw	96
   503  015A  3460               	retlw	96
   504  015B  3400               	retlw	0
   505  015C  3400               	retlw	0
   506  015D  3420               	retlw	32
   507  015E  3410               	retlw	16
   508  015F  3408               	retlw	8
   509  0160  3404               	retlw	4
   510  0161  3402               	retlw	2
   511  0162  343E               	retlw	62
   512  0163  3451               	retlw	81
   513  0164  3449               	retlw	73
   514  0165  3445               	retlw	69
   515  0166  343E               	retlw	62
   516  0167  3400               	retlw	0
   517  0168  3442               	retlw	66
   518  0169  347F               	retlw	127
   519  016A  3440               	retlw	64
   520  016B  3400               	retlw	0
   521  016C  3442               	retlw	66
   522  016D  3461               	retlw	97
   523  016E  3451               	retlw	81
   524  016F  3449               	retlw	73
   525  0170  3446               	retlw	70
   526  0171  3421               	retlw	33
   527  0172  3441               	retlw	65
   528  0173  3445               	retlw	69
   529  0174  344B               	retlw	75
   530  0175  3431               	retlw	49
   531  0176  3418               	retlw	24
   532  0177  3414               	retlw	20
   533  0178  3412               	retlw	18
   534  0179  347F               	retlw	127
   535  017A  3410               	retlw	16
   536  017B  3427               	retlw	39
   537  017C  3445               	retlw	69
   538  017D  3445               	retlw	69
   539  017E  3445               	retlw	69
   540  017F  3439               	retlw	57
   541  0180  343C               	retlw	60
   542  0181  344A               	retlw	74
   543  0182  3449               	retlw	73
   544  0183  3449               	retlw	73
   545  0184  3430               	retlw	48
   546  0185  3401               	retlw	1
   547  0186  3471               	retlw	113
   548  0187  3409               	retlw	9
   549  0188  3405               	retlw	5
   550  0189  3403               	retlw	3
   551  018A  3436               	retlw	54
   552  018B  3449               	retlw	73
   553  018C  3449               	retlw	73
   554  018D  3449               	retlw	73
   555  018E  3436               	retlw	54
   556  018F  3406               	retlw	6
   557  0190  3449               	retlw	73
   558  0191  3449               	retlw	73
   559  0192  3429               	retlw	41
   560  0193  341E               	retlw	30
   561  0194  3400               	retlw	0
   562  0195  3436               	retlw	54
   563  0196  3436               	retlw	54
   564  0197  3400               	retlw	0
   565  0198  3400               	retlw	0
   566  0199  3400               	retlw	0
   567  019A  3456               	retlw	86
   568  019B  3436               	retlw	54
   569  019C  3400               	retlw	0
   570  019D  3400               	retlw	0
   571  019E  3408               	retlw	8
   572  019F  3414               	retlw	20
   573  01A0  3422               	retlw	34
   574  01A1  3441               	retlw	65
   575  01A2  3400               	retlw	0
   576  01A3  3414               	retlw	20
   577  01A4  3414               	retlw	20
   578  01A5  3414               	retlw	20
   579  01A6  3414               	retlw	20
   580  01A7  3414               	retlw	20
   581  01A8  3400               	retlw	0
   582  01A9  3441               	retlw	65
   583  01AA  3422               	retlw	34
   584  01AB  3414               	retlw	20
   585  01AC  3408               	retlw	8
   586  01AD  3402               	retlw	2
   587  01AE  3401               	retlw	1
   588  01AF  3451               	retlw	81
   589  01B0  3409               	retlw	9
   590  01B1  3406               	retlw	6
   591  01B2  3432               	retlw	50
   592  01B3  3449               	retlw	73
   593  01B4  3471               	retlw	113
   594  01B5  3441               	retlw	65
   595  01B6  343E               	retlw	62
   596  01B7  347E               	retlw	126
   597  01B8  3411               	retlw	17
   598  01B9  3411               	retlw	17
   599  01BA  3411               	retlw	17
   600  01BB  347E               	retlw	126
   601  01BC  347F               	retlw	127
   602  01BD  3449               	retlw	73
   603  01BE  3449               	retlw	73
   604  01BF  3449               	retlw	73
   605  01C0  3436               	retlw	54
   606  01C1  343E               	retlw	62
   607  01C2  3441               	retlw	65
   608  01C3  3441               	retlw	65
   609  01C4  3441               	retlw	65
   610  01C5  3422               	retlw	34
   611  01C6  347F               	retlw	127
   612  01C7  3441               	retlw	65
   613  01C8  3441               	retlw	65
   614  01C9  3422               	retlw	34
   615  01CA  341C               	retlw	28
   616  01CB  347F               	retlw	127
   617  01CC  3449               	retlw	73
   618  01CD  3449               	retlw	73
   619  01CE  3449               	retlw	73
   620  01CF  3441               	retlw	65
   621  01D0  347F               	retlw	127
   622  01D1  3409               	retlw	9
   623  01D2  3409               	retlw	9
   624  01D3  3409               	retlw	9
   625  01D4  3401               	retlw	1
   626  01D5  343E               	retlw	62
   627  01D6  3441               	retlw	65
   628  01D7  3449               	retlw	73
   629  01D8  3449               	retlw	73
   630  01D9  343A               	retlw	58
   631  01DA  347F               	retlw	127
   632  01DB  3408               	retlw	8
   633  01DC  3408               	retlw	8
   634  01DD  3408               	retlw	8
   635  01DE  347F               	retlw	127
   636  01DF  3400               	retlw	0
   637  01E0  3441               	retlw	65
   638  01E1  347F               	retlw	127
   639  01E2  3441               	retlw	65
   640  01E3  3400               	retlw	0
   641  01E4  3420               	retlw	32
   642  01E5  3440               	retlw	64
   643  01E6  3441               	retlw	65
   644  01E7  343F               	retlw	63
   645  01E8  3401               	retlw	1
   646  01E9  347F               	retlw	127
   647  01EA  3408               	retlw	8
   648  01EB  3414               	retlw	20
   649  01EC  3422               	retlw	34
   650  01ED  3441               	retlw	65
   651  01EE  347F               	retlw	127
   652  01EF  3440               	retlw	64
   653  01F0  3440               	retlw	64
   654  01F1  3440               	retlw	64
   655  01F2  3440               	retlw	64
   656  01F3  347F               	retlw	127
   657  01F4  3402               	retlw	2
   658  01F5  340C               	retlw	12
   659  01F6  3402               	retlw	2
   660  01F7  347F               	retlw	127
   661  01F8  347F               	retlw	127
   662  01F9  3404               	retlw	4
   663  01FA  3408               	retlw	8
   664  01FB  3410               	retlw	16
   665  01FC  347F               	retlw	127
   666  01FD  343E               	retlw	62
   667  01FE  3441               	retlw	65
   668  01FF  3441               	retlw	65
   669  0200  3441               	retlw	65
   670  0201  343E               	retlw	62
   671  0202  347F               	retlw	127
   672  0203  3409               	retlw	9
   673  0204  3409               	retlw	9
   674  0205  3409               	retlw	9
   675  0206  3406               	retlw	6
   676  0207  343E               	retlw	62
   677  0208  3441               	retlw	65
   678  0209  3451               	retlw	81
   679  020A  3421               	retlw	33
   680  020B  345E               	retlw	94
   681  020C  347F               	retlw	127
   682  020D  3409               	retlw	9
   683  020E  3419               	retlw	25
   684  020F  3429               	retlw	41
   685  0210  3446               	retlw	70
   686  0211  3446               	retlw	70
   687  0212  3449               	retlw	73
   688  0213  3449               	retlw	73
   689  0214  3449               	retlw	73
   690  0215  3431               	retlw	49
   691  0216  3401               	retlw	1
   692  0217  3401               	retlw	1
   693  0218  347F               	retlw	127
   694  0219  3401               	retlw	1
   695  021A  3401               	retlw	1
   696  021B  343F               	retlw	63
   697  021C  3440               	retlw	64
   698  021D  3440               	retlw	64
   699  021E  3440               	retlw	64
   700  021F  343F               	retlw	63
   701  0220  341F               	retlw	31
   702  0221  3420               	retlw	32
   703  0222  3440               	retlw	64
   704  0223  3420               	retlw	32
   705  0224  341F               	retlw	31
   706  0225  343F               	retlw	63
   707  0226  3440               	retlw	64
   708  0227  3470               	retlw	112
   709  0228  3440               	retlw	64
   710  0229  343F               	retlw	63
   711  022A  3463               	retlw	99
   712  022B  3414               	retlw	20
   713  022C  3408               	retlw	8
   714  022D  3414               	retlw	20
   715  022E  3463               	retlw	99
   716  022F  3407               	retlw	7
   717  0230  3408               	retlw	8
   718  0231  3470               	retlw	112
   719  0232  3408               	retlw	8
   720  0233  3407               	retlw	7
   721  0234  3461               	retlw	97
   722  0235  3451               	retlw	81
   723  0236  3449               	retlw	73
   724  0237  3445               	retlw	69
   725  0238  3443               	retlw	67
   726  0239  3400               	retlw	0
   727  023A  347F               	retlw	127
   728  023B  3441               	retlw	65
   729  023C  3441               	retlw	65
   730  023D  3400               	retlw	0
   731  023E  3402               	retlw	2
   732  023F  3404               	retlw	4
   733  0240  3408               	retlw	8
   734  0241  3410               	retlw	16
   735  0242  3420               	retlw	32
   736  0243  3400               	retlw	0
   737  0244  3441               	retlw	65
   738  0245  3441               	retlw	65
   739  0246  347F               	retlw	127
   740  0247  3400               	retlw	0
   741  0248  3404               	retlw	4
   742  0249  3402               	retlw	2
   743  024A  3401               	retlw	1
   744  024B  3402               	retlw	2
   745  024C  3404               	retlw	4
   746  024D  3440               	retlw	64
   747  024E  3440               	retlw	64
   748  024F  3440               	retlw	64
   749  0250  3440               	retlw	64
   750  0251  3440               	retlw	64
   751  0252  3400               	retlw	0
   752  0253  3401               	retlw	1
   753  0254  3402               	retlw	2
   754  0255  3404               	retlw	4
   755  0256  3400               	retlw	0
   756  0257  3420               	retlw	32
   757  0258  3454               	retlw	84
   758  0259  3454               	retlw	84
   759  025A  3454               	retlw	84
   760  025B  3478               	retlw	120
   761  025C  347F               	retlw	127
   762  025D  3448               	retlw	72
   763  025E  3444               	retlw	68
   764  025F  3444               	retlw	68
   765  0260  3438               	retlw	56
   766  0261  3438               	retlw	56
   767  0262  3444               	retlw	68
   768  0263  3444               	retlw	68
   769  0264  3444               	retlw	68
   770  0265  3428               	retlw	40
   771  0266  3438               	retlw	56
   772  0267  3444               	retlw	68
   773  0268  3444               	retlw	68
   774  0269  3448               	retlw	72
   775  026A  347F               	retlw	127
   776  026B  3438               	retlw	56
   777  026C  3454               	retlw	84
   778  026D  3454               	retlw	84
   779  026E  3454               	retlw	84
   780  026F  3418               	retlw	24
   781  0270  3408               	retlw	8
   782  0271  347E               	retlw	126
   783  0272  3409               	retlw	9
   784  0273  3401               	retlw	1
   785  0274  3402               	retlw	2
   786  0275  340C               	retlw	12
   787  0276  3452               	retlw	82
   788  0277  3452               	retlw	82
   789  0278  3452               	retlw	82
   790  0279  343E               	retlw	62
   791  027A  347F               	retlw	127
   792  027B  3408               	retlw	8
   793  027C  3404               	retlw	4
   794  027D  3404               	retlw	4
   795  027E  3478               	retlw	120
   796  027F  3400               	retlw	0
   797  0280  3444               	retlw	68
   798  0281  347D               	retlw	125
   799  0282  3440               	retlw	64
   800  0283  3400               	retlw	0
   801  0284  3420               	retlw	32
   802  0285  3440               	retlw	64
   803  0286  3444               	retlw	68
   804  0287  343D               	retlw	61
   805  0288  3400               	retlw	0
   806  0289  347F               	retlw	127
   807  028A  3410               	retlw	16
   808  028B  3428               	retlw	40
   809  028C  3444               	retlw	68
   810  028D  3400               	retlw	0
   811  028E  3400               	retlw	0
   812  028F  3441               	retlw	65
   813  0290  347F               	retlw	127
   814  0291  3440               	retlw	64
   815  0292  3400               	retlw	0
   816  0293  347C               	retlw	124
   817  0294  3404               	retlw	4
   818  0295  3418               	retlw	24
   819  0296  3404               	retlw	4
   820  0297  3478               	retlw	120
   821  0298  347C               	retlw	124
   822  0299  3408               	retlw	8
   823  029A  3404               	retlw	4
   824  029B  3404               	retlw	4
   825  029C  3478               	retlw	120
   826  029D  3438               	retlw	56
   827  029E  3444               	retlw	68
   828  029F  3444               	retlw	68
   829  02A0  3444               	retlw	68
   830  02A1  3438               	retlw	56
   831  02A2  347C               	retlw	124
   832  02A3  3414               	retlw	20
   833  02A4  3414               	retlw	20
   834  02A5  3414               	retlw	20
   835  02A6  3408               	retlw	8
   836  02A7  3408               	retlw	8
   837  02A8  3414               	retlw	20
   838  02A9  3414               	retlw	20
   839  02AA  3418               	retlw	24
   840  02AB  347C               	retlw	124
   841  02AC  347C               	retlw	124
   842  02AD  3408               	retlw	8
   843  02AE  3404               	retlw	4
   844  02AF  3404               	retlw	4
   845  02B0  3408               	retlw	8
   846  02B1  3448               	retlw	72
   847  02B2  3454               	retlw	84
   848  02B3  3454               	retlw	84
   849  02B4  3454               	retlw	84
   850  02B5  3420               	retlw	32
   851  02B6  3404               	retlw	4
   852  02B7  343F               	retlw	63
   853  02B8  3444               	retlw	68
   854  02B9  3440               	retlw	64
   855  02BA  3420               	retlw	32
   856  02BB  343C               	retlw	60
   857  02BC  3440               	retlw	64
   858  02BD  3440               	retlw	64
   859  02BE  3420               	retlw	32
   860  02BF  347C               	retlw	124
   861  02C0  341C               	retlw	28
   862  02C1  3420               	retlw	32
   863  02C2  3440               	retlw	64
   864  02C3  3420               	retlw	32
   865  02C4  341C               	retlw	28
   866  02C5  343C               	retlw	60
   867  02C6  3440               	retlw	64
   868  02C7  3430               	retlw	48
   869  02C8  3440               	retlw	64
   870  02C9  343C               	retlw	60
   871  02CA  3444               	retlw	68
   872  02CB  3428               	retlw	40
   873  02CC  3410               	retlw	16
   874  02CD  3428               	retlw	40
   875  02CE  3444               	retlw	68
   876  02CF  340C               	retlw	12
   877  02D0  3450               	retlw	80
   878  02D1  3450               	retlw	80
   879  02D2  3450               	retlw	80
   880  02D3  343C               	retlw	60
   881  02D4  3444               	retlw	68
   882  02D5  3464               	retlw	100
   883  02D6  3454               	retlw	84
   884  02D7  344C               	retlw	76
   885  02D8  3444               	retlw	68
   886  02D9  3400               	retlw	0
   887  02DA  3408               	retlw	8
   888  02DB  3436               	retlw	54
   889  02DC  3441               	retlw	65
   890  02DD  3400               	retlw	0
   891  02DE  3400               	retlw	0
   892  02DF  3400               	retlw	0
   893  02E0  347F               	retlw	127
   894  02E1  3400               	retlw	0
   895  02E2  3400               	retlw	0
   896  02E3  3400               	retlw	0
   897  02E4  3441               	retlw	65
   898  02E5  3436               	retlw	54
   899  02E6  3408               	retlw	8
   900  02E7  3400               	retlw	0
   901  02E8  3402               	retlw	2
   902  02E9  3401               	retlw	1
   903  02EA  3402               	retlw	2
   904  02EB  3402               	retlw	2
   905  02EC  3401               	retlw	1
   906  02ED  3400               	retlw	0
   907  02EE  3400               	retlw	0
   908  02EF  3400               	retlw	0
   909  02F0  3400               	retlw	0
   910  02F1  3400               	retlw	0
   911  02F2  347E               	retlw	126
   912  02F3  3411               	retlw	17
   913  02F4  3411               	retlw	17
   914  02F5  3411               	retlw	17
   915  02F6  347E               	retlw	126
   916  02F7  347F               	retlw	127
   917  02F8  3449               	retlw	73
   918  02F9  3449               	retlw	73
   919  02FA  3449               	retlw	73
   920  02FB  3433               	retlw	51
   921  02FC  347F               	retlw	127
   922  02FD  3449               	retlw	73
   923  02FE  3449               	retlw	73
   924  02FF  3449               	retlw	73
   925  0300  3436               	retlw	54
   926  0301  347F               	retlw	127
   927  0302  3401               	retlw	1
   928  0303  3401               	retlw	1
   929  0304  3401               	retlw	1
   930  0305  3403               	retlw	3
   931  0306  34E0               	retlw	224
   932  0307  3451               	retlw	81
   933  0308  344F               	retlw	79
   934  0309  3441               	retlw	65
   935  030A  34FF               	retlw	255
   936  030B  347F               	retlw	127
   937  030C  3449               	retlw	73
   938  030D  3449               	retlw	73
   939  030E  3449               	retlw	73
   940  030F  3441               	retlw	65
   941  0310  3477               	retlw	119
   942  0311  3408               	retlw	8
   943  0312  347F               	retlw	127
   944  0313  3408               	retlw	8
   945  0314  3477               	retlw	119
   946  0315  3441               	retlw	65
   947  0316  3449               	retlw	73
   948  0317  3449               	retlw	73
   949  0318  3449               	retlw	73
   950  0319  3436               	retlw	54
   951  031A  347F               	retlw	127
   952  031B  3410               	retlw	16
   953  031C  3408               	retlw	8
   954  031D  3404               	retlw	4
   955  031E  347F               	retlw	127
   956  031F  347C               	retlw	124
   957  0320  3421               	retlw	33
   958  0321  3412               	retlw	18
   959  0322  3409               	retlw	9
   960  0323  347C               	retlw	124
   961  0324  347F               	retlw	127
   962  0325  3408               	retlw	8
   963  0326  3414               	retlw	20
   964  0327  3422               	retlw	34
   965  0328  3441               	retlw	65
   966  0329  3420               	retlw	32
   967  032A  3441               	retlw	65
   968  032B  343F               	retlw	63
   969  032C  3401               	retlw	1
   970  032D  347F               	retlw	127
   971  032E  347F               	retlw	127
   972  032F  3402               	retlw	2
   973  0330  340C               	retlw	12
   974  0331  3402               	retlw	2
   975  0332  347F               	retlw	127
   976  0333  347F               	retlw	127
   977  0334  3408               	retlw	8
   978  0335  3408               	retlw	8
   979  0336  3408               	retlw	8
   980  0337  347F               	retlw	127
   981  0338  343E               	retlw	62
   982  0339  3441               	retlw	65
   983  033A  3441               	retlw	65
   984  033B  3441               	retlw	65
   985  033C  343E               	retlw	62
   986  033D  347F               	retlw	127
   987  033E  3401               	retlw	1
   988  033F  3401               	retlw	1
   989  0340  3401               	retlw	1
   990  0341  347F               	retlw	127
   991  0342  347F               	retlw	127
   992  0343  3409               	retlw	9
   993  0344  3409               	retlw	9
   994  0345  3409               	retlw	9
   995  0346  3406               	retlw	6
   996  0347  343E               	retlw	62
   997  0348  3441               	retlw	65
   998  0349  3441               	retlw	65
   999  034A  3441               	retlw	65
  1000  034B  3422               	retlw	34
  1001  034C  3401               	retlw	1
  1002  034D  3401               	retlw	1
  1003  034E  347F               	retlw	127
  1004  034F  3401               	retlw	1
  1005  0350  3401               	retlw	1
  1006  0351  3447               	retlw	71
  1007  0352  3428               	retlw	40
  1008  0353  3410               	retlw	16
  1009  0354  3408               	retlw	8
  1010  0355  3407               	retlw	7
  1011  0356  341C               	retlw	28
  1012  0357  3422               	retlw	34
  1013  0358  347F               	retlw	127
  1014  0359  3422               	retlw	34
  1015  035A  341C               	retlw	28
  1016  035B  3463               	retlw	99
  1017  035C  3414               	retlw	20
  1018  035D  3408               	retlw	8
  1019  035E  3414               	retlw	20
  1020  035F  3463               	retlw	99
  1021  0360  347F               	retlw	127
  1022  0361  3440               	retlw	64
  1023  0362  3440               	retlw	64
  1024  0363  3440               	retlw	64
  1025  0364  34FF               	retlw	255
  1026  0365  3407               	retlw	7
  1027  0366  3408               	retlw	8
  1028  0367  3408               	retlw	8
  1029  0368  3408               	retlw	8
  1030  0369  347F               	retlw	127
  1031  036A  347F               	retlw	127
  1032  036B  3440               	retlw	64
  1033  036C  347F               	retlw	127
  1034  036D  3440               	retlw	64
  1035  036E  347F               	retlw	127
  1036  036F  347F               	retlw	127
  1037  0370  3440               	retlw	64
  1038  0371  347F               	retlw	127
  1039  0372  3440               	retlw	64
  1040  0373  34FF               	retlw	255
  1041  0374  3401               	retlw	1
  1042  0375  347F               	retlw	127
  1043  0376  3448               	retlw	72
  1044  0377  3448               	retlw	72
  1045  0378  3430               	retlw	48
  1046  0379  347F               	retlw	127
  1047  037A  3448               	retlw	72
  1048  037B  3430               	retlw	48
  1049  037C  3400               	retlw	0
  1050  037D  347F               	retlw	127
  1051  037E  3400               	retlw	0
  1052  037F  347F               	retlw	127
  1053  0380  3448               	retlw	72
  1054  0381  3448               	retlw	72
  1055  0382  3430               	retlw	48
  1056  0383  3422               	retlw	34
  1057  0384  3441               	retlw	65
  1058  0385  3449               	retlw	73
  1059  0386  3449               	retlw	73
  1060  0387  343E               	retlw	62
  1061  0388  347F               	retlw	127
  1062  0389  3408               	retlw	8
  1063  038A  343E               	retlw	62
  1064  038B  3441               	retlw	65
  1065  038C  343E               	retlw	62
  1066  038D  3446               	retlw	70
  1067  038E  3429               	retlw	41
  1068  038F  3419               	retlw	25
  1069  0390  3409               	retlw	9
  1070  0391  347F               	retlw	127
  1071  0392  3420               	retlw	32
  1072  0393  3454               	retlw	84
  1073  0394  3454               	retlw	84
  1074  0395  3454               	retlw	84
  1075  0396  3478               	retlw	120
  1076  0397  343C               	retlw	60
  1077  0398  344A               	retlw	74
  1078  0399  344A               	retlw	74
  1079  039A  3449               	retlw	73
  1080  039B  3431               	retlw	49
  1081  039C  347C               	retlw	124
  1082  039D  3454               	retlw	84
  1083  039E  3454               	retlw	84
  1084  039F  3428               	retlw	40
  1085  03A0  3400               	retlw	0
  1086  03A1  347C               	retlw	124
  1087  03A2  3404               	retlw	4
  1088  03A3  3404               	retlw	4
  1089  03A4  3404               	retlw	4
  1090  03A5  340C               	retlw	12
  1091  03A6  34E0               	retlw	224
  1092  03A7  3454               	retlw	84
  1093  03A8  344C               	retlw	76
  1094  03A9  3444               	retlw	68
  1095  03AA  34FC               	retlw	252
  1096  03AB  3438               	retlw	56
  1097  03AC  3454               	retlw	84
  1098  03AD  3454               	retlw	84
  1099  03AE  3454               	retlw	84
  1100  03AF  3418               	retlw	24
  1101  03B0  346C               	retlw	108
  1102  03B1  3410               	retlw	16
  1103  03B2  347C               	retlw	124
  1104  03B3  3410               	retlw	16
  1105  03B4  346C               	retlw	108
  1106  03B5  3444               	retlw	68
  1107  03B6  3444               	retlw	68
  1108  03B7  3454               	retlw	84
  1109  03B8  3454               	retlw	84
  1110  03B9  3428               	retlw	40
  1111  03BA  347C               	retlw	124
  1112  03BB  3420               	retlw	32
  1113  03BC  3410               	retlw	16
  1114  03BD  3408               	retlw	8
  1115  03BE  347C               	retlw	124
  1116  03BF  347C               	retlw	124
  1117  03C0  3441               	retlw	65
  1118  03C1  3422               	retlw	34
  1119  03C2  3411               	retlw	17
  1120  03C3  347C               	retlw	124
  1121  03C4  347C               	retlw	124
  1122  03C5  3410               	retlw	16
  1123  03C6  3428               	retlw	40
  1124  03C7  3444               	retlw	68
  1125  03C8  3400               	retlw	0
  1126  03C9  3420               	retlw	32
  1127  03CA  3444               	retlw	68
  1128  03CB  343C               	retlw	60
  1129  03CC  3404               	retlw	4
  1130  03CD  347C               	retlw	124
  1131  03CE  347C               	retlw	124
  1132  03CF  3408               	retlw	8
  1133  03D0  3410               	retlw	16
  1134  03D1  3408               	retlw	8
  1135  03D2  347C               	retlw	124
  1136  03D3  347C               	retlw	124
  1137  03D4  3410               	retlw	16
  1138  03D5  3410               	retlw	16
  1139  03D6  3410               	retlw	16
  1140  03D7  347C               	retlw	124
  1141  03D8  3438               	retlw	56
  1142  03D9  3444               	retlw	68
  1143  03DA  3444               	retlw	68
  1144  03DB  3444               	retlw	68
  1145  03DC  3438               	retlw	56
  1146  03DD  347C               	retlw	124
  1147  03DE  3404               	retlw	4
  1148  03DF  3404               	retlw	4
  1149  03E0  3404               	retlw	4
  1150  03E1  347C               	retlw	124
  1151  03E2  347C               	retlw	124
  1152  03E3  3414               	retlw	20
  1153  03E4  3414               	retlw	20
  1154  03E5  3414               	retlw	20
  1155  03E6  3408               	retlw	8
  1156  03E7  3438               	retlw	56
  1157  03E8  3444               	retlw	68
  1158  03E9  3444               	retlw	68
  1159  03EA  3444               	retlw	68
  1160  03EB  3428               	retlw	40
  1161  03EC  3404               	retlw	4
  1162  03ED  3404               	retlw	4
  1163  03EE  347C               	retlw	124
  1164  03EF  3404               	retlw	4
  1165  03F0  3404               	retlw	4
  1166  03F1  340C               	retlw	12
  1167  03F2  3450               	retlw	80
  1168  03F3  3450               	retlw	80
  1169  03F4  3450               	retlw	80
  1170  03F5  343C               	retlw	60
  1171  03F6  3430               	retlw	48
  1172  03F7  3448               	retlw	72
  1173  03F8  34FC               	retlw	252
  1174  03F9  3448               	retlw	72
  1175  03FA  3430               	retlw	48
  1176  03FB  3444               	retlw	68
  1177  03FC  3428               	retlw	40
  1178  03FD  3410               	retlw	16
  1179  03FE  3428               	retlw	40
  1180  03FF  3444               	retlw	68
  1181  0400  347C               	retlw	124
  1182  0401  3440               	retlw	64
  1183  0402  3440               	retlw	64
  1184  0403  3440               	retlw	64
  1185  0404  34FC               	retlw	252
  1186  0405  340C               	retlw	12
  1187  0406  3410               	retlw	16
  1188  0407  3410               	retlw	16
  1189  0408  3410               	retlw	16
  1190  0409  347C               	retlw	124
  1191  040A  347C               	retlw	124
  1192  040B  3440               	retlw	64
  1193  040C  347C               	retlw	124
  1194  040D  3440               	retlw	64
  1195  040E  347C               	retlw	124
  1196  040F  347C               	retlw	124
  1197  0410  3440               	retlw	64
  1198  0411  347C               	retlw	124
  1199  0412  3440               	retlw	64
  1200  0413  34FC               	retlw	252
  1201  0414  3404               	retlw	4
  1202  0415  347C               	retlw	124
  1203  0416  3450               	retlw	80
  1204  0417  3450               	retlw	80
  1205  0418  3420               	retlw	32
  1206  0419  347C               	retlw	124
  1207  041A  3450               	retlw	80
  1208  041B  3450               	retlw	80
  1209  041C  3420               	retlw	32
  1210  041D  347C               	retlw	124
  1211  041E  347C               	retlw	124
  1212  041F  3450               	retlw	80
  1213  0420  3450               	retlw	80
  1214  0421  3420               	retlw	32
  1215  0422  3400               	retlw	0
  1216  0423  3428               	retlw	40
  1217  0424  3444               	retlw	68
  1218  0425  3454               	retlw	84
  1219  0426  3454               	retlw	84
  1220  0427  3438               	retlw	56
  1221  0428  347C               	retlw	124
  1222  0429  3410               	retlw	16
  1223  042A  3438               	retlw	56
  1224  042B  3444               	retlw	68
  1225  042C  3438               	retlw	56
  1226  042D  3408               	retlw	8
  1227  042E  3454               	retlw	84
  1228  042F  3434               	retlw	52
  1229  0430  3414               	retlw	20
  1230  0431  347C               	retlw	124
  1231  0432                     __end_of_symbol:	
  1232  0432                     _dpowers:	
  1233  0432  3401               	retlw	1
  1234  0433  3400               	retlw	0
  1235  0434  340A               	retlw	10
  1236  0435  3400               	retlw	0
  1237  0436  3464               	retlw	100
  1238  0437  3400               	retlw	0
  1239  0438  34E8               	retlw	232
  1240  0439  3403               	retlw	3
  1241  043A  3410               	retlw	16
  1242  043B  3427               	retlw	39
  1243  043C                     __end_of_dpowers:	
  1244  043C                     _data:	
  1245  043C  3447               	retlw	71
  1246  043D  3465               	retlw	101
  1247  043E  346E               	retlw	110
  1248  043F  3465               	retlw	101
  1249  0440  3461               	retlw	97
  1250  0441  3472               	retlw	114
  1251  0442  3461               	retlw	97
  1252  0443  3474               	retlw	116
  1253  0444  3465               	retlw	101
  1254  0445  3420               	retlw	32
  1255  0446  344F               	retlw	79
  1256  0447  344E               	retlw	78
  1257  0448  3420               	retlw	32
  1258  0449  3400               	retlw	0
  1259  044A  3400               	retlw	0
  1260  044B  3400               	retlw	0
  1261  044C  3400               	retlw	0
  1262  044D  3400               	retlw	0
  1263  044E  3400               	retlw	0
  1264  044F  3400               	retlw	0
  1265  0450  3400               	retlw	0
  1266  0451  3400               	retlw	0
  1267  0452  3400               	retlw	0
  1268  0453  3400               	retlw	0
  1269  0454  3400               	retlw	0
  1270  0455  3400               	retlw	0
  1271  0456  3400               	retlw	0
  1272  0457  3400               	retlw	0
  1273  0458  3400               	retlw	0
  1274  0459  3400               	retlw	0
  1275  045A  3400               	retlw	0
  1276  045B  3400               	retlw	0
  1277  045C  3400               	retlw	0
  1278  045D  3400               	retlw	0
  1279  045E  3400               	retlw	0
  1280  045F  3400               	retlw	0
  1281  0460  3400               	retlw	0
  1282  0461  3400               	retlw	0
  1283  0462  3400               	retlw	0
  1284  0463  3400               	retlw	0
  1285  0464  3447               	retlw	71
  1286  0465  3465               	retlw	101
  1287  0466  346E               	retlw	110
  1288  0467  3465               	retlw	101
  1289  0468  3461               	retlw	97
  1290  0469  3472               	retlw	114
  1291  046A  3461               	retlw	97
  1292  046B  3474               	retlw	116
  1293  046C  3465               	retlw	101
  1294  046D  3420               	retlw	32
  1295  046E  344F               	retlw	79
  1296  046F  3446               	retlw	70
  1297  0470  3446               	retlw	70
  1298  0471  3400               	retlw	0
  1299  0472  3400               	retlw	0
  1300  0473  3400               	retlw	0
  1301  0474  3400               	retlw	0
  1302  0475  3400               	retlw	0
  1303  0476  3400               	retlw	0
  1304  0477  3400               	retlw	0
  1305  0478  3400               	retlw	0
  1306  0479  3400               	retlw	0
  1307  047A  3400               	retlw	0
  1308  047B  3400               	retlw	0
  1309  047C  3400               	retlw	0
  1310  047D  3400               	retlw	0
  1311  047E  3400               	retlw	0
  1312  047F  3400               	retlw	0
  1313  0480  3400               	retlw	0
  1314  0481  3400               	retlw	0
  1315  0482  3400               	retlw	0
  1316  0483  3400               	retlw	0
  1317  0484  3400               	retlw	0
  1318  0485  3400               	retlw	0
  1319  0486  3400               	retlw	0
  1320  0487  3400               	retlw	0
  1321  0488  3400               	retlw	0
  1322  0489  3400               	retlw	0
  1323  048A  3400               	retlw	0
  1324  048B  3400               	retlw	0
  1325  048C  3446               	retlw	70
  1326  048D  3472               	retlw	114
  1327  048E  3465               	retlw	101
  1328  048F  3471               	retlw	113
  1329  0490  343A               	retlw	58
  1330  0491  3420               	retlw	32
  1331  0492  342D               	retlw	45
  1332  0493  342D               	retlw	45
  1333  0494  342D               	retlw	45
  1334  0495  342D               	retlw	45
  1335  0496  3420               	retlw	32
  1336  0497  3448               	retlw	72
  1337  0498  347A               	retlw	122
  1338  0499  3400               	retlw	0
  1339  049A  3400               	retlw	0
  1340  049B  3400               	retlw	0
  1341  049C  3400               	retlw	0
  1342  049D  3400               	retlw	0
  1343  049E  3400               	retlw	0
  1344  049F  3400               	retlw	0
  1345  04A0  3400               	retlw	0
  1346  04A1  3400               	retlw	0
  1347  04A2  3400               	retlw	0
  1348  04A3  3400               	retlw	0
  1349  04A4  3400               	retlw	0
  1350  04A5  3400               	retlw	0
  1351  04A6  3400               	retlw	0
  1352  04A7  3400               	retlw	0
  1353  04A8  3400               	retlw	0
  1354  04A9  3400               	retlw	0
  1355  04AA  3400               	retlw	0
  1356  04AB  3400               	retlw	0
  1357  04AC  3400               	retlw	0
  1358  04AD  3400               	retlw	0
  1359  04AE  3400               	retlw	0
  1360  04AF  3400               	retlw	0
  1361  04B0  3400               	retlw	0
  1362  04B1  3400               	retlw	0
  1363  04B2  3400               	retlw	0
  1364  04B3  3400               	retlw	0
  1365  04B4                     __end_of_data:	
  1366  04B4                     STR_4:	
  1367  04B4  3446               	retlw	70	;'F'
  1368  04B5  3472               	retlw	114	;'r'
  1369  04B6  3465               	retlw	101	;'e'
  1370  04B7  3471               	retlw	113	;'q'
  1371  04B8  343A               	retlw	58	;':'
  1372  04B9  3420               	retlw	32	;' '
  1373  04BA  3425               	retlw	37	;'%'
  1374  04BB  3464               	retlw	100	;'d'
  1375  04BC  3425               	retlw	37	;'%'
  1376  04BD  3464               	retlw	100	;'d'
  1377  04BE  3425               	retlw	37	;'%'
  1378  04BF  3464               	retlw	100	;'d'
  1379  04C0  3425               	retlw	37	;'%'
  1380  04C1  3464               	retlw	100	;'d'
  1381  04C2  3420               	retlw	32	;' '
  1382  04C3  3448               	retlw	72	;'H'
  1383  04C4  347A               	retlw	122	;'z'
  1384  04C5  3420               	retlw	32	;' '
  1385  04C6  3400               	retlw	0
  1386  04C7                     STR_1:	
  1387  04C7  3445               	retlw	69	;'E'
  1388  04C8  344E               	retlw	78	;'N'
  1389  04C9  3441               	retlw	65	;'A'
  1390  04CA  3442               	retlw	66	;'B'
  1391  04CB  344C               	retlw	76	;'L'
  1392  04CC  3445               	retlw	69	;'E'
  1393  04CD  3420               	retlw	32	;' '
  1394  04CE  344F               	retlw	79	;'O'
  1395  04CF  344E               	retlw	78	;'N'
  1396  04D0  3420               	retlw	32	;' '
  1397  04D1  3400               	retlw	0
  1398  04D2                     STR_5:	
  1399  04D2  3445               	retlw	69	;'E'
  1400  04D3  344E               	retlw	78	;'N'
  1401  04D4  3441               	retlw	65	;'A'
  1402  04D5  3442               	retlw	66	;'B'
  1403  04D6  344C               	retlw	76	;'L'
  1404  04D7  3445               	retlw	69	;'E'
  1405  04D8  3420               	retlw	32	;' '
  1406  04D9  344F               	retlw	79	;'O'
  1407  04DA  3446               	retlw	70	;'F'
  1408  04DB  3446               	retlw	70	;'F'
  1409  04DC  3400               	retlw	0
  1410  04DD                     STR_2:	
  1411  04DD  3444               	retlw	68	;'D'
  1412  04DE  3449               	retlw	73	;'I'
  1413  04DF  3452               	retlw	82	;'R'
  1414  04E0  3420               	retlw	32	;' '
  1415  04E1  344C               	retlw	76	;'L'
  1416  04E2  3445               	retlw	69	;'E'
  1417  04E3  3446               	retlw	70	;'F'
  1418  04E4  3454               	retlw	84	;'T'
  1419  04E5  3420               	retlw	32	;' '
  1420  04E6  3400               	retlw	0
  1421  04E7                     STR_3:	
  1422  04E7  3444               	retlw	68	;'D'
  1423  04E8  3449               	retlw	73	;'I'
  1424  04E9  3452               	retlw	82	;'R'
  1425  04EA  3420               	retlw	32	;' '
  1426  04EB  3452               	retlw	82	;'R'
  1427  04EC  3449               	retlw	73	;'I'
  1428  04ED  3447               	retlw	71	;'G'
  1429  04EE  3448               	retlw	72	;'H'
  1430  04EF  3454               	retlw	84	;'T'
  1431  04F0  3400               	retlw	0
  1432                           
  1433                           	psect	nvCOMMON
  1434  0077                     __pnvCOMMON:	
  1435  0077                     _Vref:	
  1436  0077                     	ds	3
  1437  000E                     _TMR1	set	14
  1438  0008                     _PORTDbits	set	8
  1439  0008                     _PORTD	set	8
  1440  001E                     _ADRESH	set	30
  1441  001F                     _ADCON0	set	31
  1442  0015                     _CCPR1L	set	21
  1443  0005                     _PORTAbits	set	5
  1444  0009                     _PORTEbits	set	9
  1445  0006                     _PORTBbits	set	6
  1446  0007                     _PORTCbits	set	7
  1447  00FA                     _GO_nDONE	set	250
  1448  00F8                     _ADON	set	248
  1449  00FF                     _ADCS1	set	255
  1450  00FE                     _ADCS0	set	254
  1451  0060                     _TMR1IF	set	96
  1452  0080                     _TMR1ON	set	128
  1453  005E                     _PEIE	set	94
  1454  005F                     _GIE	set	95
  1455  0081                     _TMR1CS	set	129
  1456  0083                     _T1OSCEN	set	131
  1457  0085                     _T1CKPS1	set	133
  1458  0084                     _T1CKPS0	set	132
  1459  00BC                     _CCP1Y	set	188
  1460  00BD                     _CCP1X	set	189
  1461  0092                     _TMR2ON	set	146
  1462  0091                     _T2CKPS1	set	145
  1463  0090                     _T2CKPS0	set	144
  1464  00BB                     _CCP1M3	set	187
  1465  00BA                     _CCP1M2	set	186
  1466  002C                     _RA4	set	44
  1467  002D                     _RA5	set	45
  1468  003D                     _RC5	set	61
  1469  0086                     _TRISB	set	134
  1470  0086                     _TRISBbits	set	134
  1471  0088                     _TRISD	set	136
  1472  009E                     _ADRESL	set	158
  1473  0092                     _PR2	set	146
  1474  04FF                     _ADFM	set	1279
  1475  04FB                     _PCFG3	set	1275
  1476  04FA                     _PCFG2	set	1274
  1477  04F9                     _PCFG1	set	1273
  1478  04F8                     _PCFG0	set	1272
  1479  0460                     _TMR1IE	set	1120
  1480  043A                     _TRISC2	set	1082
  1481  042D                     _TRISA5	set	1069
  1482  042C                     _TRISA4	set	1068
  1483  044A                     _TRISE2	set	1098
  1484  0449                     _TRISE1	set	1097
  1485  0448                     _TRISE0	set	1096
  1486  043C                     _TRISC4	set	1084
  1487  043B                     _TRISC3	set	1083
  1488  0437                     _TRISB7	set	1079
  1489  043E                     _TRISC6	set	1086
  1490  043D                     _TRISC5	set	1085
  1491                           
  1492                           	psect	cinit
  1493  0015                     start_initialization:	
  1494                           ; #config settings
  1495                           
  1496  0015                     __initialization:	
  1497                           
  1498                           ; Initialize objects allocated to BANK0
  1499  0015  1383               	bcf	3,7	;select IRP bank0
  1500  0016  3067               	movlw	low (__pdataBANK0+7)
  1501  0017  00FD               	movwf	btemp+-1
  1502  0018  3007               	movlw	high __pidataBANK0
  1503  0019  00FE               	movwf	btemp
  1504  001A  30F9               	movlw	low __pidataBANK0
  1505  001B  00FF               	movwf	btemp+1
  1506  001C  3060               	movlw	low __pdataBANK0
  1507  001D  0084               	movwf	4
  1508  001E  120A  158A  2225  120A  118A  	fcall	init_ram0
  1509                           
  1510                           ; Clear objects allocated to BANK1
  1511  0023  30A0               	movlw	low __pbssBANK1
  1512  0024  0084               	movwf	4
  1513  0025  30C8               	movlw	low (__pbssBANK1+40)
  1514  0026  120A  158A  220F   	fcall	clear_ram0
  1515                           
  1516                           ; Clear objects allocated to BANK0
  1517  0029  01E7               	clrf	__pbssBANK0& (0+127)
  1518  002A                     end_of_initialization:	
  1519                           ;End of C runtime variable initialization code
  1520                           
  1521  002A                     __end_of__initialization:	
  1522  002A  0183               	clrf	3
  1523  002B  120A  118A  2CF1   	ljmp	_main	;jump to C main() function
  1524                           
  1525                           	psect	bssBANK0
  1526  0067                     __pbssBANK0:	
  1527  0067                     _flag_Work:	
  1528  0067                     	ds	1
  1529                           
  1530                           	psect	dataBANK0
  1531  0060                     __pdataBANK0:	
  1532  0060                     _FreqTim:	
  1533  0060                     	ds	2
  1534  0062                     _flag_count:	
  1535  0062                     	ds	1
  1536  0063                     _Freq:	
  1537  0063                     	ds	4
  1538                           
  1539                           	psect	bssBANK1
  1540  00A0                     __pbssBANK1:	
  1541  00A0                     _dataFreq:	
  1542  00A0                     	ds	40
  1543                           
  1544                           	psect	inittext
  1545  0A21                     init_fetch0:	
  1546                           ;	Called with low address in FSR and high address in W
  1547                           
  1548  0A21  087E               	movf	126,w
  1549  0A22  008A               	movwf	10
  1550  0A23  087F               	movf	127,w
  1551  0A24  0082               	movwf	2
  1552  0A25                     init_ram0:	
  1553                           ;Called with:
  1554                           ;	high address of idata address in btemp 
  1555                           ;	low address of idata address in btemp+1 
  1556                           ;	low address of data in FSR
  1557                           ;	high address + 1 of data in btemp-1
  1558                           
  1559  0A25  2221  120A  158A   	fcall	init_fetch0
  1560  0A28  0080               	movwf	0
  1561  0A29  0A84               	incf	4,f
  1562  0A2A  0804               	movf	4,w
  1563  0A2B  067D               	xorwf	125,w
  1564  0A2C  1903               	btfsc	3,2
  1565  0A2D  3400               	retlw	0
  1566  0A2E  0AFF               	incf	127,f
  1567  0A2F  1903               	btfsc	3,2
  1568  0A30  0AFE               	incf	126,f
  1569  0A31  2A25               	goto	init_ram0
  1570                           
  1571                           	psect	clrtext
  1572  0A0F                     clear_ram0:	
  1573                           ;	Called with FSR containing the base address, and
  1574                           ;	W with the last address+1
  1575                           
  1576  0A0F  0064               	clrwdt	;clear the watchdog before getting into this loop
  1577  0A10                     clrloop0:	
  1578  0A10  0180               	clrf	0	;clear RAM location pointed to by FSR
  1579  0A11  0A84               	incf	4,f	;increment pointer
  1580  0A12  0604               	xorwf	4,w	;XOR with final address
  1581  0A13  1903               	btfsc	3,2	;have we reached the end yet?
  1582  0A14  3400               	retlw	0	;all done for this memory range, return
  1583  0A15  0604               	xorwf	4,w	;XOR again to restore value
  1584  0A16  2A10               	goto	clrloop0	;do the next byte
  1585                           
  1586                           	psect	cstackBANK1
  1587  00C8                     __pcstackBANK1:	
  1588  00C8                     _main$953:	
  1589                           
  1590                           ; 2 bytes @ 0x0
  1591  00C8                     	ds	2
  1592  00CA                     _main$954:	
  1593                           
  1594                           ; 2 bytes @ 0x2
  1595  00CA                     	ds	2
  1596  00CC                     _main$955:	
  1597                           
  1598                           ; 2 bytes @ 0x4
  1599  00CC                     	ds	2
  1600  00CE                     _main$956:	
  1601                           
  1602                           ; 2 bytes @ 0x6
  1603  00CE                     	ds	2
  1604  00D0                     main@Frequnsy:	
  1605                           
  1606                           ; 2 bytes @ 0x8
  1607  00D0                     	ds	2
  1608                           
  1609                           	psect	cstackCOMMON
  1610  0070                     __pcstackCOMMON:	
  1611  0070                     ?_Timer1_init:	
  1612  0070                     ?_ADC_Init:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615  0070                     ?_lcd_init:	
  1616                           ; 1 bytes @ 0x0
  1617                           
  1618  0070                     ?_Start_Timer:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621  0070                     ?_Stop_Timer:	
  1622                           ; 1 bytes @ 0x0
  1623                           
  1624  0070                     ?_Strob:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627  0070                     ??_Strob:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630  0070                     ?_Port_Init:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633  0070                     ?_ENABLE_SET:	
  1634                           ; 1 bytes @ 0x0
  1635                           
  1636  0070                     ?_ENABLE_RESET:	
  1637                           ; 1 bytes @ 0x0
  1638                           
  1639  0070                     ?_DIRECTION_SET:	
  1640                           ; 1 bytes @ 0x0
  1641                           
  1642  0070                     ?_check_button:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645  0070                     ?_check_buttonSelect:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648  0070                     ?_main:	
  1649                           ; 1 bytes @ 0x0
  1650                           
  1651  0070                     ?_CallBack:	
  1652                           ; 1 bytes @ 0x0
  1653                           
  1654  0070                     ??_CallBack:	
  1655                           ; 1 bytes @ 0x0
  1656                           
  1657  0070                     ?_Send_Data:	
  1658                           ; 1 bytes @ 0x0
  1659                           
  1660  0070                     ?_Send_command:	
  1661                           ; 1 bytes @ 0x0
  1662                           
  1663  0070                     ?_lcd_Print_char:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666                           
  1667                           ; 1 bytes @ 0x0
  1668  0070                     	ds	4
  1669  0074                     ??_Timer1_init:	
  1670  0074                     ??_Start_Timer:	
  1671                           ; 1 bytes @ 0x4
  1672                           
  1673  0074                     ??_Stop_Timer:	
  1674                           ; 1 bytes @ 0x4
  1675                           
  1676  0074                     ??___ftpack:	
  1677                           ; 1 bytes @ 0x4
  1678                           
  1679  0074                     ??_Port_Init:	
  1680                           ; 1 bytes @ 0x4
  1681                           
  1682  0074                     ??_ENABLE_SET:	
  1683                           ; 1 bytes @ 0x4
  1684                           
  1685  0074                     ??_ENABLE_RESET:	
  1686                           ; 1 bytes @ 0x4
  1687                           
  1688  0074                     ??_DIRECTION_SET:	
  1689                           ; 1 bytes @ 0x4
  1690                           
  1691  0074                     ??_check_button:	
  1692                           ; 1 bytes @ 0x4
  1693                           
  1694  0074                     ??_check_buttonSelect:	
  1695                           ; 1 bytes @ 0x4
  1696                           
  1697  0074                     ??_Send_Data:	
  1698                           ; 1 bytes @ 0x4
  1699                           
  1700  0074                     ??___lwmod:	
  1701                           ; 1 bytes @ 0x4
  1702                           
  1703  0074                     ?_ADC_Read:	
  1704                           ; 1 bytes @ 0x4
  1705                           
  1706  0074                     DIRECTION_SET@dir:	
  1707                           ; 2 bytes @ 0x4
  1708                           
  1709  0074                     Send_Data@data:	
  1710                           ; 1 bytes @ 0x4
  1711                           
  1712  0074                     check_button@butcount:	
  1713                           ; 1 bytes @ 0x4
  1714                           
  1715                           
  1716                           ; 2 bytes @ 0x4
  1717  0074                     	ds	1
  1718  0075                     ??_Send_command:	
  1719  0075                     ??_lcd_Print_char:	
  1720                           ; 1 bytes @ 0x5
  1721                           
  1722  0075                     ___lwmod@counter:	
  1723                           ; 1 bytes @ 0x5
  1724                           
  1725                           
  1726                           ; 1 bytes @ 0x5
  1727  0075                     	ds	1
  1728  0076                     ??___lwdiv:	
  1729  0076                     check_button@result:	
  1730                           ; 1 bytes @ 0x6
  1731                           
  1732  0076                     ADC_Read@channel:	
  1733                           ; 1 bytes @ 0x6
  1734                           
  1735  0076                     Send_command@com:	
  1736                           ; 1 bytes @ 0x6
  1737                           
  1738  0076                     lcd_Print_char@data:	
  1739                           ; 1 bytes @ 0x6
  1740                           
  1741                           
  1742                           ; 1 bytes @ 0x6
  1743  0076                     	ds	1
  1744  0077                     ??_ADC_Init:	
  1745  0077                     ??_ReadValue:	
  1746                           ; 1 bytes @ 0x7
  1747                           
  1748  0077                     ??_Set_Freq_Value:	
  1749                           ; 1 bytes @ 0x7
  1750                           
  1751  0077                     ??_lcd_printString:	
  1752                           ; 1 bytes @ 0x7
  1753                           
  1754  0077                     ??___ftneg:	
  1755                           ; 1 bytes @ 0x7
  1756                           
  1757                           
  1758                           	psect	cstackBANK0
  1759  0020                     __pcstackBANK0:	
  1760                           ; 1 bytes @ 0x7
  1761                           
  1762  0020                     ??_lcd_init:	
  1763  0020                     ??_ADC_Read:	
  1764                           ; 1 bytes @ 0x0
  1765                           
  1766  0020                     ?_lcd_printString:	
  1767                           ; 1 bytes @ 0x0
  1768                           
  1769  0020                     ?_lcd_gotoxy:	
  1770                           ; 1 bytes @ 0x0
  1771                           
  1772  0020                     ?___lwmod:	
  1773                           ; 1 bytes @ 0x0
  1774                           
  1775  0020                     ?___ftpack:	
  1776                           ; 2 bytes @ 0x0
  1777                           
  1778  0020                     check_buttonSelect@flag:	
  1779                           ; 3 bytes @ 0x0
  1780                           
  1781  0020                     lcd_gotoxy@y:	
  1782                           ; 1 bytes @ 0x0
  1783                           
  1784  0020                     lcd_printString@str:	
  1785                           ; 1 bytes @ 0x0
  1786                           
  1787  0020                     ___lwmod@divisor:	
  1788                           ; 2 bytes @ 0x0
  1789                           
  1790  0020                     ___ftpack@arg:	
  1791                           ; 2 bytes @ 0x0
  1792                           
  1793                           
  1794                           ; 3 bytes @ 0x0
  1795  0020                     	ds	1
  1796  0021                     ??_lcd_gotoxy:	
  1797  0021                     check_buttonSelect@butcount:	
  1798                           ; 1 bytes @ 0x1
  1799                           
  1800                           
  1801                           ; 2 bytes @ 0x1
  1802  0021                     	ds	1
  1803  0022                     lcd_init@lcd:	
  1804  0022                     lcd_gotoxy@x:	
  1805                           ; 1 bytes @ 0x2
  1806                           
  1807  0022                     ___lwmod@dividend:	
  1808                           ; 1 bytes @ 0x2
  1809                           
  1810                           
  1811                           ; 2 bytes @ 0x2
  1812  0022                     	ds	1
  1813  0023                     check_buttonSelect@result:	
  1814  0023                     lcd_gotoxy@temp:	
  1815                           ; 1 bytes @ 0x3
  1816                           
  1817  0023                     ___ftpack@exp:	
  1818                           ; 1 bytes @ 0x3
  1819                           
  1820                           
  1821                           ; 1 bytes @ 0x3
  1822  0023                     	ds	1
  1823  0024                     ?_lcd_printStringXY:	
  1824  0024                     ?___lwdiv:	
  1825                           ; 1 bytes @ 0x4
  1826                           
  1827  0024                     ___ftpack@sign:	
  1828                           ; 2 bytes @ 0x4
  1829                           
  1830  0024                     lcd_printStringXY@str:	
  1831                           ; 1 bytes @ 0x4
  1832                           
  1833  0024                     ___lwdiv@divisor:	
  1834                           ; 2 bytes @ 0x4
  1835                           
  1836                           
  1837                           ; 2 bytes @ 0x4
  1838  0024                     	ds	1
  1839  0025                     ?___lbtoft:	
  1840  0025                     ?___lwtoft:	
  1841                           ; 3 bytes @ 0x5
  1842                           
  1843  0025                     ___lwtoft@c:	
  1844                           ; 3 bytes @ 0x5
  1845                           
  1846                           
  1847                           ; 2 bytes @ 0x5
  1848  0025                     	ds	1
  1849  0026                     lcd_printStringXY@x:	
  1850  0026                     ___lwdiv@dividend:	
  1851                           ; 1 bytes @ 0x6
  1852                           
  1853                           
  1854                           ; 2 bytes @ 0x6
  1855  0026                     	ds	1
  1856  0027                     lcd_printStringXY@y:	
  1857                           
  1858                           ; 1 bytes @ 0x7
  1859  0027                     	ds	1
  1860  0028                     ??_lcd_printStringXY:	
  1861  0028                     ??___lbtoft:	
  1862                           ; 1 bytes @ 0x8
  1863                           
  1864  0028                     ??___lwtoft:	
  1865                           ; 1 bytes @ 0x8
  1866                           
  1867  0028                     ___lwdiv@counter:	
  1868                           ; 1 bytes @ 0x8
  1869                           
  1870                           
  1871                           ; 1 bytes @ 0x8
  1872  0028                     	ds	1
  1873  0029                     ?___ftdiv:	
  1874  0029                     ___lwdiv@quotient:	
  1875                           ; 3 bytes @ 0x9
  1876                           
  1877  0029                     ___ftdiv@f2:	
  1878                           ; 2 bytes @ 0x9
  1879                           
  1880                           
  1881                           ; 3 bytes @ 0x9
  1882  0029                     	ds	2
  1883  002B                     ?_sprintf:	
  1884  002B                     sprintf@f:	
  1885                           ; 2 bytes @ 0xB
  1886                           
  1887                           
  1888                           ; 2 bytes @ 0xB
  1889  002B                     	ds	1
  1890  002C                     ___lbtoft@c:	
  1891  002C                     ___ftdiv@f1:	
  1892                           ; 1 bytes @ 0xC
  1893                           
  1894                           
  1895                           ; 3 bytes @ 0xC
  1896  002C                     	ds	1
  1897  002D                     ADC_Init@Uref:	
  1898                           
  1899                           ; 1 bytes @ 0xD
  1900  002D                     	ds	2
  1901  002F                     ??___ftdiv:	
  1902                           
  1903                           ; 1 bytes @ 0xF
  1904  002F                     	ds	4
  1905  0033                     ___ftdiv@cntr:	
  1906                           
  1907                           ; 1 bytes @ 0x13
  1908  0033                     	ds	1
  1909  0034                     ___ftdiv@f3:	
  1910                           
  1911                           ; 3 bytes @ 0x14
  1912  0034                     	ds	1
  1913  0035                     ??_sprintf:	
  1914                           
  1915                           ; 1 bytes @ 0x15
  1916  0035                     	ds	2
  1917  0037                     ___ftdiv@exp:	
  1918                           
  1919                           ; 1 bytes @ 0x17
  1920  0037                     	ds	1
  1921  0038                     sprintf@ap:	
  1922  0038                     ___ftdiv@sign:	
  1923                           ; 1 bytes @ 0x18
  1924                           
  1925                           
  1926                           ; 1 bytes @ 0x18
  1927  0038                     	ds	1
  1928  0039                     ?___ftneg:	
  1929  0039                     sprintf@flag:	
  1930                           ; 3 bytes @ 0x19
  1931                           
  1932  0039                     ___ftneg@f1:	
  1933                           ; 1 bytes @ 0x19
  1934                           
  1935                           
  1936                           ; 3 bytes @ 0x19
  1937  0039                     	ds	1
  1938  003A                     sprintf@prec:	
  1939                           
  1940                           ; 1 bytes @ 0x1A
  1941  003A                     	ds	1
  1942  003B                     sprintf@val:	
  1943                           
  1944                           ; 2 bytes @ 0x1B
  1945  003B                     	ds	1
  1946  003C                     ?___ftadd:	
  1947  003C                     ___ftadd@f1:	
  1948                           ; 3 bytes @ 0x1C
  1949                           
  1950                           
  1951                           ; 3 bytes @ 0x1C
  1952  003C                     	ds	1
  1953  003D                     sprintf@sp:	
  1954                           
  1955                           ; 1 bytes @ 0x1D
  1956  003D                     	ds	1
  1957  003E                     sprintf@c:	
  1958                           
  1959                           ; 1 bytes @ 0x1E
  1960  003E                     	ds	1
  1961  003F                     ___ftadd@f2:	
  1962                           
  1963                           ; 3 bytes @ 0x1F
  1964  003F                     	ds	3
  1965  0042                     ??___ftadd:	
  1966                           
  1967                           ; 1 bytes @ 0x22
  1968  0042                     	ds	4
  1969  0046                     ___ftadd@sign:	
  1970                           
  1971                           ; 1 bytes @ 0x26
  1972  0046                     	ds	1
  1973  0047                     ___ftadd@exp2:	
  1974                           
  1975                           ; 1 bytes @ 0x27
  1976  0047                     	ds	1
  1977  0048                     ___ftadd@exp1:	
  1978                           
  1979                           ; 1 bytes @ 0x28
  1980  0048                     	ds	1
  1981  0049                     ?___fttol:	
  1982  0049                     ___fttol@f1:	
  1983                           ; 4 bytes @ 0x29
  1984                           
  1985                           
  1986                           ; 3 bytes @ 0x29
  1987  0049                     	ds	4
  1988  004D                     ??___fttol:	
  1989                           
  1990                           ; 1 bytes @ 0x2D
  1991  004D                     	ds	4
  1992  0051                     ___fttol@sign1:	
  1993                           
  1994                           ; 1 bytes @ 0x31
  1995  0051                     	ds	1
  1996  0052                     ___fttol@lval:	
  1997                           
  1998                           ; 4 bytes @ 0x32
  1999  0052                     	ds	4
  2000  0056                     ___fttol@exp1:	
  2001                           
  2002                           ; 1 bytes @ 0x36
  2003  0056                     	ds	1
  2004  0057                     ?_Set_Freq_Value:	
  2005  0057                     Set_Freq_Value@value:	
  2006                           ; 1 bytes @ 0x37
  2007                           
  2008                           
  2009                           ; 2 bytes @ 0x37
  2010  0057                     	ds	2
  2011  0059                     Set_Freq_Value@val:	
  2012                           
  2013                           ; 3 bytes @ 0x39
  2014  0059                     	ds	3
  2015  005C                     ?_ReadValue:	
  2016                           
  2017                           ; 2 bytes @ 0x3C
  2018  005C                     	ds	2
  2019  005E                     ??_main:	
  2020                           
  2021                           ; 1 bytes @ 0x3E
  2022  005E                     	ds	2
  2023                           
  2024                           	psect	maintext
  2025  04F1                     __pmaintext:	
  2026 ;;
  2027 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2028 ;;
  2029 ;; *************** function _main *****************
  2030 ;; Defined at:
  2031 ;;		line 165 in file "main.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;		None
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;  testbuf        40    0        unsigned char [40]
  2036 ;;  Frequnsy        2    8[BANK1 ] unsigned int 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : B00/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2046 ;;      Params:         0       0       0       0       0
  2047 ;;      Locals:         0       0      10       0       0
  2048 ;;      Temps:          0       2       0       0       0
  2049 ;;      Totals:         0       2      10       0       0
  2050 ;;Total ram usage:       12 bytes
  2051 ;; Hardware stack levels required when called:    6
  2052 ;; This function calls:
  2053 ;;		_ADC_Init
  2054 ;;		_DIRECTION_SET
  2055 ;;		_ENABLE_RESET
  2056 ;;		_ENABLE_SET
  2057 ;;		_Port_Init
  2058 ;;		_ReadValue
  2059 ;;		_Start_Timer
  2060 ;;		_Stop_Timer
  2061 ;;		_Timer1_init
  2062 ;;		___lwdiv
  2063 ;;		___lwmod
  2064 ;;		_check_button
  2065 ;;		_check_buttonSelect
  2066 ;;		_lcd_init
  2067 ;;		_lcd_printStringXY
  2068 ;;		_sprintf
  2069 ;; This function is called by:
  2070 ;;		Startup code after reset
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           
  2075                           ;psect for function _main
  2076  04F1                     _main:	
  2077                           
  2078                           ;main.c: 167: uint16_t Frequnsy;
  2079                           ;main.c: 169: Port_Init();
  2080                           
  2081                           ;incstack = 0
  2082                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2083  04F1  120A  158A  2387  120A  118A  	fcall	_Port_Init
  2084                           
  2085                           ;main.c: 170: Timer1_init();
  2086  04F6  120A  158A  2232  120A  118A  	fcall	_Timer1_init
  2087                           
  2088                           ;main.c: 171: ADC_Init(5);
  2089  04FB  3005               	movlw	5
  2090  04FC  120A  158A  230C  120A  118A  	fcall	_ADC_Init
  2091                           
  2092                           ;main.c: 172: lcd_init(0);
  2093  0501  3000               	movlw	0
  2094  0502  120A  158A  2677  120A  118A  	fcall	_lcd_init
  2095  0507                     l3057:	
  2096                           ;main.c: 173: char testbuf[40];
  2097                           ;main.c: 175: while(1)
  2098                           
  2099                           
  2100                           ;main.c: 176: {
  2101                           ;main.c: 180: if(check_button()==1)
  2102  0507  120A  158A  22BC  120A  118A  	fcall	_check_button
  2103  050C  3A01               	xorlw	1
  2104  050D  1D03               	skipz
  2105  050E  2D15               	goto	l3061
  2106                           
  2107                           ;main.c: 181: {
  2108                           ;main.c: 182: flag_count++;
  2109  050F  3001               	movlw	1
  2110  0510  1283               	bcf	3,5	;RP0=0, select bank0
  2111  0511  1303               	bcf	3,6	;RP1=0, select bank0
  2112  0512  00DE               	movwf	??_main
  2113  0513  085E               	movf	??_main,w
  2114  0514  07E2               	addwf	_flag_count,f
  2115  0515                     l3061:	
  2116                           
  2117                           ;main.c: 183: }
  2118                           ;main.c: 185: if(flag_count%2==0)
  2119  0515  1283               	bcf	3,5	;RP0=0, select bank0
  2120  0516  1303               	bcf	3,6	;RP1=0, select bank0
  2121  0517  1862               	btfsc	_flag_count,0
  2122  0518  2EAF               	goto	l97
  2123                           
  2124                           ;main.c: 186: {
  2125                           ;main.c: 187: PORTCbits.RC3=1;
  2126  0519  1587               	bsf	7,3	;volatile
  2127                           
  2128                           ;main.c: 188: PORTCbits.RC4=0;
  2129  051A  1207               	bcf	7,4	;volatile
  2130                           
  2131                           ;main.c: 191: lcd_printStringXY("ENABLE ON ",2,1);
  2132  051B  30C7               	movlw	low (STR_1| (0+32768))
  2133  051C  00A4               	movwf	lcd_printStringXY@str
  2134  051D  3084               	movlw	high (STR_1| (0+32768))
  2135  051E  00A5               	movwf	lcd_printStringXY@str+1
  2136  051F  3002               	movlw	2
  2137  0520  00DE               	movwf	??_main
  2138  0521  085E               	movf	??_main,w
  2139  0522  00A6               	movwf	lcd_printStringXY@x
  2140  0523  01A7               	clrf	lcd_printStringXY@y
  2141  0524  0AA7               	incf	lcd_printStringXY@y,f
  2142  0525  120A  158A  225E  120A  118A  	fcall	_lcd_printStringXY
  2143                           
  2144                           ;main.c: 192: ENABLE_SET();
  2145  052A  120A  158A  220A  120A  118A  	fcall	_ENABLE_SET
  2146                           
  2147                           ;main.c: 197: if(check_buttonSelect(RA5)==1)
  2148  052F  3000               	movlw	0
  2149  0530  1283               	bcf	3,5	;RP0=0, select bank0
  2150  0531  1303               	bcf	3,6	;RP1=0, select bank0
  2151  0532  1A85               	btfsc	5,5	;volatile
  2152  0533  3001               	movlw	1
  2153  0534  120A  158A  22D5  120A  118A  	fcall	_check_buttonSelect
  2154  0539  3A01               	xorlw	1
  2155  053A  1D03               	skipz
  2156  053B  2D40               	goto	l3073
  2157                           
  2158                           ;main.c: 198: {
  2159                           ;main.c: 199: flag_Work=1;
  2160  053C  1283               	bcf	3,5	;RP0=0, select bank0
  2161  053D  1303               	bcf	3,6	;RP1=0, select bank0
  2162  053E  01E7               	clrf	_flag_Work
  2163  053F  0AE7               	incf	_flag_Work,f
  2164  0540                     l3073:	
  2165                           
  2166                           ;main.c: 201: }
  2167                           ;main.c: 202: if(check_buttonSelect(RA4)==1)
  2168  0540  3000               	movlw	0
  2169  0541  1283               	bcf	3,5	;RP0=0, select bank0
  2170  0542  1303               	bcf	3,6	;RP1=0, select bank0
  2171  0543  1A05               	btfsc	5,4	;volatile
  2172  0544  3001               	movlw	1
  2173  0545  120A  158A  22D5  120A  118A  	fcall	_check_buttonSelect
  2174  054A  3A01               	xorlw	1
  2175  054B  1D03               	skipz
  2176  054C  2D85               	goto	l3087
  2177                           
  2178                           ;main.c: 203: {
  2179                           ;main.c: 204: flag_Work=0;
  2180  054D  1283               	bcf	3,5	;RP0=0, select bank0
  2181  054E  1303               	bcf	3,6	;RP1=0, select bank0
  2182  054F  01E7               	clrf	_flag_Work
  2183                           
  2184                           ;main.c: 206: }
  2185                           ;main.c: 208: switch( flag_Work)
  2186  0550  2D85               	goto	l3087
  2187  0551                     l3077:	
  2188                           ;main.c: 209: {
  2189                           ;main.c: 210: case 0:
  2190                           
  2191                           
  2192                           ;main.c: 211: {
  2193                           ;main.c: 212: DIRECTION_SET(1);
  2194  0551  3001               	movlw	1
  2195  0552  120A  158A  2274  120A  118A  	fcall	_DIRECTION_SET
  2196                           
  2197                           ;main.c: 214: lcd_printStringXY("DIR LEFT ",3,3);
  2198  0557  30DD               	movlw	low (STR_2| (0+32768))
  2199  0558  1283               	bcf	3,5	;RP0=0, select bank0
  2200  0559  1303               	bcf	3,6	;RP1=0, select bank0
  2201  055A  00A4               	movwf	lcd_printStringXY@str
  2202  055B  3084               	movlw	high (STR_2| (0+32768))
  2203  055C  00A5               	movwf	lcd_printStringXY@str+1
  2204  055D  3003               	movlw	3
  2205  055E  00DE               	movwf	??_main
  2206  055F  085E               	movf	??_main,w
  2207  0560  00A6               	movwf	lcd_printStringXY@x
  2208  0561  3003               	movlw	3
  2209  0562  00DF               	movwf	??_main+1
  2210  0563  085F               	movf	??_main+1,w
  2211  0564  00A7               	movwf	lcd_printStringXY@y
  2212  0565  120A  158A  225E  120A  118A  	fcall	_lcd_printStringXY
  2213                           
  2214                           ;main.c: 216: break;
  2215  056A  2D8F               	goto	l3089
  2216  056B                     l3081:	
  2217                           ;main.c: 217: }
  2218                           ;main.c: 218: case 1:
  2219                           
  2220                           
  2221                           ;main.c: 219: {
  2222                           ;main.c: 220: DIRECTION_SET(2);
  2223  056B  3002               	movlw	2
  2224  056C  120A  158A  2274  120A  118A  	fcall	_DIRECTION_SET
  2225                           
  2226                           ;main.c: 222: lcd_printStringXY("DIR RIGHT",3,3);
  2227  0571  30E7               	movlw	low (STR_3| (0+32768))
  2228  0572  1283               	bcf	3,5	;RP0=0, select bank0
  2229  0573  1303               	bcf	3,6	;RP1=0, select bank0
  2230  0574  00A4               	movwf	lcd_printStringXY@str
  2231  0575  3084               	movlw	high (STR_3| (0+32768))
  2232  0576  00A5               	movwf	lcd_printStringXY@str+1
  2233  0577  3003               	movlw	3
  2234  0578  00DE               	movwf	??_main
  2235  0579  085E               	movf	??_main,w
  2236  057A  00A6               	movwf	lcd_printStringXY@x
  2237  057B  3003               	movlw	3
  2238  057C  00DF               	movwf	??_main+1
  2239  057D  085F               	movf	??_main+1,w
  2240  057E  00A7               	movwf	lcd_printStringXY@y
  2241  057F  120A  158A  225E  120A  118A  	fcall	_lcd_printStringXY
  2242                           
  2243                           ;main.c: 224: }
  2244                           ;main.c: 225: }
  2245                           
  2246                           ;main.c: 223: break;
  2247  0584  2D8F               	goto	l3089
  2248  0585                     l3087:	
  2249  0585  1283               	bcf	3,5	;RP0=0, select bank0
  2250  0586  1303               	bcf	3,6	;RP1=0, select bank0
  2251  0587  0867               	movf	_flag_Work,w
  2252                           
  2253                           ; Switch size 1, requested type "space"
  2254                           ; Number of cases is 2, Range of values is 0 to 1
  2255                           ; switch strategies available:
  2256                           ; Name         Instructions Cycles
  2257                           ; simple_byte            7     4 (average)
  2258                           ; direct_byte           14     8 (fixed)
  2259                           ; jumptable            260     6 (fixed)
  2260                           ;	Chosen strategy is simple_byte
  2261  0588  3A00               	xorlw	0	; case 0
  2262  0589  1903               	skipnz
  2263  058A  2D51               	goto	l3077
  2264  058B  3A01               	xorlw	1	; case 1
  2265  058C  1903               	skipnz
  2266  058D  2D6B               	goto	l3081
  2267  058E  2D8F               	goto	l3089
  2268  058F                     l3089:	
  2269                           
  2270                           ;main.c: 230: lcd_printStringXY(data[0],4,0);
  2271  058F  303C               	movlw	low (_data| (0+32768))
  2272  0590  1283               	bcf	3,5	;RP0=0, select bank0
  2273  0591  1303               	bcf	3,6	;RP1=0, select bank0
  2274  0592  00A4               	movwf	lcd_printStringXY@str
  2275  0593  3084               	movlw	high (_data| (0+32768))
  2276  0594  00A5               	movwf	lcd_printStringXY@str+1
  2277  0595  3004               	movlw	4
  2278  0596  00DE               	movwf	??_main
  2279  0597  085E               	movf	??_main,w
  2280  0598  00A6               	movwf	lcd_printStringXY@x
  2281  0599  01A7               	clrf	lcd_printStringXY@y
  2282  059A  120A  158A  225E  120A  118A  	fcall	_lcd_printStringXY
  2283                           
  2284                           ;main.c: 232: Start_Timer();
  2285  059F  120A  158A  21FD  120A  118A  	fcall	_Start_Timer
  2286                           
  2287                           ;main.c: 234: Frequnsy=ReadValue();
  2288  05A4  120A  158A  2328  120A  118A  	fcall	_ReadValue
  2289  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  2290  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  2291  05AB  085D               	movf	?_ReadValue+1,w
  2292  05AC  1683               	bsf	3,5	;RP0=1, select bank1
  2293  05AD  1303               	bcf	3,6	;RP1=0, select bank1
  2294  05AE  00D1               	movwf	(main@Frequnsy+1)^(0+128)
  2295  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  2296  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  2297  05B1  085C               	movf	?_ReadValue,w
  2298  05B2  1683               	bsf	3,5	;RP0=1, select bank1
  2299  05B3  1303               	bcf	3,6	;RP1=0, select bank1
  2300  05B4  00D0               	movwf	main@Frequnsy^(0+128)
  2301                           
  2302                           ;main.c: 236: sprintf(dataFreq,"Freq: %d%d%d%d Hz ",Frequnsy/1000,(Frequnsy%1000)/100,(F
      +                          requnsy%100)/10,Frequnsy%10);
  2303  05B5  30E8               	movlw	232
  2304  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  2305  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  2306  05B8  00A4               	movwf	___lwdiv@divisor
  2307  05B9  3003               	movlw	3
  2308  05BA  00A5               	movwf	___lwdiv@divisor+1
  2309  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  2310  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  2311  05BD  0851               	movf	(main@Frequnsy+1)^(0+128),w
  2312  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  2313  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  2314  05C0  00A7               	movwf	___lwdiv@dividend+1
  2315  05C1  1683               	bsf	3,5	;RP0=1, select bank1
  2316  05C2  1303               	bcf	3,6	;RP1=0, select bank1
  2317  05C3  0850               	movf	main@Frequnsy^(0+128),w
  2318  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  2319  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  2320  05C6  00A6               	movwf	___lwdiv@dividend
  2321  05C7  120A  158A  243B  120A  118A  	fcall	___lwdiv
  2322  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  2323  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  2324  05CE  0825               	movf	?___lwdiv+1,w
  2325  05CF  1683               	bsf	3,5	;RP0=1, select bank1
  2326  05D0  1303               	bcf	3,6	;RP1=0, select bank1
  2327  05D1  00C9               	movwf	(_main$953+1)^(0+128)
  2328  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  2329  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  2330  05D4  0824               	movf	?___lwdiv,w
  2331  05D5  1683               	bsf	3,5	;RP0=1, select bank1
  2332  05D6  1303               	bcf	3,6	;RP1=0, select bank1
  2333  05D7  00C8               	movwf	_main$953^(0+128)
  2334                           
  2335                           ;main.c: 236: sprintf(dataFreq,"Freq: %d%d%d%d Hz ",Frequnsy/1000,(Frequnsy%1000)/100,(F
      +                          requnsy%100)/10,Frequnsy%10);
  2336  05D8  3064               	movlw	100
  2337  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  2338  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  2339  05DB  00A4               	movwf	___lwdiv@divisor
  2340  05DC  3000               	movlw	0
  2341  05DD  00A5               	movwf	___lwdiv@divisor+1
  2342  05DE  1683               	bsf	3,5	;RP0=1, select bank1
  2343  05DF  1303               	bcf	3,6	;RP1=0, select bank1
  2344  05E0  0851               	movf	(main@Frequnsy+1)^(0+128),w
  2345  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  2346  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  2347  05E3  00A3               	movwf	___lwmod@dividend+1
  2348  05E4  1683               	bsf	3,5	;RP0=1, select bank1
  2349  05E5  1303               	bcf	3,6	;RP1=0, select bank1
  2350  05E6  0850               	movf	main@Frequnsy^(0+128),w
  2351  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  2352  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  2353  05E9  00A2               	movwf	___lwmod@dividend
  2354  05EA  30E8               	movlw	232
  2355  05EB  00A0               	movwf	___lwmod@divisor
  2356  05EC  3003               	movlw	3
  2357  05ED  00A1               	movwf	___lwmod@divisor+1
  2358  05EE  120A  158A  2407  120A  118A  	fcall	___lwmod
  2359  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  2360  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  2361  05F5  0821               	movf	?___lwmod+1,w
  2362  05F6  00A7               	movwf	___lwdiv@dividend+1
  2363  05F7  0820               	movf	?___lwmod,w
  2364  05F8  00A6               	movwf	___lwdiv@dividend
  2365  05F9  120A  158A  243B  120A  118A  	fcall	___lwdiv
  2366  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  2367  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  2368  0600  0825               	movf	?___lwdiv+1,w
  2369  0601  1683               	bsf	3,5	;RP0=1, select bank1
  2370  0602  1303               	bcf	3,6	;RP1=0, select bank1
  2371  0603  00CB               	movwf	(_main$954+1)^(0+128)
  2372  0604  1283               	bcf	3,5	;RP0=0, select bank0
  2373  0605  1303               	bcf	3,6	;RP1=0, select bank0
  2374  0606  0824               	movf	?___lwdiv,w
  2375  0607  1683               	bsf	3,5	;RP0=1, select bank1
  2376  0608  1303               	bcf	3,6	;RP1=0, select bank1
  2377  0609  00CA               	movwf	_main$954^(0+128)
  2378                           
  2379                           ;main.c: 236: sprintf(dataFreq,"Freq: %d%d%d%d Hz ",Frequnsy/1000,(Frequnsy%1000)/100,(F
      +                          requnsy%100)/10,Frequnsy%10);
  2380  060A  300A               	movlw	10
  2381  060B  1283               	bcf	3,5	;RP0=0, select bank0
  2382  060C  1303               	bcf	3,6	;RP1=0, select bank0
  2383  060D  00A4               	movwf	___lwdiv@divisor
  2384  060E  3000               	movlw	0
  2385  060F  00A5               	movwf	___lwdiv@divisor+1
  2386  0610  1683               	bsf	3,5	;RP0=1, select bank1
  2387  0611  1303               	bcf	3,6	;RP1=0, select bank1
  2388  0612  0851               	movf	(main@Frequnsy+1)^(0+128),w
  2389  0613  1283               	bcf	3,5	;RP0=0, select bank0
  2390  0614  1303               	bcf	3,6	;RP1=0, select bank0
  2391  0615  00A3               	movwf	___lwmod@dividend+1
  2392  0616  1683               	bsf	3,5	;RP0=1, select bank1
  2393  0617  1303               	bcf	3,6	;RP1=0, select bank1
  2394  0618  0850               	movf	main@Frequnsy^(0+128),w
  2395  0619  1283               	bcf	3,5	;RP0=0, select bank0
  2396  061A  1303               	bcf	3,6	;RP1=0, select bank0
  2397  061B  00A2               	movwf	___lwmod@dividend
  2398  061C  3064               	movlw	100
  2399  061D  00A0               	movwf	___lwmod@divisor
  2400  061E  3000               	movlw	0
  2401  061F  00A1               	movwf	___lwmod@divisor+1
  2402  0620  120A  158A  2407  120A  118A  	fcall	___lwmod
  2403  0625  1283               	bcf	3,5	;RP0=0, select bank0
  2404  0626  1303               	bcf	3,6	;RP1=0, select bank0
  2405  0627  0821               	movf	?___lwmod+1,w
  2406  0628  00A7               	movwf	___lwdiv@dividend+1
  2407  0629  0820               	movf	?___lwmod,w
  2408  062A  00A6               	movwf	___lwdiv@dividend
  2409  062B  120A  158A  243B  120A  118A  	fcall	___lwdiv
  2410  0630  1283               	bcf	3,5	;RP0=0, select bank0
  2411  0631  1303               	bcf	3,6	;RP1=0, select bank0
  2412  0632  0825               	movf	?___lwdiv+1,w
  2413  0633  1683               	bsf	3,5	;RP0=1, select bank1
  2414  0634  1303               	bcf	3,6	;RP1=0, select bank1
  2415  0635  00CD               	movwf	(_main$955+1)^(0+128)
  2416  0636  1283               	bcf	3,5	;RP0=0, select bank0
  2417  0637  1303               	bcf	3,6	;RP1=0, select bank0
  2418  0638  0824               	movf	?___lwdiv,w
  2419  0639  1683               	bsf	3,5	;RP0=1, select bank1
  2420  063A  1303               	bcf	3,6	;RP1=0, select bank1
  2421  063B  00CC               	movwf	_main$955^(0+128)
  2422                           
  2423                           ;main.c: 236: sprintf(dataFreq,"Freq: %d%d%d%d Hz ",Frequnsy/1000,(Frequnsy%1000)/100,(F
      +                          requnsy%100)/10,Frequnsy%10);
  2424  063C  300A               	movlw	10
  2425  063D  1283               	bcf	3,5	;RP0=0, select bank0
  2426  063E  1303               	bcf	3,6	;RP1=0, select bank0
  2427  063F  00A0               	movwf	___lwmod@divisor
  2428  0640  3000               	movlw	0
  2429  0641  00A1               	movwf	___lwmod@divisor+1
  2430  0642  1683               	bsf	3,5	;RP0=1, select bank1
  2431  0643  1303               	bcf	3,6	;RP1=0, select bank1
  2432  0644  0851               	movf	(main@Frequnsy+1)^(0+128),w
  2433  0645  1283               	bcf	3,5	;RP0=0, select bank0
  2434  0646  1303               	bcf	3,6	;RP1=0, select bank0
  2435  0647  00A3               	movwf	___lwmod@dividend+1
  2436  0648  1683               	bsf	3,5	;RP0=1, select bank1
  2437  0649  1303               	bcf	3,6	;RP1=0, select bank1
  2438  064A  0850               	movf	main@Frequnsy^(0+128),w
  2439  064B  1283               	bcf	3,5	;RP0=0, select bank0
  2440  064C  1303               	bcf	3,6	;RP1=0, select bank0
  2441  064D  00A2               	movwf	___lwmod@dividend
  2442  064E  120A  158A  2407  120A  118A  	fcall	___lwmod
  2443  0653  1283               	bcf	3,5	;RP0=0, select bank0
  2444  0654  1303               	bcf	3,6	;RP1=0, select bank0
  2445  0655  0821               	movf	?___lwmod+1,w
  2446  0656  1683               	bsf	3,5	;RP0=1, select bank1
  2447  0657  1303               	bcf	3,6	;RP1=0, select bank1
  2448  0658  00CF               	movwf	(_main$956+1)^(0+128)
  2449  0659  1283               	bcf	3,5	;RP0=0, select bank0
  2450  065A  1303               	bcf	3,6	;RP1=0, select bank0
  2451  065B  0820               	movf	?___lwmod,w
  2452  065C  1683               	bsf	3,5	;RP0=1, select bank1
  2453  065D  1303               	bcf	3,6	;RP1=0, select bank1
  2454  065E  00CE               	movwf	_main$956^(0+128)
  2455                           
  2456                           ;main.c: 236: sprintf(dataFreq,"Freq: %d%d%d%d Hz ",Frequnsy/1000,(Frequnsy%1000)/100,(F
      +                          requnsy%100)/10,Frequnsy%10);
  2457  065F  30B4               	movlw	low (STR_4| (0+32768))
  2458  0660  1283               	bcf	3,5	;RP0=0, select bank0
  2459  0661  1303               	bcf	3,6	;RP1=0, select bank0
  2460  0662  00AB               	movwf	sprintf@f
  2461  0663  3084               	movlw	high (STR_4| (0+32768))
  2462  0664  00AC               	movwf	sprintf@f+1
  2463  0665  1683               	bsf	3,5	;RP0=1, select bank1
  2464  0666  1303               	bcf	3,6	;RP1=0, select bank1
  2465  0667  0849               	movf	(_main$953+1)^(0+128),w
  2466  0668  1283               	bcf	3,5	;RP0=0, select bank0
  2467  0669  1303               	bcf	3,6	;RP1=0, select bank0
  2468  066A  00AE               	movwf	?_sprintf+3
  2469  066B  1683               	bsf	3,5	;RP0=1, select bank1
  2470  066C  1303               	bcf	3,6	;RP1=0, select bank1
  2471  066D  0848               	movf	_main$953^(0+128),w
  2472  066E  1283               	bcf	3,5	;RP0=0, select bank0
  2473  066F  1303               	bcf	3,6	;RP1=0, select bank0
  2474  0670  00AD               	movwf	?_sprintf+2
  2475  0671  1683               	bsf	3,5	;RP0=1, select bank1
  2476  0672  1303               	bcf	3,6	;RP1=0, select bank1
  2477  0673  084B               	movf	(_main$954+1)^(0+128),w
  2478  0674  1283               	bcf	3,5	;RP0=0, select bank0
  2479  0675  1303               	bcf	3,6	;RP1=0, select bank0
  2480  0676  00B0               	movwf	?_sprintf+5
  2481  0677  1683               	bsf	3,5	;RP0=1, select bank1
  2482  0678  1303               	bcf	3,6	;RP1=0, select bank1
  2483  0679  084A               	movf	_main$954^(0+128),w
  2484  067A  1283               	bcf	3,5	;RP0=0, select bank0
  2485  067B  1303               	bcf	3,6	;RP1=0, select bank0
  2486  067C  00AF               	movwf	?_sprintf+4
  2487  067D  1683               	bsf	3,5	;RP0=1, select bank1
  2488  067E  1303               	bcf	3,6	;RP1=0, select bank1
  2489  067F  084D               	movf	(_main$955+1)^(0+128),w
  2490  0680  1283               	bcf	3,5	;RP0=0, select bank0
  2491  0681  1303               	bcf	3,6	;RP1=0, select bank0
  2492  0682  00B2               	movwf	?_sprintf+7
  2493  0683  1683               	bsf	3,5	;RP0=1, select bank1
  2494  0684  1303               	bcf	3,6	;RP1=0, select bank1
  2495  0685  084C               	movf	_main$955^(0+128),w
  2496  0686  1283               	bcf	3,5	;RP0=0, select bank0
  2497  0687  1303               	bcf	3,6	;RP1=0, select bank0
  2498  0688  00B1               	movwf	?_sprintf+6
  2499  0689  1683               	bsf	3,5	;RP0=1, select bank1
  2500  068A  1303               	bcf	3,6	;RP1=0, select bank1
  2501  068B  084F               	movf	(_main$956+1)^(0+128),w
  2502  068C  1283               	bcf	3,5	;RP0=0, select bank0
  2503  068D  1303               	bcf	3,6	;RP1=0, select bank0
  2504  068E  00B4               	movwf	?_sprintf+9
  2505  068F  1683               	bsf	3,5	;RP0=1, select bank1
  2506  0690  1303               	bcf	3,6	;RP1=0, select bank1
  2507  0691  084E               	movf	_main$956^(0+128),w
  2508  0692  1283               	bcf	3,5	;RP0=0, select bank0
  2509  0693  1303               	bcf	3,6	;RP1=0, select bank0
  2510  0694  00B3               	movwf	?_sprintf+8
  2511  0695  30A0               	movlw	(low (_dataFreq| 0))& (0+255)
  2512  0696  120A  158A  2716  120A  118A  	fcall	_sprintf
  2513                           
  2514                           ;main.c: 237: lcd_printStringXY(dataFreq,2,2);
  2515  069B  30A0               	movlw	(low (_dataFreq| 0))& (0+255)
  2516  069C  1283               	bcf	3,5	;RP0=0, select bank0
  2517  069D  1303               	bcf	3,6	;RP1=0, select bank0
  2518  069E  00A4               	movwf	lcd_printStringXY@str
  2519  069F  3000               	movlw	0
  2520  06A0  00A5               	movwf	lcd_printStringXY@str+1
  2521  06A1  3002               	movlw	2
  2522  06A2  00DE               	movwf	??_main
  2523  06A3  085E               	movf	??_main,w
  2524  06A4  00A6               	movwf	lcd_printStringXY@x
  2525  06A5  3002               	movlw	2
  2526  06A6  00DF               	movwf	??_main+1
  2527  06A7  085F               	movf	??_main+1,w
  2528  06A8  00A7               	movwf	lcd_printStringXY@y
  2529  06A9  120A  158A  225E  120A  118A  	fcall	_lcd_printStringXY
  2530                           
  2531                           ;main.c: 239: }
  2532  06AE  2D07               	goto	l3057
  2533  06AF                     l97:	
  2534                           
  2535                           ;main.c: 240: else if(flag_count%2!=0)
  2536  06AF  1C62               	btfss	_flag_count,0
  2537  06B0  2D07               	goto	l3057
  2538                           
  2539                           ;main.c: 241: {
  2540                           ;main.c: 242: PORTCbits.RC3=0;
  2541  06B1  1187               	bcf	7,3	;volatile
  2542                           
  2543                           ;main.c: 243: PORTCbits.RC4=1;
  2544  06B2  1607               	bsf	7,4	;volatile
  2545                           
  2546                           ;main.c: 244: lcd_printStringXY("ENABLE OFF",2,1);
  2547  06B3  30D2               	movlw	low (STR_5| (0+32768))
  2548  06B4  00A4               	movwf	lcd_printStringXY@str
  2549  06B5  3084               	movlw	high (STR_5| (0+32768))
  2550  06B6  00A5               	movwf	lcd_printStringXY@str+1
  2551  06B7  3002               	movlw	2
  2552  06B8  00DE               	movwf	??_main
  2553  06B9  085E               	movf	??_main,w
  2554  06BA  00A6               	movwf	lcd_printStringXY@x
  2555  06BB  01A7               	clrf	lcd_printStringXY@y
  2556  06BC  0AA7               	incf	lcd_printStringXY@y,f
  2557  06BD  120A  158A  225E  120A  118A  	fcall	_lcd_printStringXY
  2558                           
  2559                           ;main.c: 245: ENABLE_RESET();
  2560  06C2  120A  158A  2205  120A  118A  	fcall	_ENABLE_RESET
  2561                           
  2562                           ;main.c: 247: lcd_printStringXY(data[1],4,0);
  2563  06C7  3064               	movlw	low ((_data| (0+32768)+40))
  2564  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  2565  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  2566  06CA  00A4               	movwf	lcd_printStringXY@str
  2567  06CB  3084               	movlw	high ((_data| (0+32768)+40))
  2568  06CC  00A5               	movwf	lcd_printStringXY@str+1
  2569  06CD  3004               	movlw	4
  2570  06CE  00DE               	movwf	??_main
  2571  06CF  085E               	movf	??_main,w
  2572  06D0  00A6               	movwf	lcd_printStringXY@x
  2573  06D1  01A7               	clrf	lcd_printStringXY@y
  2574  06D2  120A  158A  225E  120A  118A  	fcall	_lcd_printStringXY
  2575                           
  2576                           ;main.c: 249: Stop_Timer();
  2577  06D7  120A  158A  2201  120A  118A  	fcall	_Stop_Timer
  2578                           
  2579                           ;main.c: 251: lcd_printStringXY(data[2],2,2);
  2580  06DC  308C               	movlw	low ((_data| (0+32768)+80))
  2581  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  2582  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  2583  06DF  00A4               	movwf	lcd_printStringXY@str
  2584  06E0  3084               	movlw	high ((_data| (0+32768)+80))
  2585  06E1  00A5               	movwf	lcd_printStringXY@str+1
  2586  06E2  3002               	movlw	2
  2587  06E3  00DE               	movwf	??_main
  2588  06E4  085E               	movf	??_main,w
  2589  06E5  00A6               	movwf	lcd_printStringXY@x
  2590  06E6  3002               	movlw	2
  2591  06E7  00DF               	movwf	??_main+1
  2592  06E8  085F               	movf	??_main+1,w
  2593  06E9  00A7               	movwf	lcd_printStringXY@y
  2594  06EA  120A  158A  225E  120A  118A  	fcall	_lcd_printStringXY
  2595  06EF  2D07               	goto	l3057
  2596  06F0                     __end_of_main:	
  2597                           
  2598                           	psect	text1
  2599  0F16                     __ptext1:	
  2600 ;; *************** function _sprintf *****************
  2601 ;; Defined at:
  2602 ;;		line 492 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\doprnt.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;  sp              1    wreg     PTR unsigned char 
  2605 ;;		 -> dataFreq(40), 
  2606 ;;  f               2   11[BANK0 ] PTR const unsigned char 
  2607 ;;		 -> STR_4(19), 
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;  sp              1   29[BANK0 ] PTR unsigned char 
  2610 ;;		 -> dataFreq(40), 
  2611 ;;  tmpval          4    0        struct .
  2612 ;;  val             2   27[BANK0 ] unsigned int 
  2613 ;;  cp              2    0        PTR const unsigned char 
  2614 ;;  len             2    0        unsigned int 
  2615 ;;  c               1   30[BANK0 ] char 
  2616 ;;  prec            1   26[BANK0 ] char 
  2617 ;;  flag            1   25[BANK0 ] unsigned char 
  2618 ;;  ap              1   24[BANK0 ] PTR void [1]
  2619 ;;		 -> ?_sprintf(2), 
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  2   11[BANK0 ] int 
  2622 ;; Registers used:
  2623 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2629 ;;      Params:         0      10       0       0       0
  2630 ;;      Locals:         0       7       0       0       0
  2631 ;;      Temps:          0       3       0       0       0
  2632 ;;      Totals:         0      20       0       0       0
  2633 ;;Total ram usage:       20 bytes
  2634 ;; Hardware stack levels used:    1
  2635 ;; Hardware stack levels required when called:    3
  2636 ;; This function calls:
  2637 ;;		___lwdiv
  2638 ;;		___lwmod
  2639 ;; This function is called by:
  2640 ;;		_main
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           
  2645                           ;psect for function _sprintf
  2646  0F16                     _sprintf:	
  2647                           
  2648                           ;incstack = 0
  2649                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2650                           ;sprintf@sp stored from wreg
  2651  0F16  1283               	bcf	3,5	;RP0=0, select bank0
  2652  0F17  1303               	bcf	3,6	;RP1=0, select bank0
  2653  0F18  00BD               	movwf	sprintf@sp
  2654                           
  2655                           ;doprnt.c: 494: va_list ap;
  2656                           ;doprnt.c: 499: signed char c;
  2657                           ;doprnt.c: 506: signed char prec;
  2658                           ;doprnt.c: 508: unsigned char flag;
  2659                           ;doprnt.c: 523: union {
  2660                           ;doprnt.c: 524: unsigned long vd;
  2661                           ;doprnt.c: 525: double integ;
  2662                           ;doprnt.c: 526: } tmpval;
  2663                           ;doprnt.c: 528: unsigned int val;
  2664                           ;doprnt.c: 529: unsigned len;
  2665                           ;doprnt.c: 530: const char * cp;
  2666                           ;doprnt.c: 533: *ap = __va_start();
  2667  0F19  302D               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2668  0F1A  00B5               	movwf	??_sprintf
  2669  0F1B  0835               	movf	??_sprintf,w
  2670  0F1C  00B8               	movwf	sprintf@ap
  2671  0F1D                     l3043:	
  2672                           ;doprnt.c: 536: while(c = *f++) {
  2673                           
  2674  0F1D  082C               	movf	sprintf@f+1,w
  2675  0F1E  00B6               	movwf	??_sprintf+1
  2676  0F1F  082B               	movf	sprintf@f,w
  2677  0F20  00B5               	movwf	??_sprintf
  2678  0F21  0AAB               	incf	sprintf@f,f
  2679  0F22  1903               	skipnz
  2680  0F23  0AAC               	incf	sprintf@f+1,f
  2681  0F24  0836               	movf	??_sprintf+1,w
  2682  0F25  00FF               	movwf	127
  2683  0F26  0835               	movf	??_sprintf,w
  2684  0F27  0084               	movwf	4
  2685  0F28  120A  118A  2100  120A  158A  	fcall	stringtab
  2686  0F2D  00B7               	movwf	??_sprintf+2
  2687  0F2E  0837               	movf	??_sprintf+2,w
  2688  0F2F  00BE               	movwf	sprintf@c
  2689  0F30  083E               	movf	sprintf@c,w
  2690  0F31  1903               	btfsc	3,2
  2691  0F32  2FFB               	goto	l3045
  2692                           
  2693                           ;doprnt.c: 538: if(c != '%')
  2694  0F33  3025               	movlw	37
  2695  0F34  063E               	xorwf	sprintf@c,w
  2696  0F35  1903               	btfsc	3,2
  2697  0F36  2F43               	goto	l2999
  2698                           
  2699                           ;doprnt.c: 540: {
  2700                           ;doprnt.c: 541: ((*sp++ = (c)));
  2701  0F37  083E               	movf	sprintf@c,w
  2702  0F38  00B5               	movwf	??_sprintf
  2703  0F39  083D               	movf	sprintf@sp,w
  2704  0F3A  0084               	movwf	4
  2705  0F3B  0835               	movf	??_sprintf,w
  2706  0F3C  1383               	bcf	3,7	;select IRP bank0
  2707  0F3D  0080               	movwf	0
  2708  0F3E  3001               	movlw	1
  2709  0F3F  00B5               	movwf	??_sprintf
  2710  0F40  0835               	movf	??_sprintf,w
  2711  0F41  07BD               	addwf	sprintf@sp,f
  2712                           
  2713                           ;doprnt.c: 542: continue;
  2714  0F42  2F1D               	goto	l3043
  2715  0F43                     l2999:	
  2716                           
  2717                           ;doprnt.c: 543: }
  2718                           ;doprnt.c: 548: flag = 0;
  2719  0F43  01B9               	clrf	sprintf@flag
  2720                           
  2721                           ;doprnt.c: 822: }
  2722                           
  2723                           ;doprnt.c: 813: continue;
  2724                           
  2725                           ;doprnt.c: 802: default:
  2726                           
  2727                           ;doprnt.c: 698: case 'i':
  2728                           ;doprnt.c: 699: break;
  2729                           
  2730                           ;doprnt.c: 697: case 'd':
  2731                           
  2732                           ;doprnt.c: 638: goto alldone;
  2733                           
  2734                           ;doprnt.c: 637: case 0:
  2735                           
  2736                           ;doprnt.c: 635: switch(c = *f++) {
  2737  0F44  082C               	movf	sprintf@f+1,w
  2738  0F45  00B6               	movwf	??_sprintf+1
  2739  0F46  082B               	movf	sprintf@f,w
  2740  0F47  00B5               	movwf	??_sprintf
  2741  0F48  0AAB               	incf	sprintf@f,f
  2742  0F49  1903               	skipnz
  2743  0F4A  0AAC               	incf	sprintf@f+1,f
  2744  0F4B  0836               	movf	??_sprintf+1,w
  2745  0F4C  00FF               	movwf	127
  2746  0F4D  0835               	movf	??_sprintf,w
  2747  0F4E  0084               	movwf	4
  2748  0F4F  120A  118A  2100  120A  158A  	fcall	stringtab
  2749  0F54  00BE               	movwf	sprintf@c
  2750                           
  2751                           ; Switch size 1, requested type "space"
  2752                           ; Number of cases is 3, Range of values is 0 to 105
  2753                           ; switch strategies available:
  2754                           ; Name         Instructions Cycles
  2755                           ; simple_byte           10     6 (average)
  2756                           ; jumptable            260     6 (fixed)
  2757                           ;	Chosen strategy is simple_byte
  2758  0F55  3A00               	xorlw	0	; case 0
  2759  0F56  1903               	skipnz
  2760  0F57  2FFB               	goto	l3045
  2761  0F58  3A64               	xorlw	100	; case 100
  2762  0F59  1903               	skipnz
  2763  0F5A  2F5F               	goto	l3005
  2764  0F5B  3A0D               	xorlw	13	; case 105
  2765  0F5C  1903               	skipnz
  2766  0F5D  2F5F               	goto	l3005
  2767  0F5E  2F1D               	goto	l3043
  2768  0F5F                     l3005:	
  2769                           
  2770                           ;doprnt.c: 1253: {
  2771                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2772  0F5F  0838               	movf	sprintf@ap,w
  2773  0F60  0084               	movwf	4
  2774  0F61  1383               	bcf	3,7	;select IRP bank0
  2775  0F62  0800               	movf	0,w
  2776  0F63  00BB               	movwf	sprintf@val
  2777  0F64  0A84               	incf	4,f
  2778  0F65  0800               	movf	0,w
  2779  0F66  00BC               	movwf	sprintf@val+1
  2780  0F67  3002               	movlw	2
  2781  0F68  00B5               	movwf	??_sprintf
  2782  0F69  0835               	movf	??_sprintf,w
  2783  0F6A  07B8               	addwf	sprintf@ap,f
  2784                           
  2785                           ;doprnt.c: 1261: if((int)val < 0) {
  2786  0F6B  1FBC               	btfss	sprintf@val+1,7
  2787  0F6C  2F76               	goto	l3015
  2788                           
  2789                           ;doprnt.c: 1262: flag |= 0x03;
  2790  0F6D  3003               	movlw	3
  2791  0F6E  00B5               	movwf	??_sprintf
  2792  0F6F  0835               	movf	??_sprintf,w
  2793  0F70  04B9               	iorwf	sprintf@flag,f
  2794                           
  2795                           ;doprnt.c: 1263: val = -val;
  2796  0F71  09BB               	comf	sprintf@val,f
  2797  0F72  09BC               	comf	sprintf@val+1,f
  2798  0F73  0ABB               	incf	sprintf@val,f
  2799  0F74  1903               	skipnz
  2800  0F75  0ABC               	incf	sprintf@val+1,f
  2801  0F76                     l3015:	
  2802                           
  2803                           ;doprnt.c: 1264: }
  2804                           ;doprnt.c: 1266: }
  2805                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2806  0F76  01BE               	clrf	sprintf@c
  2807  0F77  0ABE               	incf	sprintf@c,f
  2808  0F78  3005               	movlw	5
  2809  0F79  063E               	xorwf	sprintf@c,w
  2810  0F7A  1903               	btfsc	3,2
  2811  0F7B  2FA1               	goto	l3027
  2812  0F7C                     l3021:	
  2813                           
  2814                           ;doprnt.c: 1306: if(val < dpowers[c])
  2815  0F7C  083E               	movf	sprintf@c,w
  2816  0F7D  00B5               	movwf	??_sprintf
  2817  0F7E  0735               	addwf	??_sprintf,w
  2818  0F7F  3E32               	addlw	low (_dpowers| (0+32768))
  2819  0F80  0084               	movwf	4
  2820  0F81  3084               	movlw	high (_dpowers| (0+32768))
  2821  0F82  1803               	skipnc
  2822  0F83  3E01               	addlw	1
  2823  0F84  00FF               	movwf	127
  2824  0F85  120A  118A  2100  120A  158A  	fcall	stringtab
  2825  0F8A  00B6               	movwf	??_sprintf+1
  2826  0F8B  120A  118A  2100  120A  158A  	fcall	stringtab
  2827  0F90  00B7               	movwf	??_sprintf+2
  2828  0F91  0837               	movf	??_sprintf+2,w
  2829  0F92  023C               	subwf	sprintf@val+1,w
  2830  0F93  1D03               	skipz
  2831  0F94  2F97               	goto	u3755
  2832  0F95  0836               	movf	??_sprintf+1,w
  2833  0F96  023B               	subwf	sprintf@val,w
  2834  0F97                     u3755:	
  2835  0F97  1C03               	btfss	3,0
  2836  0F98  2FA1               	goto	l3027
  2837                           
  2838                           ;doprnt.c: 1307: break;
  2839  0F99  3001               	movlw	1
  2840  0F9A  00B5               	movwf	??_sprintf
  2841  0F9B  0835               	movf	??_sprintf,w
  2842  0F9C  07BE               	addwf	sprintf@c,f
  2843  0F9D  3005               	movlw	5
  2844  0F9E  063E               	xorwf	sprintf@c,w
  2845  0F9F  1D03               	btfss	3,2
  2846  0FA0  2F7C               	goto	l3021
  2847  0FA1                     l3027:	
  2848                           
  2849                           ;doprnt.c: 1422: {
  2850                           ;doprnt.c: 1438: if(flag & 0x03)
  2851  0FA1  0839               	movf	sprintf@flag,w
  2852  0FA2  3903               	andlw	3
  2853  0FA3  1903               	btfsc	3,2
  2854  0FA4  2FB0               	goto	l3033
  2855                           
  2856                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  2857  0FA5  302D               	movlw	45
  2858  0FA6  00B5               	movwf	??_sprintf
  2859  0FA7  083D               	movf	sprintf@sp,w
  2860  0FA8  0084               	movwf	4
  2861  0FA9  0835               	movf	??_sprintf,w
  2862  0FAA  1383               	bcf	3,7	;select IRP bank0
  2863  0FAB  0080               	movwf	0
  2864  0FAC  3001               	movlw	1
  2865  0FAD  00B5               	movwf	??_sprintf
  2866  0FAE  0835               	movf	??_sprintf,w
  2867  0FAF  07BD               	addwf	sprintf@sp,f
  2868  0FB0                     l3033:	
  2869                           
  2870                           ;doprnt.c: 1469: }
  2871                           ;doprnt.c: 1472: prec = c;
  2872  0FB0  083E               	movf	sprintf@c,w
  2873  0FB1  00B5               	movwf	??_sprintf
  2874  0FB2  0835               	movf	??_sprintf,w
  2875  0FB3  00BA               	movwf	sprintf@prec
  2876  0FB4                     l3041:	
  2877                           ;doprnt.c: 1474: while(prec--) {
  2878                           
  2879  0FB4  30FF               	movlw	255
  2880  0FB5  00B5               	movwf	??_sprintf
  2881  0FB6  0835               	movf	??_sprintf,w
  2882  0FB7  07BA               	addwf	sprintf@prec,f
  2883  0FB8  0A3A               	incf	sprintf@prec,w
  2884  0FB9  1903               	btfsc	3,2
  2885  0FBA  2F1D               	goto	l3043
  2886                           
  2887                           ;doprnt.c: 1478: {
  2888                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2889  0FBB  300A               	movlw	10
  2890  0FBC  00A0               	movwf	___lwmod@divisor
  2891  0FBD  3000               	movlw	0
  2892  0FBE  00A1               	movwf	___lwmod@divisor+1
  2893  0FBF  083A               	movf	sprintf@prec,w
  2894  0FC0  00B5               	movwf	??_sprintf
  2895  0FC1  0735               	addwf	??_sprintf,w
  2896  0FC2  3E32               	addlw	low (_dpowers| (0+32768))
  2897  0FC3  0084               	movwf	4
  2898  0FC4  3084               	movlw	high (_dpowers| (0+32768))
  2899  0FC5  1803               	skipnc
  2900  0FC6  3E01               	addlw	1
  2901  0FC7  00FF               	movwf	127
  2902  0FC8  120A  118A  2100  120A  158A  	fcall	stringtab
  2903  0FCD  00A4               	movwf	___lwdiv@divisor
  2904  0FCE  120A  118A  2100  120A  158A  	fcall	stringtab
  2905  0FD3  00A5               	movwf	___lwdiv@divisor+1
  2906  0FD4  083C               	movf	sprintf@val+1,w
  2907  0FD5  00A7               	movwf	___lwdiv@dividend+1
  2908  0FD6  083B               	movf	sprintf@val,w
  2909  0FD7  00A6               	movwf	___lwdiv@dividend
  2910  0FD8  120A  158A  243B  120A  158A  	fcall	___lwdiv
  2911  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  2912  0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  2913  0FDF  0825               	movf	?___lwdiv+1,w
  2914  0FE0  00A3               	movwf	___lwmod@dividend+1
  2915  0FE1  0824               	movf	?___lwdiv,w
  2916  0FE2  00A2               	movwf	___lwmod@dividend
  2917  0FE3  120A  158A  2407  120A  158A  	fcall	___lwmod
  2918  0FE8  1283               	bcf	3,5	;RP0=0, select bank0
  2919  0FE9  1303               	bcf	3,6	;RP1=0, select bank0
  2920  0FEA  0820               	movf	?___lwmod,w
  2921  0FEB  3E30               	addlw	48
  2922  0FEC  00B6               	movwf	??_sprintf+1
  2923  0FED  0836               	movf	??_sprintf+1,w
  2924  0FEE  00BE               	movwf	sprintf@c
  2925                           
  2926                           ;doprnt.c: 1523: }
  2927                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2928  0FEF  083E               	movf	sprintf@c,w
  2929  0FF0  00B5               	movwf	??_sprintf
  2930  0FF1  083D               	movf	sprintf@sp,w
  2931  0FF2  0084               	movwf	4
  2932  0FF3  0835               	movf	??_sprintf,w
  2933  0FF4  1383               	bcf	3,7	;select IRP bank0
  2934  0FF5  0080               	movwf	0
  2935  0FF6  3001               	movlw	1
  2936  0FF7  00B5               	movwf	??_sprintf
  2937  0FF8  0835               	movf	??_sprintf,w
  2938  0FF9  07BD               	addwf	sprintf@sp,f
  2939  0FFA  2FB4               	goto	l3041
  2940  0FFB                     l3045:	
  2941                           ;doprnt.c: 1525: }
  2942                           ;doprnt.c: 1533: }
  2943                           ;doprnt.c: 1535: alldone:
  2944                           
  2945                           
  2946                           ;doprnt.c: 1538: *sp = 0;
  2947  0FFB  083D               	movf	sprintf@sp,w
  2948  0FFC  0084               	movwf	4
  2949  0FFD  1383               	bcf	3,7	;select IRP bank0
  2950  0FFE  0180               	clrf	0
  2951  0FFF  0008               	return
  2952  1000                     __end_of_sprintf:	
  2953                           ;doprnt.c: 1540: return 0;
  2954                           ;	Return value of _sprintf is never used
  2955                           
  2956                           
  2957                           	psect	text2
  2958  0C07                     __ptext2:	
  2959 ;; *************** function ___lwmod *****************
  2960 ;; Defined at:
  2961 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\lwmod.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;  divisor         2    0[BANK0 ] unsigned int 
  2964 ;;  dividend        2    2[BANK0 ] unsigned int 
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;  counter         1    5[COMMON] unsigned char 
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  2    0[BANK0 ] unsigned int 
  2969 ;; Registers used:
  2970 ;;		wreg, status,2, status,0
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2976 ;;      Params:         0       4       0       0       0
  2977 ;;      Locals:         1       0       0       0       0
  2978 ;;      Temps:          1       0       0       0       0
  2979 ;;      Totals:         2       4       0       0       0
  2980 ;;Total ram usage:        6 bytes
  2981 ;; Hardware stack levels used:    1
  2982 ;; Hardware stack levels required when called:    2
  2983 ;; This function calls:
  2984 ;;		Nothing
  2985 ;; This function is called by:
  2986 ;;		_main
  2987 ;;		_sprintf
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           
  2992                           ;psect for function ___lwmod
  2993  0C07                     ___lwmod:	
  2994                           
  2995                           ;incstack = 0
  2996                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2997  0C07  1283               	bcf	3,5	;RP0=0, select bank0
  2998  0C08  1303               	bcf	3,6	;RP1=0, select bank0
  2999  0C09  0820               	movf	___lwmod@divisor,w
  3000  0C0A  0421               	iorwf	___lwmod@divisor+1,w
  3001  0C0B  1903               	btfsc	3,2
  3002  0C0C  2C36               	goto	l2903
  3003  0C0D  01F5               	clrf	___lwmod@counter
  3004  0C0E  0AF5               	incf	___lwmod@counter,f
  3005  0C0F                     l2893:	
  3006  0C0F  1BA1               	btfsc	___lwmod@divisor+1,7
  3007  0C10  2C1D               	goto	l2895
  3008  0C11  3001               	movlw	1
  3009  0C12                     u3635:	
  3010  0C12  1003               	clrc
  3011  0C13  0DA0               	rlf	___lwmod@divisor,f
  3012  0C14  0DA1               	rlf	___lwmod@divisor+1,f
  3013  0C15  3EFF               	addlw	-1
  3014  0C16  1D03               	skipz
  3015  0C17  2C12               	goto	u3635
  3016  0C18  3001               	movlw	1
  3017  0C19  00F4               	movwf	??___lwmod
  3018  0C1A  0874               	movf	??___lwmod,w
  3019  0C1B  07F5               	addwf	___lwmod@counter,f
  3020  0C1C  2C0F               	goto	l2893
  3021  0C1D                     l2895:	
  3022  0C1D  0821               	movf	___lwmod@divisor+1,w
  3023  0C1E  0223               	subwf	___lwmod@dividend+1,w
  3024  0C1F  1D03               	skipz
  3025  0C20  2C23               	goto	u3655
  3026  0C21  0820               	movf	___lwmod@divisor,w
  3027  0C22  0222               	subwf	___lwmod@dividend,w
  3028  0C23                     u3655:	
  3029  0C23  1C03               	skipc
  3030  0C24  2C2B               	goto	l2899
  3031  0C25  0820               	movf	___lwmod@divisor,w
  3032  0C26  02A2               	subwf	___lwmod@dividend,f
  3033  0C27  0821               	movf	___lwmod@divisor+1,w
  3034  0C28  1C03               	skipc
  3035  0C29  03A3               	decf	___lwmod@dividend+1,f
  3036  0C2A  02A3               	subwf	___lwmod@dividend+1,f
  3037  0C2B                     l2899:	
  3038  0C2B  3001               	movlw	1
  3039  0C2C                     u3665:	
  3040  0C2C  1003               	clrc
  3041  0C2D  0CA1               	rrf	___lwmod@divisor+1,f
  3042  0C2E  0CA0               	rrf	___lwmod@divisor,f
  3043  0C2F  3EFF               	addlw	-1
  3044  0C30  1D03               	skipz
  3045  0C31  2C2C               	goto	u3665
  3046  0C32  3001               	movlw	1
  3047  0C33  02F5               	subwf	___lwmod@counter,f
  3048  0C34  1D03               	btfss	3,2
  3049  0C35  2C1D               	goto	l2895
  3050  0C36                     l2903:	
  3051  0C36  0823               	movf	___lwmod@dividend+1,w
  3052  0C37  00A1               	movwf	?___lwmod+1
  3053  0C38  0822               	movf	___lwmod@dividend,w
  3054  0C39  00A0               	movwf	?___lwmod
  3055  0C3A  0008               	return
  3056  0C3B                     __end_of___lwmod:	
  3057                           
  3058                           	psect	text3
  3059  0C3B                     __ptext3:	
  3060 ;; *************** function ___lwdiv *****************
  3061 ;; Defined at:
  3062 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;  divisor         2    4[BANK0 ] unsigned int 
  3065 ;;  dividend        2    6[BANK0 ] unsigned int 
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;  quotient        2    9[BANK0 ] unsigned int 
  3068 ;;  counter         1    8[BANK0 ] unsigned char 
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  2    4[BANK0 ] unsigned int 
  3071 ;; Registers used:
  3072 ;;		wreg, status,2, status,0
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3078 ;;      Params:         0       4       0       0       0
  3079 ;;      Locals:         0       3       0       0       0
  3080 ;;      Temps:          1       0       0       0       0
  3081 ;;      Totals:         1       7       0       0       0
  3082 ;;Total ram usage:        8 bytes
  3083 ;; Hardware stack levels used:    1
  3084 ;; Hardware stack levels required when called:    2
  3085 ;; This function calls:
  3086 ;;		Nothing
  3087 ;; This function is called by:
  3088 ;;		_main
  3089 ;;		_sprintf
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           
  3094                           ;psect for function ___lwdiv
  3095  0C3B                     ___lwdiv:	
  3096                           
  3097                           ;incstack = 0
  3098                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3099  0C3B  1283               	bcf	3,5	;RP0=0, select bank0
  3100  0C3C  1303               	bcf	3,6	;RP1=0, select bank0
  3101  0C3D  01A9               	clrf	___lwdiv@quotient
  3102  0C3E  01AA               	clrf	___lwdiv@quotient+1
  3103  0C3F  0824               	movf	___lwdiv@divisor,w
  3104  0C40  0425               	iorwf	___lwdiv@divisor+1,w
  3105  0C41  1903               	btfsc	3,2
  3106  0C42  2C74               	goto	l2881
  3107  0C43  01A8               	clrf	___lwdiv@counter
  3108  0C44  0AA8               	incf	___lwdiv@counter,f
  3109  0C45                     l2869:	
  3110  0C45  1BA5               	btfsc	___lwdiv@divisor+1,7
  3111  0C46  2C53               	goto	l2871
  3112  0C47  3001               	movlw	1
  3113  0C48                     u3565:	
  3114  0C48  1003               	clrc
  3115  0C49  0DA4               	rlf	___lwdiv@divisor,f
  3116  0C4A  0DA5               	rlf	___lwdiv@divisor+1,f
  3117  0C4B  3EFF               	addlw	-1
  3118  0C4C  1D03               	skipz
  3119  0C4D  2C48               	goto	u3565
  3120  0C4E  3001               	movlw	1
  3121  0C4F  00F6               	movwf	??___lwdiv
  3122  0C50  0876               	movf	??___lwdiv,w
  3123  0C51  07A8               	addwf	___lwdiv@counter,f
  3124  0C52  2C45               	goto	l2869
  3125  0C53                     l2871:	
  3126  0C53  3001               	movlw	1
  3127  0C54                     u3585:	
  3128  0C54  1003               	clrc
  3129  0C55  0DA9               	rlf	___lwdiv@quotient,f
  3130  0C56  0DAA               	rlf	___lwdiv@quotient+1,f
  3131  0C57  3EFF               	addlw	-1
  3132  0C58  1D03               	skipz
  3133  0C59  2C54               	goto	u3585
  3134  0C5A  0825               	movf	___lwdiv@divisor+1,w
  3135  0C5B  0227               	subwf	___lwdiv@dividend+1,w
  3136  0C5C  1D03               	skipz
  3137  0C5D  2C60               	goto	u3595
  3138  0C5E  0824               	movf	___lwdiv@divisor,w
  3139  0C5F  0226               	subwf	___lwdiv@dividend,w
  3140  0C60                     u3595:	
  3141  0C60  1C03               	skipc
  3142  0C61  2C69               	goto	l2877
  3143  0C62  0824               	movf	___lwdiv@divisor,w
  3144  0C63  02A6               	subwf	___lwdiv@dividend,f
  3145  0C64  0825               	movf	___lwdiv@divisor+1,w
  3146  0C65  1C03               	skipc
  3147  0C66  03A7               	decf	___lwdiv@dividend+1,f
  3148  0C67  02A7               	subwf	___lwdiv@dividend+1,f
  3149  0C68  1429               	bsf	___lwdiv@quotient,0
  3150  0C69                     l2877:	
  3151  0C69  3001               	movlw	1
  3152  0C6A                     u3605:	
  3153  0C6A  1003               	clrc
  3154  0C6B  0CA5               	rrf	___lwdiv@divisor+1,f
  3155  0C6C  0CA4               	rrf	___lwdiv@divisor,f
  3156  0C6D  3EFF               	addlw	-1
  3157  0C6E  1D03               	skipz
  3158  0C6F  2C6A               	goto	u3605
  3159  0C70  3001               	movlw	1
  3160  0C71  02A8               	subwf	___lwdiv@counter,f
  3161  0C72  1D03               	btfss	3,2
  3162  0C73  2C53               	goto	l2871
  3163  0C74                     l2881:	
  3164  0C74  082A               	movf	___lwdiv@quotient+1,w
  3165  0C75  00A5               	movwf	?___lwdiv+1
  3166  0C76  0829               	movf	___lwdiv@quotient,w
  3167  0C77  00A4               	movwf	?___lwdiv
  3168  0C78  0008               	return
  3169  0C79                     __end_of___lwdiv:	
  3170                           
  3171                           	psect	text4
  3172  0A5E                     __ptext4:	
  3173 ;; *************** function _lcd_printStringXY *****************
  3174 ;; Defined at:
  3175 ;;		line 189 in file "LCD.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;  str             2    4[BANK0 ] PTR unsigned char 
  3178 ;;		 -> STR_5(11), dataFreq(40), data(120), STR_3(10), 
  3179 ;;		 -> STR_2(10), STR_1(11), 
  3180 ;;  x               1    6[BANK0 ] unsigned char 
  3181 ;;  y               1    7[BANK0 ] unsigned char 
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;		None
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      void 
  3186 ;; Registers used:
  3187 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3193 ;;      Params:         0       4       0       0       0
  3194 ;;      Locals:         0       0       0       0       0
  3195 ;;      Temps:          0       1       0       0       0
  3196 ;;      Totals:         0       5       0       0       0
  3197 ;;Total ram usage:        5 bytes
  3198 ;; Hardware stack levels used:    1
  3199 ;; Hardware stack levels required when called:    5
  3200 ;; This function calls:
  3201 ;;		_lcd_gotoxy
  3202 ;;		_lcd_printString
  3203 ;; This function is called by:
  3204 ;;		_main
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208                           
  3209                           ;psect for function _lcd_printStringXY
  3210  0A5E                     _lcd_printStringXY:	
  3211                           
  3212                           ;LCD.c: 191: lcd_gotoxy(x,y);
  3213                           
  3214                           ;incstack = 0
  3215                           ; Regs used in _lcd_printStringXY: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3216  0A5E  1283               	bcf	3,5	;RP0=0, select bank0
  3217  0A5F  1303               	bcf	3,6	;RP1=0, select bank0
  3218  0A60  0827               	movf	lcd_printStringXY@y,w
  3219  0A61  00A8               	movwf	??_lcd_printStringXY
  3220  0A62  0828               	movf	??_lcd_printStringXY,w
  3221  0A63  00A0               	movwf	lcd_gotoxy@y
  3222  0A64  0826               	movf	lcd_printStringXY@x,w
  3223  0A65  120A  158A  25DE  120A  158A  	fcall	_lcd_gotoxy
  3224                           
  3225                           ;LCD.c: 192: lcd_printString(str);
  3226  0A6A  1283               	bcf	3,5	;RP0=0, select bank0
  3227  0A6B  1303               	bcf	3,6	;RP1=0, select bank0
  3228  0A6C  0824               	movf	lcd_printStringXY@str,w
  3229  0A6D  00A0               	movwf	lcd_printString@str
  3230  0A6E  0825               	movf	lcd_printStringXY@str+1,w
  3231  0A6F  00A1               	movwf	lcd_printString@str+1
  3232  0A70  120A  158A  2362   	fcall	_lcd_printString
  3233  0A73  0008               	return
  3234  0A74                     __end_of_lcd_printStringXY:	
  3235                           
  3236                           	psect	text5
  3237  0B62                     __ptext5:	
  3238 ;; *************** function _lcd_printString *****************
  3239 ;; Defined at:
  3240 ;;		line 126 in file "LCD.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;  str             2    0[BANK0 ] PTR unsigned char 
  3243 ;;		 -> STR_5(11), dataFreq(40), data(120), STR_3(10), 
  3244 ;;		 -> STR_2(10), STR_1(11), 
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;		None
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  1    wreg      void 
  3249 ;; Registers used:
  3250 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3256 ;;      Params:         0       2       0       0       0
  3257 ;;      Locals:         0       0       0       0       0
  3258 ;;      Temps:          0       0       0       0       0
  3259 ;;      Totals:         0       2       0       0       0
  3260 ;;Total ram usage:        2 bytes
  3261 ;; Hardware stack levels used:    1
  3262 ;; Hardware stack levels required when called:    4
  3263 ;; This function calls:
  3264 ;;		_lcd_Print_char
  3265 ;; This function is called by:
  3266 ;;		_lcd_printStringXY
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           
  3271                           ;psect for function _lcd_printString
  3272  0B62                     _lcd_printString:	
  3273  0B62                     l2811:	
  3274                           ;LCD.c: 128: while((*str) != '\0')
  3275                           
  3276                           ;incstack = 0
  3277                           ; Regs used in _lcd_printString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3278                           
  3279  0B62  1283               	bcf	3,5	;RP0=0, select bank0
  3280  0B63  1303               	bcf	3,6	;RP1=0, select bank0
  3281  0B64  0821               	movf	lcd_printString@str+1,w
  3282  0B65  00FF               	movwf	127
  3283  0B66  0820               	movf	lcd_printString@str,w
  3284  0B67  0084               	movwf	4
  3285  0B68  120A  118A  2100  120A  158A  	fcall	stringtab
  3286  0B6D  3A00               	xorlw	0
  3287  0B6E  1903               	btfsc	3,2
  3288  0B6F  0008               	return
  3289                           
  3290                           ;LCD.c: 129: {
  3291                           ;LCD.c: 130: lcd_Print_char(*str);
  3292  0B70  1283               	bcf	3,5	;RP0=0, select bank0
  3293  0B71  1303               	bcf	3,6	;RP1=0, select bank0
  3294  0B72  0821               	movf	lcd_printString@str+1,w
  3295  0B73  00FF               	movwf	127
  3296  0B74  0820               	movf	lcd_printString@str,w
  3297  0B75  0084               	movwf	4
  3298  0B76  120A  118A  2100  120A  158A  	fcall	stringtab
  3299  0B7B  120A  158A  23B0  120A  158A  	fcall	_lcd_Print_char
  3300                           
  3301                           ;LCD.c: 131: str++;
  3302  0B80  3001               	movlw	1
  3303  0B81  1283               	bcf	3,5	;RP0=0, select bank0
  3304  0B82  1303               	bcf	3,6	;RP1=0, select bank0
  3305  0B83  07A0               	addwf	lcd_printString@str,f
  3306  0B84  1803               	skipnc
  3307  0B85  0AA1               	incf	lcd_printString@str+1,f
  3308  0B86  2B62               	goto	l2811
  3309  0B87                     __end_of_lcd_printString:	
  3310                           
  3311                           	psect	text6
  3312  0BB0                     __ptext6:	
  3313 ;; *************** function _lcd_Print_char *****************
  3314 ;; Defined at:
  3315 ;;		line 109 in file "LCD.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;  data            1    wreg     unsigned char 
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;  data            1    6[COMMON] unsigned char 
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  1    wreg      void 
  3322 ;; Registers used:
  3323 ;;		wreg, status,2, status,0, pclath, cstack
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3329 ;;      Params:         0       0       0       0       0
  3330 ;;      Locals:         1       0       0       0       0
  3331 ;;      Temps:          1       0       0       0       0
  3332 ;;      Totals:         2       0       0       0       0
  3333 ;;Total ram usage:        2 bytes
  3334 ;; Hardware stack levels used:    1
  3335 ;; Hardware stack levels required when called:    3
  3336 ;; This function calls:
  3337 ;;		_Send_Data
  3338 ;; This function is called by:
  3339 ;;		_lcd_printString
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           
  3344                           ;psect for function _lcd_Print_char
  3345  0BB0                     _lcd_Print_char:	
  3346                           
  3347                           ;incstack = 0
  3348                           ; Regs used in _lcd_Print_char: [wreg+status,2+status,0+pclath+cstack]
  3349                           ;lcd_Print_char@data stored from wreg
  3350  0BB0  00F6               	movwf	lcd_Print_char@data
  3351                           
  3352                           ;LCD.c: 111: (PORTBbits.RB0=1);
  3353  0BB1  1283               	bcf	3,5	;RP0=0, select bank0
  3354  0BB2  1303               	bcf	3,6	;RP1=0, select bank0
  3355  0BB3  1406               	bsf	6,0	;volatile
  3356                           
  3357                           ;LCD.c: 112: Send_Data(data >> 4);
  3358  0BB4  0876               	movf	lcd_Print_char@data,w
  3359  0BB5  00F5               	movwf	??_lcd_Print_char
  3360  0BB6  3004               	movlw	4
  3361  0BB7                     u3015:	
  3362  0BB7  1003               	clrc
  3363  0BB8  0CF5               	rrf	??_lcd_Print_char,f
  3364  0BB9  3EFF               	addlw	-1
  3365  0BBA  1D03               	skipz
  3366  0BBB  2BB7               	goto	u3015
  3367  0BBC  0875               	movf	??_lcd_Print_char,w
  3368  0BBD  120A  118A  20E6  120A  158A  	fcall	_Send_Data
  3369                           
  3370                           ;LCD.c: 113: (PORTBbits.RB2=1);
  3371  0BC2  1283               	bcf	3,5	;RP0=0, select bank0
  3372  0BC3  1303               	bcf	3,6	;RP1=0, select bank0
  3373  0BC4  1506               	bsf	6,2	;volatile
  3374                           
  3375                           ;LCD.c: 114: (PORTBbits.RB2=0);
  3376  0BC5  1106               	bcf	6,2	;volatile
  3377                           
  3378                           ;LCD.c: 115: Send_Data(data & 0x0F);
  3379  0BC6  0876               	movf	lcd_Print_char@data,w
  3380  0BC7  390F               	andlw	15
  3381  0BC8  120A  118A  20E6  120A  158A  	fcall	_Send_Data
  3382                           
  3383                           ;LCD.c: 116: (PORTBbits.RB2=1);
  3384  0BCD  1283               	bcf	3,5	;RP0=0, select bank0
  3385  0BCE  1303               	bcf	3,6	;RP1=0, select bank0
  3386  0BCF  1506               	bsf	6,2	;volatile
  3387                           
  3388                           ;LCD.c: 117: (PORTBbits.RB2=0);
  3389  0BD0  1106               	bcf	6,2	;volatile
  3390                           
  3391                           ;LCD.c: 118: _delay((unsigned long)((4)*(1000000/4000.0)));
  3392  0BD1  30C7               	movlw	199
  3393  0BD2  00F5               	movwf	??_lcd_Print_char
  3394  0BD3                     u4067:	
  3395  0BD3  2BD4               	nop2
  3396  0BD4  0BF5               	decfsz	??_lcd_Print_char,f
  3397  0BD5  2BD3               	goto	u4067
  3398  0BD6  2BD7               	nop2
  3399  0BD7  2BD8               	nop2
  3400  0BD8  0008               	return
  3401  0BD9                     __end_of_lcd_Print_char:	
  3402                           
  3403                           	psect	text7
  3404  0DDE                     __ptext7:	
  3405 ;; *************** function _lcd_gotoxy *****************
  3406 ;; Defined at:
  3407 ;;		line 138 in file "LCD.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;  x               1    wreg     unsigned char 
  3410 ;;  y               1    0[BANK0 ] unsigned char 
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;  x               1    2[BANK0 ] unsigned char 
  3413 ;;  temp            1    3[BANK0 ] unsigned char 
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  1    wreg      void 
  3416 ;; Registers used:
  3417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3423 ;;      Params:         0       1       0       0       0
  3424 ;;      Locals:         0       2       0       0       0
  3425 ;;      Temps:          0       1       0       0       0
  3426 ;;      Totals:         0       4       0       0       0
  3427 ;;Total ram usage:        4 bytes
  3428 ;; Hardware stack levels used:    1
  3429 ;; Hardware stack levels required when called:    4
  3430 ;; This function calls:
  3431 ;;		_Send_command
  3432 ;; This function is called by:
  3433 ;;		_lcd_printStringXY
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           
  3438                           ;psect for function _lcd_gotoxy
  3439  0DDE                     _lcd_gotoxy:	
  3440                           
  3441                           ;incstack = 0
  3442                           ; Regs used in _lcd_gotoxy: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3443                           ;lcd_gotoxy@x stored from wreg
  3444  0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  3445  0DDF  1303               	bcf	3,6	;RP1=0, select bank0
  3446  0DE0  00A2               	movwf	lcd_gotoxy@x
  3447                           
  3448                           ;LCD.c: 140: if(x > 39) x = 39;
  3449  0DE1  3028               	movlw	40
  3450  0DE2  0222               	subwf	lcd_gotoxy@x,w
  3451  0DE3  1C03               	skipc
  3452  0DE4  2DE9               	goto	l2819
  3453  0DE5  3027               	movlw	39
  3454  0DE6  00A1               	movwf	??_lcd_gotoxy
  3455  0DE7  0821               	movf	??_lcd_gotoxy,w
  3456  0DE8  00A2               	movwf	lcd_gotoxy@x
  3457  0DE9                     l2819:	
  3458                           ;LCD.c: 141: if(x < 0) x = 0;
  3459                           
  3460                           
  3461                           ;LCD.c: 142: if(y > 3) y = 3;
  3462  0DE9  3004               	movlw	4
  3463  0DEA  0220               	subwf	lcd_gotoxy@y,w
  3464  0DEB  1C03               	skipc
  3465  0DEC  2DF1               	goto	l392
  3466  0DED  3003               	movlw	3
  3467  0DEE  00A1               	movwf	??_lcd_gotoxy
  3468  0DEF  0821               	movf	??_lcd_gotoxy,w
  3469  0DF0  00A0               	movwf	lcd_gotoxy@y
  3470  0DF1                     l392:	
  3471                           ;LCD.c: 143: if(y < 0) y = 0;
  3472                           
  3473                           
  3474                           ;LCD.c: 145: char temp = 0x00;
  3475  0DF1  01A3               	clrf	lcd_gotoxy@temp
  3476                           
  3477                           ;LCD.c: 147: (PORTBbits.RB0=0);
  3478  0DF2  1006               	bcf	6,0	;volatile
  3479                           
  3480                           ;LCD.c: 149: switch (y)
  3481  0DF3  2E66               	goto	l2853
  3482  0DF4                     l2827:	
  3483                           ;LCD.c: 150: {
  3484                           ;LCD.c: 151: case 0:
  3485                           
  3486                           
  3487                           ;LCD.c: 152: {
  3488                           ;LCD.c: 153: temp |= (0x80 + x);
  3489  0DF4  0822               	movf	lcd_gotoxy@x,w
  3490  0DF5  3E80               	addlw	128
  3491  0DF6  00A1               	movwf	??_lcd_gotoxy
  3492  0DF7  0821               	movf	??_lcd_gotoxy,w
  3493  0DF8  04A3               	iorwf	lcd_gotoxy@temp,f
  3494                           
  3495                           ;LCD.c: 154: Send_command(temp >> 4);
  3496  0DF9  0823               	movf	lcd_gotoxy@temp,w
  3497  0DFA  00A1               	movwf	??_lcd_gotoxy
  3498  0DFB  3004               	movlw	4
  3499  0DFC                     u3515:	
  3500  0DFC  1003               	clrc
  3501  0DFD  0CA1               	rrf	??_lcd_gotoxy,f
  3502  0DFE  3EFF               	addlw	-1
  3503  0DFF  1D03               	skipz
  3504  0E00  2DFC               	goto	u3515
  3505  0E01  0821               	movf	??_lcd_gotoxy,w
  3506  0E02  120A  158A  2248  120A  158A  	fcall	_Send_command
  3507                           
  3508                           ;LCD.c: 155: Send_command(temp & 0x0F);
  3509  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  3510  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  3511  0E09  0823               	movf	lcd_gotoxy@temp,w
  3512  0E0A  390F               	andlw	15
  3513  0E0B  120A  158A  2248   	fcall	_Send_command
  3514                           
  3515                           ;LCD.c: 156: break;
  3516  0E0E  0008               	return
  3517  0E0F                     l2833:	
  3518                           ;LCD.c: 157: }
  3519                           ;LCD.c: 158: case 1:
  3520                           
  3521                           
  3522                           ;LCD.c: 159: {
  3523                           ;LCD.c: 160: temp |= (0xC0 + x);
  3524  0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  3525  0E10  1303               	bcf	3,6	;RP1=0, select bank0
  3526  0E11  0822               	movf	lcd_gotoxy@x,w
  3527  0E12  3EC0               	addlw	192
  3528  0E13  00A1               	movwf	??_lcd_gotoxy
  3529  0E14  0821               	movf	??_lcd_gotoxy,w
  3530  0E15  04A3               	iorwf	lcd_gotoxy@temp,f
  3531                           
  3532                           ;LCD.c: 161: Send_command(temp >> 4);
  3533  0E16  0823               	movf	lcd_gotoxy@temp,w
  3534  0E17  00A1               	movwf	??_lcd_gotoxy
  3535  0E18  3004               	movlw	4
  3536  0E19                     u3525:	
  3537  0E19  1003               	clrc
  3538  0E1A  0CA1               	rrf	??_lcd_gotoxy,f
  3539  0E1B  3EFF               	addlw	-1
  3540  0E1C  1D03               	skipz
  3541  0E1D  2E19               	goto	u3525
  3542  0E1E  0821               	movf	??_lcd_gotoxy,w
  3543  0E1F  120A  158A  2248  120A  158A  	fcall	_Send_command
  3544                           
  3545                           ;LCD.c: 162: Send_command(temp & 0x0F);
  3546  0E24  1283               	bcf	3,5	;RP0=0, select bank0
  3547  0E25  1303               	bcf	3,6	;RP1=0, select bank0
  3548  0E26  0823               	movf	lcd_gotoxy@temp,w
  3549  0E27  390F               	andlw	15
  3550  0E28  120A  158A  2248   	fcall	_Send_command
  3551                           
  3552                           ;LCD.c: 163: break;
  3553  0E2B  0008               	return
  3554  0E2C                     l2839:	
  3555                           ;LCD.c: 164: }
  3556                           ;LCD.c: 165: case 2:
  3557                           
  3558                           
  3559                           ;LCD.c: 166: {
  3560                           ;LCD.c: 167: temp |= (0x94 + x);
  3561  0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  3562  0E2D  1303               	bcf	3,6	;RP1=0, select bank0
  3563  0E2E  0822               	movf	lcd_gotoxy@x,w
  3564  0E2F  3E94               	addlw	148
  3565  0E30  00A1               	movwf	??_lcd_gotoxy
  3566  0E31  0821               	movf	??_lcd_gotoxy,w
  3567  0E32  04A3               	iorwf	lcd_gotoxy@temp,f
  3568                           
  3569                           ;LCD.c: 168: Send_command(temp >> 4);
  3570  0E33  0823               	movf	lcd_gotoxy@temp,w
  3571  0E34  00A1               	movwf	??_lcd_gotoxy
  3572  0E35  3004               	movlw	4
  3573  0E36                     u3535:	
  3574  0E36  1003               	clrc
  3575  0E37  0CA1               	rrf	??_lcd_gotoxy,f
  3576  0E38  3EFF               	addlw	-1
  3577  0E39  1D03               	skipz
  3578  0E3A  2E36               	goto	u3535
  3579  0E3B  0821               	movf	??_lcd_gotoxy,w
  3580  0E3C  120A  158A  2248  120A  158A  	fcall	_Send_command
  3581                           
  3582                           ;LCD.c: 169: Send_command(temp & 0x0F);
  3583  0E41  1283               	bcf	3,5	;RP0=0, select bank0
  3584  0E42  1303               	bcf	3,6	;RP1=0, select bank0
  3585  0E43  0823               	movf	lcd_gotoxy@temp,w
  3586  0E44  390F               	andlw	15
  3587  0E45  120A  158A  2248   	fcall	_Send_command
  3588                           
  3589                           ;LCD.c: 170: break;
  3590  0E48  0008               	return
  3591  0E49                     l2845:	
  3592                           ;LCD.c: 171: }
  3593                           ;LCD.c: 172: case 3:
  3594                           
  3595                           
  3596                           ;LCD.c: 173: {
  3597                           ;LCD.c: 174: temp |= (0xD4 + x);
  3598  0E49  1283               	bcf	3,5	;RP0=0, select bank0
  3599  0E4A  1303               	bcf	3,6	;RP1=0, select bank0
  3600  0E4B  0822               	movf	lcd_gotoxy@x,w
  3601  0E4C  3ED4               	addlw	212
  3602  0E4D  00A1               	movwf	??_lcd_gotoxy
  3603  0E4E  0821               	movf	??_lcd_gotoxy,w
  3604  0E4F  04A3               	iorwf	lcd_gotoxy@temp,f
  3605                           
  3606                           ;LCD.c: 175: Send_command(temp >> 4);
  3607  0E50  0823               	movf	lcd_gotoxy@temp,w
  3608  0E51  00A1               	movwf	??_lcd_gotoxy
  3609  0E52  3004               	movlw	4
  3610  0E53                     u3545:	
  3611  0E53  1003               	clrc
  3612  0E54  0CA1               	rrf	??_lcd_gotoxy,f
  3613  0E55  3EFF               	addlw	-1
  3614  0E56  1D03               	skipz
  3615  0E57  2E53               	goto	u3545
  3616  0E58  0821               	movf	??_lcd_gotoxy,w
  3617  0E59  120A  158A  2248  120A  158A  	fcall	_Send_command
  3618                           
  3619                           ;LCD.c: 176: Send_command(temp & 0x0F);
  3620  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  3621  0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  3622  0E60  0823               	movf	lcd_gotoxy@temp,w
  3623  0E61  390F               	andlw	15
  3624  0E62  120A  158A  2248   	fcall	_Send_command
  3625                           
  3626                           ;LCD.c: 178: }
  3627                           ;LCD.c: 179: }
  3628                           
  3629                           ;LCD.c: 177: break;
  3630  0E65  0008               	return
  3631  0E66                     l2853:	
  3632  0E66  1283               	bcf	3,5	;RP0=0, select bank0
  3633  0E67  1303               	bcf	3,6	;RP1=0, select bank0
  3634  0E68  0820               	movf	lcd_gotoxy@y,w
  3635                           
  3636                           ; Switch size 1, requested type "space"
  3637                           ; Number of cases is 4, Range of values is 0 to 3
  3638                           ; switch strategies available:
  3639                           ; Name         Instructions Cycles
  3640                           ; simple_byte           13     7 (average)
  3641                           ; direct_byte           20     8 (fixed)
  3642                           ; jumptable            260     6 (fixed)
  3643                           ;	Chosen strategy is simple_byte
  3644  0E69  3A00               	xorlw	0	; case 0
  3645  0E6A  1903               	skipnz
  3646  0E6B  2DF4               	goto	l2827
  3647  0E6C  3A01               	xorlw	1	; case 1
  3648  0E6D  1903               	skipnz
  3649  0E6E  2E0F               	goto	l2833
  3650  0E6F  3A03               	xorlw	3	; case 2
  3651  0E70  1903               	skipnz
  3652  0E71  2E2C               	goto	l2839
  3653  0E72  3A01               	xorlw	1	; case 3
  3654  0E73  1903               	skipnz
  3655  0E74  2E49               	goto	l2845
  3656  0E75  2E76               	goto	l399
  3657  0E76                     l399:	
  3658  0E76  0008               	return
  3659  0E77                     __end_of_lcd_gotoxy:	
  3660                           
  3661                           	psect	text8
  3662  0E77                     __ptext8:	
  3663 ;; *************** function _lcd_init *****************
  3664 ;; Defined at:
  3665 ;;		line 70 in file "LCD.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;  lcd             1    wreg     unsigned char 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  lcd             1    2[BANK0 ] unsigned char 
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  1    wreg      void 
  3672 ;; Registers used:
  3673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3679 ;;      Params:         0       0       0       0       0
  3680 ;;      Locals:         0       1       0       0       0
  3681 ;;      Temps:          0       2       0       0       0
  3682 ;;      Totals:         0       3       0       0       0
  3683 ;;Total ram usage:        3 bytes
  3684 ;; Hardware stack levels used:    1
  3685 ;; Hardware stack levels required when called:    4
  3686 ;; This function calls:
  3687 ;;		_Send_command
  3688 ;; This function is called by:
  3689 ;;		_main
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           
  3694                           ;psect for function _lcd_init
  3695  0E77                     _lcd_init:	
  3696                           
  3697                           ;incstack = 0
  3698                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3699                           ;lcd_init@lcd stored from wreg
  3700  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3701  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3702  0E79  00A2               	movwf	lcd_init@lcd
  3703                           
  3704                           ;LCD.c: 72: TRISB=0x00;
  3705  0E7A  1683               	bsf	3,5	;RP0=1, select bank1
  3706  0E7B  1303               	bcf	3,6	;RP1=0, select bank1
  3707  0E7C  0186               	clrf	6	;volatile
  3708                           
  3709                           ;LCD.c: 73: TRISD=0x00;
  3710  0E7D  0188               	clrf	8	;volatile
  3711                           
  3712                           ;LCD.c: 75: switch (lcd)
  3713  0E7E  2E8B               	goto	l2965
  3714  0E7F                     l2955:	
  3715                           ;LCD.c: 76: {
  3716                           ;LCD.c: 77: case 0: lcd = 0x0C; break;
  3717                           
  3718  0E7F  300C               	movlw	12
  3719  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  3720  0E81  2E87               	goto	L3
  3721  0E82                     l2957:	
  3722                           ;LCD.c: 78: case 1: lcd = 0x0D; break;
  3723                           
  3724  0E82  300D               	movlw	13
  3725  0E83  2E87               	goto	L3
  3726  0E84                     l2959:	
  3727                           ;LCD.c: 79: case 2: lcd = 0x0E; break;
  3728                           
  3729  0E84  300E               	movlw	14
  3730  0E85  2E87               	goto	L3
  3731  0E86                     l2961:	
  3732                           ;LCD.c: 80: case 3: lcd = 0x0F; break;
  3733                           
  3734  0E86  300F               	movlw	15
  3735  0E87                     L3:	
  3736  0E87  00A0               	movwf	??_lcd_init
  3737  0E88  0820               	movf	??_lcd_init,w
  3738  0E89  00A2               	movwf	lcd_init@lcd
  3739                           
  3740                           ;LCD.c: 81: }
  3741  0E8A  2E9A               	goto	l2967
  3742  0E8B                     l2965:	
  3743  0E8B  1283               	bcf	3,5	;RP0=0, select bank0
  3744  0E8C  0822               	movf	lcd_init@lcd,w
  3745                           
  3746                           ; Switch size 1, requested type "space"
  3747                           ; Number of cases is 4, Range of values is 0 to 3
  3748                           ; switch strategies available:
  3749                           ; Name         Instructions Cycles
  3750                           ; simple_byte           13     7 (average)
  3751                           ; direct_byte           20     8 (fixed)
  3752                           ; jumptable            260     6 (fixed)
  3753                           ;	Chosen strategy is simple_byte
  3754  0E8D  3A00               	xorlw	0	; case 0
  3755  0E8E  1903               	skipnz
  3756  0E8F  2E7F               	goto	l2955
  3757  0E90  3A01               	xorlw	1	; case 1
  3758  0E91  1903               	skipnz
  3759  0E92  2E82               	goto	l2957
  3760  0E93  3A03               	xorlw	3	; case 2
  3761  0E94  1903               	skipnz
  3762  0E95  2E84               	goto	l2959
  3763  0E96  3A01               	xorlw	1	; case 3
  3764  0E97  1903               	skipnz
  3765  0E98  2E86               	goto	l2961
  3766  0E99  2E9A               	goto	l2967
  3767  0E9A                     l2967:	
  3768                           
  3769                           ;LCD.c: 83: _delay((unsigned long)((20)*(1000000/4000.0)));
  3770  0E9A  3007               	movlw	7
  3771  0E9B  1283               	bcf	3,5	;RP0=0, select bank0
  3772  0E9C  1303               	bcf	3,6	;RP1=0, select bank0
  3773  0E9D  00A1               	movwf	??_lcd_init+1
  3774  0E9E  307C               	movlw	124
  3775  0E9F  00A0               	movwf	??_lcd_init
  3776  0EA0                     u4077:	
  3777  0EA0  0BA0               	decfsz	??_lcd_init,f
  3778  0EA1  2EA0               	goto	u4077
  3779  0EA2  0BA1               	decfsz	??_lcd_init+1,f
  3780  0EA3  2EA0               	goto	u4077
  3781  0EA4  0000               	nop
  3782                           
  3783                           ;LCD.c: 85: Send_command(0x03);
  3784  0EA5  3003               	movlw	3
  3785  0EA6  120A  158A  2248  120A  158A  	fcall	_Send_command
  3786                           
  3787                           ;LCD.c: 86: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3788  0EAB  3002               	movlw	2
  3789  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  3790  0EAD  1303               	bcf	3,6	;RP1=0, select bank0
  3791  0EAE  00A0               	movwf	??_lcd_init
  3792  0EAF                     u4087:	
  3793  0EAF  0BA0               	decfsz	??_lcd_init,f
  3794  0EB0  2EAF               	goto	u4087
  3795  0EB1  0000               	nop
  3796                           
  3797                           ;LCD.c: 87: Send_command(0x03);
  3798  0EB2  3003               	movlw	3
  3799  0EB3  120A  158A  2248  120A  158A  	fcall	_Send_command
  3800                           
  3801                           ;LCD.c: 88: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3802  0EB8  3002               	movlw	2
  3803  0EB9  1283               	bcf	3,5	;RP0=0, select bank0
  3804  0EBA  1303               	bcf	3,6	;RP1=0, select bank0
  3805  0EBB  00A0               	movwf	??_lcd_init
  3806  0EBC                     u4097:	
  3807  0EBC  0BA0               	decfsz	??_lcd_init,f
  3808  0EBD  2EBC               	goto	u4097
  3809  0EBE  0000               	nop
  3810                           
  3811                           ;LCD.c: 89: Send_command(0x03);
  3812  0EBF  3003               	movlw	3
  3813  0EC0  120A  158A  2248  120A  158A  	fcall	_Send_command
  3814                           
  3815                           ;LCD.c: 90: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3816  0EC5  3002               	movlw	2
  3817  0EC6  1283               	bcf	3,5	;RP0=0, select bank0
  3818  0EC7  1303               	bcf	3,6	;RP1=0, select bank0
  3819  0EC8  00A0               	movwf	??_lcd_init
  3820  0EC9                     u4107:	
  3821  0EC9  0BA0               	decfsz	??_lcd_init,f
  3822  0ECA  2EC9               	goto	u4107
  3823  0ECB  0000               	nop
  3824                           
  3825                           ;LCD.c: 91: Send_command(0x02);
  3826  0ECC  3002               	movlw	2
  3827  0ECD  120A  158A  2248  120A  158A  	fcall	_Send_command
  3828                           
  3829                           ;LCD.c: 92: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3830  0ED2  3002               	movlw	2
  3831  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  3832  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  3833  0ED5  00A0               	movwf	??_lcd_init
  3834  0ED6                     u4117:	
  3835  0ED6  0BA0               	decfsz	??_lcd_init,f
  3836  0ED7  2ED6               	goto	u4117
  3837  0ED8  0000               	nop
  3838                           
  3839                           ;LCD.c: 93: Send_command(0x02);
  3840  0ED9  3002               	movlw	2
  3841  0EDA  120A  158A  2248  120A  158A  	fcall	_Send_command
  3842                           
  3843                           ;LCD.c: 94: Send_command(0x08);
  3844  0EDF  3008               	movlw	8
  3845  0EE0  120A  158A  2248  120A  158A  	fcall	_Send_command
  3846                           
  3847                           ;LCD.c: 95: Send_command(0x00);
  3848  0EE5  3000               	movlw	0
  3849  0EE6  120A  158A  2248  120A  158A  	fcall	_Send_command
  3850                           
  3851                           ;LCD.c: 96: Send_command(0x08);
  3852  0EEB  3008               	movlw	8
  3853  0EEC  120A  158A  2248  120A  158A  	fcall	_Send_command
  3854                           
  3855                           ;LCD.c: 97: Send_command(0x00);
  3856  0EF1  3000               	movlw	0
  3857  0EF2  120A  158A  2248  120A  158A  	fcall	_Send_command
  3858                           
  3859                           ;LCD.c: 98: Send_command(0x01);
  3860  0EF7  3001               	movlw	1
  3861  0EF8  120A  158A  2248  120A  158A  	fcall	_Send_command
  3862                           
  3863                           ;LCD.c: 99: Send_command(0x00);
  3864  0EFD  3000               	movlw	0
  3865  0EFE  120A  158A  2248  120A  158A  	fcall	_Send_command
  3866                           
  3867                           ;LCD.c: 100: Send_command(0x06);
  3868  0F03  3006               	movlw	6
  3869  0F04  120A  158A  2248  120A  158A  	fcall	_Send_command
  3870                           
  3871                           ;LCD.c: 101: Send_command(0x00);
  3872  0F09  3000               	movlw	0
  3873  0F0A  120A  158A  2248  120A  158A  	fcall	_Send_command
  3874                           
  3875                           ;LCD.c: 102: Send_command(lcd);
  3876  0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  3877  0F10  1303               	bcf	3,6	;RP1=0, select bank0
  3878  0F11  0822               	movf	lcd_init@lcd,w
  3879  0F12  120A  158A  2248   	fcall	_Send_command
  3880  0F15  0008               	return
  3881  0F16                     __end_of_lcd_init:	
  3882                           
  3883                           	psect	text9
  3884  0A48                     __ptext9:	
  3885 ;; *************** function _Send_command *****************
  3886 ;; Defined at:
  3887 ;;		line 57 in file "LCD.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;  com             1    wreg     unsigned char 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;  com             1    6[COMMON] unsigned char 
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  1    wreg      void 
  3894 ;; Registers used:
  3895 ;;		wreg, status,2, status,0, pclath, cstack
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3901 ;;      Params:         0       0       0       0       0
  3902 ;;      Locals:         1       0       0       0       0
  3903 ;;      Temps:          1       0       0       0       0
  3904 ;;      Totals:         2       0       0       0       0
  3905 ;;Total ram usage:        2 bytes
  3906 ;; Hardware stack levels used:    1
  3907 ;; Hardware stack levels required when called:    3
  3908 ;; This function calls:
  3909 ;;		_Send_Data
  3910 ;; This function is called by:
  3911 ;;		_lcd_init
  3912 ;;		_lcd_gotoxy
  3913 ;;		_lcd_clear
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           
  3918                           ;psect for function _Send_command
  3919  0A48                     _Send_command:	
  3920                           
  3921                           ;incstack = 0
  3922                           ; Regs used in _Send_command: [wreg+status,2+status,0+pclath+cstack]
  3923                           ;Send_command@com stored from wreg
  3924  0A48  00F6               	movwf	Send_command@com
  3925                           
  3926                           ;LCD.c: 59: (PORTBbits.RB0=0);
  3927  0A49  1283               	bcf	3,5	;RP0=0, select bank0
  3928  0A4A  1303               	bcf	3,6	;RP1=0, select bank0
  3929  0A4B  1006               	bcf	6,0	;volatile
  3930                           
  3931                           ;LCD.c: 60: Send_Data(com);
  3932  0A4C  0876               	movf	Send_command@com,w
  3933  0A4D  120A  118A  20E6  120A  158A  	fcall	_Send_Data
  3934                           
  3935                           ;LCD.c: 61: (PORTBbits.RB2=1);
  3936  0A52  1283               	bcf	3,5	;RP0=0, select bank0
  3937  0A53  1303               	bcf	3,6	;RP1=0, select bank0
  3938  0A54  1506               	bsf	6,2	;volatile
  3939                           
  3940                           ;LCD.c: 62: (PORTBbits.RB2=0);
  3941  0A55  1106               	bcf	6,2	;volatile
  3942                           
  3943                           ;LCD.c: 63: _delay((unsigned long)((4)*(1000000/4000.0)));
  3944  0A56  30C7               	movlw	199
  3945  0A57  00F5               	movwf	??_Send_command
  3946  0A58                     u4127:	
  3947  0A58  2A59               	nop2
  3948  0A59  0BF5               	decfsz	??_Send_command,f
  3949  0A5A  2A58               	goto	u4127
  3950  0A5B  2A5C               	nop2
  3951  0A5C  2A5D               	nop2
  3952  0A5D  0008               	return
  3953  0A5E                     __end_of_Send_command:	
  3954                           
  3955                           	psect	text10
  3956  00E6                     __ptext10:	
  3957 ;; *************** function _Send_Data *****************
  3958 ;; Defined at:
  3959 ;;		line 9 in file "LCD.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;  data            1    wreg     unsigned char 
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;  data            1    4[COMMON] unsigned char 
  3964 ;; Return value:  Size  Location     Type
  3965 ;;                  1    wreg      void 
  3966 ;; Registers used:
  3967 ;;		wreg
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3973 ;;      Params:         0       0       0       0       0
  3974 ;;      Locals:         1       0       0       0       0
  3975 ;;      Temps:          0       0       0       0       0
  3976 ;;      Totals:         1       0       0       0       0
  3977 ;;Total ram usage:        1 bytes
  3978 ;; Hardware stack levels used:    1
  3979 ;; Hardware stack levels required when called:    2
  3980 ;; This function calls:
  3981 ;;		Nothing
  3982 ;; This function is called by:
  3983 ;;		_Send_command
  3984 ;;		_lcd_Print_char
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988                           
  3989                           ;psect for function _Send_Data
  3990  00E6                     _Send_Data:	
  3991                           
  3992                           ;incstack = 0
  3993                           ; Regs used in _Send_Data: [wreg]
  3994                           ;Send_Data@data stored from wreg
  3995  00E6  00F4               	movwf	Send_Data@data
  3996                           
  3997                           ;LCD.c: 11: if(data&0x01)
  3998  00E7  1C74               	btfss	Send_Data@data,0
  3999  00E8  28ED               	goto	l357
  4000                           
  4001                           ;LCD.c: 12: {
  4002                           ;LCD.c: 13: PORTDbits.RD4=1;
  4003  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  4004  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  4005  00EB  1608               	bsf	8,4	;volatile
  4006                           
  4007                           ;LCD.c: 15: }
  4008  00EC  28F0               	goto	l358
  4009  00ED                     l357:	
  4010                           
  4011                           ;LCD.c: 16: else
  4012                           ;LCD.c: 17: {
  4013                           ;LCD.c: 18: PORTDbits.RD4=0;
  4014  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  4015  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  4016  00EF  1208               	bcf	8,4	;volatile
  4017  00F0                     l358:	
  4018                           
  4019                           ;LCD.c: 19: }
  4020                           ;LCD.c: 21: if(data&0x02)
  4021  00F0  1CF4               	btfss	Send_Data@data,1
  4022  00F1  28F4               	goto	l359
  4023                           
  4024                           ;LCD.c: 22: {
  4025                           ;LCD.c: 23: PORTDbits.RD5=1;
  4026  00F2  1688               	bsf	8,5	;volatile
  4027                           
  4028                           ;LCD.c: 25: }
  4029  00F3  28F5               	goto	l360
  4030  00F4                     l359:	
  4031                           
  4032                           ;LCD.c: 26: else
  4033                           ;LCD.c: 27: {
  4034                           ;LCD.c: 28: PORTDbits.RD5=0;
  4035  00F4  1288               	bcf	8,5	;volatile
  4036  00F5                     l360:	
  4037                           
  4038                           ;LCD.c: 29: }
  4039                           ;LCD.c: 31: if(data&0x04)
  4040  00F5  1D74               	btfss	Send_Data@data,2
  4041  00F6  28F9               	goto	l361
  4042                           
  4043                           ;LCD.c: 32: {
  4044                           ;LCD.c: 33: PORTDbits.RD6=1;
  4045  00F7  1708               	bsf	8,6	;volatile
  4046                           
  4047                           ;LCD.c: 35: }
  4048  00F8  28FA               	goto	l362
  4049  00F9                     l361:	
  4050                           
  4051                           ;LCD.c: 36: else
  4052                           ;LCD.c: 37: {
  4053                           ;LCD.c: 38: PORTDbits.RD6=0;
  4054  00F9  1308               	bcf	8,6	;volatile
  4055  00FA                     l362:	
  4056                           
  4057                           ;LCD.c: 39: }
  4058                           ;LCD.c: 41: if(data&0x08)
  4059  00FA  1DF4               	btfss	Send_Data@data,3
  4060  00FB  28FE               	goto	l363
  4061                           
  4062                           ;LCD.c: 42: {
  4063                           ;LCD.c: 43: PORTDbits.RD7=1;
  4064  00FC  1788               	bsf	8,7	;volatile
  4065                           
  4066                           ;LCD.c: 45: }
  4067  00FD  0008               	return
  4068  00FE                     l363:	
  4069                           
  4070                           ;LCD.c: 46: else
  4071                           ;LCD.c: 47: {
  4072                           ;LCD.c: 48: PORTDbits.RD7=0;
  4073  00FE  1388               	bcf	8,7	;volatile
  4074  00FF  0008               	return
  4075  0100                     __end_of_Send_Data:	
  4076                           
  4077                           	psect	text11
  4078  0AD5                     __ptext11:	
  4079 ;; *************** function _check_buttonSelect *****************
  4080 ;; Defined at:
  4081 ;;		line 141 in file "main.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;  flag            1    wreg     unsigned char 
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;  flag            1    0[BANK0 ] unsigned char 
  4086 ;;  butcount        2    1[BANK0 ] unsigned int 
  4087 ;;  result          1    3[BANK0 ] unsigned char 
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  1    wreg      unsigned char 
  4090 ;; Registers used:
  4091 ;;		wreg, status,2, status,0
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4097 ;;      Params:         0       0       0       0       0
  4098 ;;      Locals:         0       4       0       0       0
  4099 ;;      Temps:          0       0       0       0       0
  4100 ;;      Totals:         0       4       0       0       0
  4101 ;;Total ram usage:        4 bytes
  4102 ;; Hardware stack levels used:    1
  4103 ;; Hardware stack levels required when called:    2
  4104 ;; This function calls:
  4105 ;;		Nothing
  4106 ;; This function is called by:
  4107 ;;		_main
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           
  4112                           ;psect for function _check_buttonSelect
  4113  0AD5                     _check_buttonSelect:	
  4114                           
  4115                           ;incstack = 0
  4116                           ; Regs used in _check_buttonSelect: [wreg+status,2+status,0]
  4117                           ;check_buttonSelect@flag stored from wreg
  4118  0AD5  1283               	bcf	3,5	;RP0=0, select bank0
  4119  0AD6  1303               	bcf	3,6	;RP1=0, select bank0
  4120  0AD7  00A0               	movwf	check_buttonSelect@flag
  4121                           
  4122                           ;main.c: 143: uint8_t result=0;
  4123  0AD8  01A3               	clrf	check_buttonSelect@result
  4124                           
  4125                           ;main.c: 144: uint16_t butcount=0;
  4126  0AD9  01A1               	clrf	check_buttonSelect@butcount
  4127  0ADA  01A2               	clrf	check_buttonSelect@butcount+1
  4128  0ADB                     l2935:	
  4129                           ;main.c: 147: while(flag)
  4130                           
  4131  0ADB  0820               	movf	check_buttonSelect@flag,w
  4132  0ADC  1903               	btfsc	3,2
  4133  0ADD  2AEE               	goto	l2937
  4134                           
  4135                           ;main.c: 148: {
  4136                           ;main.c: 150: if(butcount<5000)
  4137  0ADE  3013               	movlw	19
  4138  0ADF  0222               	subwf	check_buttonSelect@butcount+1,w
  4139  0AE0  3088               	movlw	136
  4140  0AE1  1903               	skipnz
  4141  0AE2  0221               	subwf	check_buttonSelect@butcount,w
  4142  0AE3  1803               	skipnc
  4143  0AE4  2AEC               	goto	l87
  4144                           
  4145                           ;main.c: 151: {
  4146                           ;main.c: 152: butcount++;
  4147  0AE5  3001               	movlw	1
  4148  0AE6  07A1               	addwf	check_buttonSelect@butcount,f
  4149  0AE7  1803               	skipnc
  4150  0AE8  0AA2               	incf	check_buttonSelect@butcount+1,f
  4151  0AE9  3000               	movlw	0
  4152  0AEA  07A2               	addwf	check_buttonSelect@butcount+1,f
  4153                           
  4154                           ;main.c: 153: }
  4155  0AEB  2ADB               	goto	l2935
  4156  0AEC                     l87:	
  4157                           
  4158                           ;main.c: 154: else
  4159                           ;main.c: 155: {
  4160                           ;main.c: 156: result=1;
  4161  0AEC  01A3               	clrf	check_buttonSelect@result
  4162  0AED  0AA3               	incf	check_buttonSelect@result,f
  4163  0AEE                     l2937:	
  4164                           ;main.c: 157: break;
  4165                           
  4166                           
  4167                           ;main.c: 158: }
  4168                           ;main.c: 159: }
  4169                           ;main.c: 162: return result;
  4170  0AEE  0823               	movf	check_buttonSelect@result,w
  4171  0AEF  0008               	return
  4172  0AF0                     __end_of_check_buttonSelect:	
  4173                           
  4174                           	psect	text12
  4175  0ABC                     __ptext12:	
  4176 ;; *************** function _check_button *****************
  4177 ;; Defined at:
  4178 ;;		line 109 in file "main.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;		None
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;  butcount        2    4[COMMON] unsigned int 
  4183 ;;  result          1    6[COMMON] unsigned char 
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  1    wreg      unsigned char 
  4186 ;; Registers used:
  4187 ;;		wreg, status,2
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4193 ;;      Params:         0       0       0       0       0
  4194 ;;      Locals:         3       0       0       0       0
  4195 ;;      Temps:          0       0       0       0       0
  4196 ;;      Totals:         3       0       0       0       0
  4197 ;;Total ram usage:        3 bytes
  4198 ;; Hardware stack levels used:    1
  4199 ;; Hardware stack levels required when called:    2
  4200 ;; This function calls:
  4201 ;;		Nothing
  4202 ;; This function is called by:
  4203 ;;		_main
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           
  4208                           ;psect for function _check_button
  4209  0ABC                     _check_button:	
  4210                           
  4211                           ;main.c: 111: uint8_t result=0;
  4212                           
  4213                           ;incstack = 0
  4214                           ; Regs used in _check_button: [wreg+status,2]
  4215  0ABC  01F6               	clrf	check_button@result
  4216                           
  4217                           ;main.c: 112: uint16_t butcount=0;
  4218  0ABD  01F4               	clrf	check_button@butcount
  4219  0ABE  01F5               	clrf	check_button@butcount+1
  4220  0ABF                     l77:	
  4221                           ;main.c: 114: while(RC5)
  4222                           
  4223  0ABF  1283               	bcf	3,5	;RP0=0, select bank0
  4224  0AC0  1303               	bcf	3,6	;RP1=0, select bank0
  4225  0AC1  1E87               	btfss	7,5	;volatile
  4226  0AC2  2AD3               	goto	l2925
  4227                           
  4228                           ;main.c: 115: {
  4229                           ;main.c: 117: if(butcount<5000)
  4230  0AC3  3013               	movlw	19
  4231  0AC4  0275               	subwf	check_button@butcount+1,w
  4232  0AC5  3088               	movlw	136
  4233  0AC6  1903               	skipnz
  4234  0AC7  0274               	subwf	check_button@butcount,w
  4235  0AC8  1803               	skipnc
  4236  0AC9  2AD1               	goto	l79
  4237                           
  4238                           ;main.c: 118: {
  4239                           ;main.c: 119: butcount++;
  4240  0ACA  3001               	movlw	1
  4241  0ACB  07F4               	addwf	check_button@butcount,f
  4242  0ACC  1803               	skipnc
  4243  0ACD  0AF5               	incf	check_button@butcount+1,f
  4244  0ACE  3000               	movlw	0
  4245  0ACF  07F5               	addwf	check_button@butcount+1,f
  4246                           
  4247                           ;main.c: 120: }
  4248  0AD0  2ABF               	goto	l77
  4249  0AD1                     l79:	
  4250                           
  4251                           ;main.c: 121: else
  4252                           ;main.c: 122: {
  4253                           ;main.c: 123: result=1;
  4254  0AD1  01F6               	clrf	check_button@result
  4255  0AD2  0AF6               	incf	check_button@result,f
  4256  0AD3                     l2925:	
  4257                           ;main.c: 124: break;
  4258                           
  4259                           
  4260                           ;main.c: 125: }
  4261                           ;main.c: 126: }
  4262                           ;main.c: 128: return result;
  4263  0AD3  0876               	movf	check_button@result,w
  4264  0AD4  0008               	return
  4265  0AD5                     __end_of_check_button:	
  4266                           
  4267                           	psect	text13
  4268  0A32                     __ptext13:	
  4269 ;; *************** function _Timer1_init *****************
  4270 ;; Defined at:
  4271 ;;		line 82 in file "PWM.c"
  4272 ;; Parameters:    Size  Location     Type
  4273 ;;		None
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;		None
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  1    wreg      void 
  4278 ;; Registers used:
  4279 ;;		status,2
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4285 ;;      Params:         0       0       0       0       0
  4286 ;;      Locals:         0       0       0       0       0
  4287 ;;      Temps:          0       0       0       0       0
  4288 ;;      Totals:         0       0       0       0       0
  4289 ;;Total ram usage:        0 bytes
  4290 ;; Hardware stack levels used:    1
  4291 ;; Hardware stack levels required when called:    2
  4292 ;; This function calls:
  4293 ;;		Nothing
  4294 ;; This function is called by:
  4295 ;;		_main
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           
  4300                           ;psect for function _Timer1_init
  4301  0A32                     _Timer1_init:	
  4302                           
  4303                           ;PWM.c: 107: T1CKPS0=1;
  4304                           
  4305                           ;incstack = 0
  4306                           ; Regs used in _Timer1_init: [status,2]
  4307  0A32  1283               	bcf	3,5	;RP0=0, select bank0
  4308  0A33  1303               	bcf	3,6	;RP1=0, select bank0
  4309  0A34  1610               	bsf	16,4	;volatile
  4310                           
  4311                           ;PWM.c: 108: T1CKPS1=1;
  4312  0A35  1690               	bsf	16,5	;volatile
  4313                           
  4314                           ;PWM.c: 111: T1OSCEN=1;
  4315  0A36  1590               	bsf	16,3	;volatile
  4316                           
  4317                           ;PWM.c: 112: TMR1CS=0;
  4318  0A37  1090               	bcf	16,1	;volatile
  4319                           
  4320                           ;PWM.c: 114: GIE=1;
  4321  0A38  178B               	bsf	11,7	;volatile
  4322                           
  4323                           ;PWM.c: 115: TMR1IE=1;
  4324  0A39  1683               	bsf	3,5	;RP0=1, select bank1
  4325  0A3A  1303               	bcf	3,6	;RP1=0, select bank1
  4326  0A3B  140C               	bsf	12,0	;volatile
  4327                           
  4328                           ;PWM.c: 116: PEIE=1;
  4329  0A3C  170B               	bsf	11,6	;volatile
  4330                           
  4331                           ;PWM.c: 117: TMR1=0x0000;
  4332  0A3D  1283               	bcf	3,5	;RP0=0, select bank0
  4333  0A3E  1303               	bcf	3,6	;RP1=0, select bank0
  4334  0A3F  018E               	clrf	14	;volatile
  4335  0A40  018F               	clrf	15	;volatile
  4336                           
  4337                           ;PWM.c: 119: TRISC2=0;
  4338  0A41  1683               	bsf	3,5	;RP0=1, select bank1
  4339  0A42  1303               	bcf	3,6	;RP1=0, select bank1
  4340  0A43  1107               	bcf	7,2	;volatile
  4341                           
  4342                           ;PWM.c: 120: PORTCbits.RC2=0;
  4343  0A44  1283               	bcf	3,5	;RP0=0, select bank0
  4344  0A45  1303               	bcf	3,6	;RP1=0, select bank0
  4345  0A46  1107               	bcf	7,2	;volatile
  4346  0A47  0008               	return
  4347  0A48                     __end_of_Timer1_init:	
  4348                           
  4349                           	psect	text14
  4350  0A01                     __ptext14:	
  4351 ;; *************** function _Stop_Timer *****************
  4352 ;; Defined at:
  4353 ;;		line 136 in file "PWM.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;		None
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;		None
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  1    wreg      void 
  4360 ;; Registers used:
  4361 ;;		None
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4367 ;;      Params:         0       0       0       0       0
  4368 ;;      Locals:         0       0       0       0       0
  4369 ;;      Temps:          0       0       0       0       0
  4370 ;;      Totals:         0       0       0       0       0
  4371 ;;Total ram usage:        0 bytes
  4372 ;; Hardware stack levels used:    1
  4373 ;; Hardware stack levels required when called:    2
  4374 ;; This function calls:
  4375 ;;		Nothing
  4376 ;; This function is called by:
  4377 ;;		_main
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           
  4382                           ;psect for function _Stop_Timer
  4383  0A01                     _Stop_Timer:	
  4384                           
  4385                           ;PWM.c: 138: TMR1ON=0;
  4386                           
  4387                           ;incstack = 0
  4388                           ; Regs used in _Stop_Timer: []
  4389  0A01  1283               	bcf	3,5	;RP0=0, select bank0
  4390  0A02  1303               	bcf	3,6	;RP1=0, select bank0
  4391  0A03  1010               	bcf	16,0	;volatile
  4392  0A04  0008               	return
  4393  0A05                     __end_of_Stop_Timer:	
  4394                           
  4395                           	psect	text15
  4396  09FD                     __ptext15:	
  4397 ;; *************** function _Start_Timer *****************
  4398 ;; Defined at:
  4399 ;;		line 128 in file "PWM.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;		None
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;		None
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  1    wreg      void 
  4406 ;; Registers used:
  4407 ;;		None
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4413 ;;      Params:         0       0       0       0       0
  4414 ;;      Locals:         0       0       0       0       0
  4415 ;;      Temps:          0       0       0       0       0
  4416 ;;      Totals:         0       0       0       0       0
  4417 ;;Total ram usage:        0 bytes
  4418 ;; Hardware stack levels used:    1
  4419 ;; Hardware stack levels required when called:    2
  4420 ;; This function calls:
  4421 ;;		Nothing
  4422 ;; This function is called by:
  4423 ;;		_main
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           
  4428                           ;psect for function _Start_Timer
  4429  09FD                     _Start_Timer:	
  4430                           
  4431                           ;PWM.c: 130: TMR1ON=1;
  4432                           
  4433                           ;incstack = 0
  4434                           ; Regs used in _Start_Timer: []
  4435  09FD  1283               	bcf	3,5	;RP0=0, select bank0
  4436  09FE  1303               	bcf	3,6	;RP1=0, select bank0
  4437  09FF  1410               	bsf	16,0	;volatile
  4438  0A00  0008               	return
  4439  0A01                     __end_of_Start_Timer:	
  4440                           
  4441                           	psect	text16
  4442  0B28                     __ptext16:	
  4443 ;; *************** function _ReadValue *****************
  4444 ;; Defined at:
  4445 ;;		line 157 in file "PWM.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;		None
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;		None
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  2   60[BANK0 ] unsigned int 
  4452 ;; Registers used:
  4453 ;;		wreg, status,2, status,0, pclath, cstack
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4459 ;;      Params:         0       2       0       0       0
  4460 ;;      Locals:         0       0       0       0       0
  4461 ;;      Temps:          0       0       0       0       0
  4462 ;;      Totals:         0       2       0       0       0
  4463 ;;Total ram usage:        2 bytes
  4464 ;; Hardware stack levels used:    1
  4465 ;; Hardware stack levels required when called:    5
  4466 ;; This function calls:
  4467 ;;		_ADC_Read
  4468 ;;		_Set_Freq_Value
  4469 ;; This function is called by:
  4470 ;;		_main
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474                           
  4475                           ;psect for function _ReadValue
  4476  0B28                     _ReadValue:	
  4477                           
  4478                           ;PWM.c: 159: Set_Freq_Value(ADC_Read(0));
  4479                           
  4480                           ;incstack = 0
  4481                           ; Regs used in _ReadValue: [wreg+status,2+status,0+pclath+cstack]
  4482  0B28  3000               	movlw	0
  4483  0B29  120A  158A  23D9  120A  158A  	fcall	_ADC_Read
  4484  0B2E  0875               	movf	?_ADC_Read+1,w
  4485  0B2F  1283               	bcf	3,5	;RP0=0, select bank0
  4486  0B30  1303               	bcf	3,6	;RP1=0, select bank0
  4487  0B31  00D8               	movwf	Set_Freq_Value@value+1
  4488  0B32  0874               	movf	?_ADC_Read,w
  4489  0B33  00D7               	movwf	Set_Freq_Value@value
  4490  0B34  120A  158A  2479  120A  158A  	fcall	_Set_Freq_Value
  4491                           
  4492                           ;PWM.c: 160: return ADC_Read(0);
  4493  0B39  3000               	movlw	0
  4494  0B3A  120A  158A  23D9   	fcall	_ADC_Read
  4495  0B3D  0875               	movf	?_ADC_Read+1,w
  4496  0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  4497  0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  4498  0B40  00DD               	movwf	?_ReadValue+1
  4499  0B41  0874               	movf	?_ADC_Read,w
  4500  0B42  00DC               	movwf	?_ReadValue
  4501  0B43  0008               	return
  4502  0B44                     __end_of_ReadValue:	
  4503                           
  4504                           	psect	text17
  4505  0C79                     __ptext17:	
  4506 ;; *************** function _Set_Freq_Value *****************
  4507 ;; Defined at:
  4508 ;;		line 146 in file "PWM.c"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;  value           2   55[BANK0 ] unsigned int 
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;  val             3   57[BANK0 ] float 
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  1    wreg      void 
  4515 ;; Registers used:
  4516 ;;		wreg, status,2, status,0, pclath, cstack
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4522 ;;      Params:         0       2       0       0       0
  4523 ;;      Locals:         0       3       0       0       0
  4524 ;;      Temps:          0       0       0       0       0
  4525 ;;      Totals:         0       5       0       0       0
  4526 ;;Total ram usage:        5 bytes
  4527 ;; Hardware stack levels used:    1
  4528 ;; Hardware stack levels required when called:    4
  4529 ;; This function calls:
  4530 ;;		___ftadd
  4531 ;;		___ftdiv
  4532 ;;		___ftneg
  4533 ;;		___fttol
  4534 ;;		___lwtoft
  4535 ;; This function is called by:
  4536 ;;		_ReadValue
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           
  4541                           ;psect for function _Set_Freq_Value
  4542  0C79                     _Set_Freq_Value:	
  4543                           
  4544                           ;PWM.c: 148: float val;
  4545                           ;PWM.c: 149: val=1/(float)value;
  4546                           
  4547                           ;incstack = 0
  4548                           ; Regs used in _Set_Freq_Value: [wreg+status,2+status,0+pclath+cstack]
  4549  0C79  1283               	bcf	3,5	;RP0=0, select bank0
  4550  0C7A  1303               	bcf	3,6	;RP1=0, select bank0
  4551  0C7B  0858               	movf	Set_Freq_Value@value+1,w
  4552  0C7C  00A6               	movwf	___lwtoft@c+1
  4553  0C7D  0857               	movf	Set_Freq_Value@value,w
  4554  0C7E  00A5               	movwf	___lwtoft@c
  4555  0C7F  120A  158A  228B  120A  158A  	fcall	___lwtoft
  4556  0C84  1283               	bcf	3,5	;RP0=0, select bank0
  4557  0C85  1303               	bcf	3,6	;RP1=0, select bank0
  4558  0C86  0825               	movf	?___lwtoft,w
  4559  0C87  00A9               	movwf	___ftdiv@f2
  4560  0C88  0826               	movf	?___lwtoft+1,w
  4561  0C89  00AA               	movwf	___ftdiv@f2+1
  4562  0C8A  0827               	movf	?___lwtoft+2,w
  4563  0C8B  00AB               	movwf	___ftdiv@f2+2
  4564  0C8C  3000               	movlw	0
  4565  0C8D  00AC               	movwf	___ftdiv@f1
  4566  0C8E  3080               	movlw	128
  4567  0C8F  00AD               	movwf	___ftdiv@f1+1
  4568  0C90  303F               	movlw	63
  4569  0C91  00AE               	movwf	___ftdiv@f1+2
  4570  0C92  120A  118A  202E  120A  158A  	fcall	___ftdiv
  4571  0C97  1283               	bcf	3,5	;RP0=0, select bank0
  4572  0C98  1303               	bcf	3,6	;RP1=0, select bank0
  4573  0C99  0829               	movf	?___ftdiv,w
  4574  0C9A  00D9               	movwf	Set_Freq_Value@val
  4575  0C9B  082A               	movf	?___ftdiv+1,w
  4576  0C9C  00DA               	movwf	Set_Freq_Value@val+1
  4577  0C9D  082B               	movf	?___ftdiv+2,w
  4578  0C9E  00DB               	movwf	Set_Freq_Value@val+2
  4579                           
  4580                           ;PWM.c: 150: FreqTim=(unsigned int)(65535-(val/0.000032)+7);
  4581  0C9F  0859               	movf	Set_Freq_Value@val,w
  4582  0CA0  00AC               	movwf	___ftdiv@f1
  4583  0CA1  085A               	movf	Set_Freq_Value@val+1,w
  4584  0CA2  00AD               	movwf	___ftdiv@f1+1
  4585  0CA3  085B               	movf	Set_Freq_Value@val+2,w
  4586  0CA4  00AE               	movwf	___ftdiv@f1+2
  4587  0CA5  3038               	movlw	56
  4588  0CA6  00A9               	movwf	___ftdiv@f2
  4589  0CA7  3006               	movlw	6
  4590  0CA8  00AA               	movwf	___ftdiv@f2+1
  4591  0CA9  3038               	movlw	56
  4592  0CAA  00AB               	movwf	___ftdiv@f2+2
  4593  0CAB  120A  118A  202E  120A  158A  	fcall	___ftdiv
  4594  0CB0  1283               	bcf	3,5	;RP0=0, select bank0
  4595  0CB1  1303               	bcf	3,6	;RP1=0, select bank0
  4596  0CB2  0829               	movf	?___ftdiv,w
  4597  0CB3  00B9               	movwf	___ftneg@f1
  4598  0CB4  082A               	movf	?___ftdiv+1,w
  4599  0CB5  00BA               	movwf	___ftneg@f1+1
  4600  0CB6  082B               	movf	?___ftdiv+2,w
  4601  0CB7  00BB               	movwf	___ftneg@f1+2
  4602  0CB8  120A  158A  2217  120A  158A  	fcall	___ftneg
  4603  0CBD  1283               	bcf	3,5	;RP0=0, select bank0
  4604  0CBE  1303               	bcf	3,6	;RP1=0, select bank0
  4605  0CBF  0839               	movf	?___ftneg,w
  4606  0CC0  00BF               	movwf	___ftadd@f2
  4607  0CC1  083A               	movf	?___ftneg+1,w
  4608  0CC2  00C0               	movwf	___ftadd@f2+1
  4609  0CC3  083B               	movf	?___ftneg+2,w
  4610  0CC4  00C1               	movwf	___ftadd@f2+2
  4611  0CC5  3003               	movlw	3
  4612  0CC6  00BC               	movwf	___ftadd@f1
  4613  0CC7  3080               	movlw	128
  4614  0CC8  00BD               	movwf	___ftadd@f1+1
  4615  0CC9  3047               	movlw	71
  4616  0CCA  00BE               	movwf	___ftadd@f1+2
  4617  0CCB  120A  118A  26F0  120A  158A  	fcall	___ftadd
  4618  0CD0  1283               	bcf	3,5	;RP0=0, select bank0
  4619  0CD1  1303               	bcf	3,6	;RP1=0, select bank0
  4620  0CD2  083C               	movf	?___ftadd,w
  4621  0CD3  00C9               	movwf	___fttol@f1
  4622  0CD4  083D               	movf	?___ftadd+1,w
  4623  0CD5  00CA               	movwf	___fttol@f1+1
  4624  0CD6  083E               	movf	?___ftadd+2,w
  4625  0CD7  00CB               	movwf	___fttol@f1+2
  4626  0CD8  120A  158A  2550   	fcall	___fttol
  4627  0CDB  1283               	bcf	3,5	;RP0=0, select bank0
  4628  0CDC  1303               	bcf	3,6	;RP1=0, select bank0
  4629  0CDD  084A               	movf	?___fttol+1,w
  4630  0CDE  00E1               	movwf	_FreqTim+1
  4631  0CDF  0849               	movf	?___fttol,w
  4632  0CE0  00E0               	movwf	_FreqTim
  4633  0CE1  0008               	return
  4634  0CE2                     __end_of_Set_Freq_Value:	
  4635                           
  4636                           	psect	text18
  4637  0A8B                     __ptext18:	
  4638 ;; *************** function ___lwtoft *****************
  4639 ;; Defined at:
  4640 ;;		line 28 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;  c               2    5[BANK0 ] unsigned int 
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;		None
  4645 ;; Return value:  Size  Location     Type
  4646 ;;                  3    5[BANK0 ] float 
  4647 ;; Registers used:
  4648 ;;		wreg, status,2, status,0, pclath, cstack
  4649 ;; Tracked objects:
  4650 ;;		On entry : 0/0
  4651 ;;		On exit  : 0/0
  4652 ;;		Unchanged: 0/0
  4653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4654 ;;      Params:         0       3       0       0       0
  4655 ;;      Locals:         0       0       0       0       0
  4656 ;;      Temps:          0       1       0       0       0
  4657 ;;      Totals:         0       4       0       0       0
  4658 ;;Total ram usage:        4 bytes
  4659 ;; Hardware stack levels used:    1
  4660 ;; Hardware stack levels required when called:    3
  4661 ;; This function calls:
  4662 ;;		___ftpack
  4663 ;; This function is called by:
  4664 ;;		_Set_Freq_Value
  4665 ;;		_PWM_Value
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           
  4670                           ;psect for function ___lwtoft
  4671  0A8B                     ___lwtoft:	
  4672                           
  4673                           ;incstack = 0
  4674                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  4675  0A8B  1283               	bcf	3,5	;RP0=0, select bank0
  4676  0A8C  1303               	bcf	3,6	;RP1=0, select bank0
  4677  0A8D  0825               	movf	___lwtoft@c,w
  4678  0A8E  00A0               	movwf	___ftpack@arg
  4679  0A8F  0826               	movf	___lwtoft@c+1,w
  4680  0A90  00A1               	movwf	___ftpack@arg+1
  4681  0A91  01A2               	clrf	___ftpack@arg+2
  4682  0A92  308E               	movlw	142
  4683  0A93  00A8               	movwf	??___lwtoft
  4684  0A94  0828               	movf	??___lwtoft,w
  4685  0A95  00A3               	movwf	___ftpack@exp
  4686  0A96  01A4               	clrf	___ftpack@sign
  4687  0A97  120A  158A  24E2   	fcall	___ftpack
  4688  0A9A  1283               	bcf	3,5	;RP0=0, select bank0
  4689  0A9B  1303               	bcf	3,6	;RP1=0, select bank0
  4690  0A9C  0820               	movf	?___ftpack,w
  4691  0A9D  00A5               	movwf	?___lwtoft
  4692  0A9E  0821               	movf	?___ftpack+1,w
  4693  0A9F  00A6               	movwf	?___lwtoft+1
  4694  0AA0  0822               	movf	?___ftpack+2,w
  4695  0AA1  00A7               	movwf	?___lwtoft+2
  4696  0AA2  0008               	return
  4697  0AA3                     __end_of___lwtoft:	
  4698                           
  4699                           	psect	text19
  4700  0D50                     __ptext19:	
  4701 ;; *************** function ___fttol *****************
  4702 ;; Defined at:
  4703 ;;		line 44 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\fttol.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;  f1              3   41[BANK0 ] float 
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;  lval            4   50[BANK0 ] unsigned long 
  4708 ;;  exp1            1   54[BANK0 ] unsigned char 
  4709 ;;  sign1           1   49[BANK0 ] unsigned char 
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  4   41[BANK0 ] long 
  4712 ;; Registers used:
  4713 ;;		wreg, status,2, status,0
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4719 ;;      Params:         0       4       0       0       0
  4720 ;;      Locals:         0       6       0       0       0
  4721 ;;      Temps:          0       4       0       0       0
  4722 ;;      Totals:         0      14       0       0       0
  4723 ;;Total ram usage:       14 bytes
  4724 ;; Hardware stack levels used:    1
  4725 ;; Hardware stack levels required when called:    2
  4726 ;; This function calls:
  4727 ;;		Nothing
  4728 ;; This function is called by:
  4729 ;;		_Set_Freq_Value
  4730 ;;		_PWM_Value
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           
  4734                           
  4735                           ;psect for function ___fttol
  4736  0D50                     ___fttol:	
  4737                           
  4738                           ;incstack = 0
  4739                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4740  0D50  1283               	bcf	3,5	;RP0=0, select bank0
  4741  0D51  1303               	bcf	3,6	;RP1=0, select bank0
  4742  0D52  0849               	movf	___fttol@f1,w
  4743  0D53  00CD               	movwf	??___fttol
  4744  0D54  084A               	movf	___fttol@f1+1,w
  4745  0D55  00CE               	movwf	??___fttol+1
  4746  0D56  084B               	movf	___fttol@f1+2,w
  4747  0D57  00CF               	movwf	??___fttol+2
  4748  0D58  1003               	clrc
  4749  0D59  0D4E               	rlf	??___fttol+1,w
  4750  0D5A  0D4F               	rlf	??___fttol+2,w
  4751  0D5B  00D0               	movwf	??___fttol+3
  4752  0D5C  0850               	movf	??___fttol+3,w
  4753  0D5D  00D6               	movwf	___fttol@exp1
  4754  0D5E  0856               	movf	___fttol@exp1,w
  4755  0D5F  1D03               	btfss	3,2
  4756  0D60  2D6A               	goto	l2747
  4757  0D61  3000               	movlw	0
  4758  0D62  00CC               	movwf	?___fttol+3
  4759  0D63  3000               	movlw	0
  4760  0D64  00CB               	movwf	?___fttol+2
  4761  0D65  3000               	movlw	0
  4762  0D66  00CA               	movwf	?___fttol+1
  4763  0D67  3000               	movlw	0
  4764  0D68  00C9               	movwf	?___fttol
  4765  0D69  0008               	return
  4766  0D6A                     l2747:	
  4767  0D6A  0849               	movf	___fttol@f1,w
  4768  0D6B  00CD               	movwf	??___fttol
  4769  0D6C  084A               	movf	___fttol@f1+1,w
  4770  0D6D  00CE               	movwf	??___fttol+1
  4771  0D6E  084B               	movf	___fttol@f1+2,w
  4772  0D6F  00CF               	movwf	??___fttol+2
  4773  0D70  3017               	movlw	23
  4774  0D71                     u3365:	
  4775  0D71  1003               	clrc
  4776  0D72  0CCF               	rrf	??___fttol+2,f
  4777  0D73  0CCE               	rrf	??___fttol+1,f
  4778  0D74  0CCD               	rrf	??___fttol,f
  4779  0D75  3EFF               	addlw	-1
  4780  0D76  1D03               	skipz
  4781  0D77  2D71               	goto	u3365
  4782  0D78  084D               	movf	??___fttol,w
  4783  0D79  00D0               	movwf	??___fttol+3
  4784  0D7A  0850               	movf	??___fttol+3,w
  4785  0D7B  00D1               	movwf	___fttol@sign1
  4786  0D7C  17CA               	bsf	___fttol@f1+1,7
  4787  0D7D  30FF               	movlw	255
  4788  0D7E  05C9               	andwf	___fttol@f1,f
  4789  0D7F  30FF               	movlw	255
  4790  0D80  05CA               	andwf	___fttol@f1+1,f
  4791  0D81  3000               	movlw	0
  4792  0D82  05CB               	andwf	___fttol@f1+2,f
  4793  0D83  0849               	movf	___fttol@f1,w
  4794  0D84  00D2               	movwf	___fttol@lval
  4795  0D85  084A               	movf	___fttol@f1+1,w
  4796  0D86  00D3               	movwf	___fttol@lval+1
  4797  0D87  084B               	movf	___fttol@f1+2,w
  4798  0D88  00D4               	movwf	___fttol@lval+2
  4799  0D89  01D5               	clrf	___fttol@lval+3
  4800  0D8A  308E               	movlw	142
  4801  0D8B  02D6               	subwf	___fttol@exp1,f
  4802  0D8C  1FD6               	btfss	___fttol@exp1,7
  4803  0D8D  2DAC               	goto	l2767
  4804  0D8E  0856               	movf	___fttol@exp1,w
  4805  0D8F  3A80               	xorlw	128
  4806  0D90  3E8F               	addlw	143
  4807  0D91  1803               	skipnc
  4808  0D92  2D9C               	goto	l2765
  4809  0D93  3000               	movlw	0
  4810  0D94  00CC               	movwf	?___fttol+3
  4811  0D95  3000               	movlw	0
  4812  0D96  00CB               	movwf	?___fttol+2
  4813  0D97  3000               	movlw	0
  4814  0D98  00CA               	movwf	?___fttol+1
  4815  0D99  3000               	movlw	0
  4816  0D9A  00C9               	movwf	?___fttol
  4817  0D9B  0008               	return
  4818  0D9C                     l2765:	
  4819  0D9C  3001               	movlw	1
  4820  0D9D                     u3395:	
  4821  0D9D  1003               	clrc
  4822  0D9E  0CD5               	rrf	___fttol@lval+3,f
  4823  0D9F  0CD4               	rrf	___fttol@lval+2,f
  4824  0DA0  0CD3               	rrf	___fttol@lval+1,f
  4825  0DA1  0CD2               	rrf	___fttol@lval,f
  4826  0DA2  3EFF               	addlw	-1
  4827  0DA3  1D03               	skipz
  4828  0DA4  2D9D               	goto	u3395
  4829  0DA5  3001               	movlw	1
  4830  0DA6  00CD               	movwf	??___fttol
  4831  0DA7  084D               	movf	??___fttol,w
  4832  0DA8  07D6               	addwf	___fttol@exp1,f
  4833  0DA9  1903               	btfsc	3,2
  4834  0DAA  2DC7               	goto	l2775
  4835  0DAB  2D9C               	goto	l2765
  4836  0DAC                     l2767:	
  4837  0DAC  3018               	movlw	24
  4838  0DAD  0256               	subwf	___fttol@exp1,w
  4839  0DAE  1C03               	skipc
  4840  0DAF  2DC4               	goto	l769
  4841  0DB0  3000               	movlw	0
  4842  0DB1  00CC               	movwf	?___fttol+3
  4843  0DB2  3000               	movlw	0
  4844  0DB3  00CB               	movwf	?___fttol+2
  4845  0DB4  3000               	movlw	0
  4846  0DB5  00CA               	movwf	?___fttol+1
  4847  0DB6  3000               	movlw	0
  4848  0DB7  00C9               	movwf	?___fttol
  4849  0DB8  0008               	return
  4850  0DB9                     l2773:	
  4851  0DB9  3001               	movlw	1
  4852  0DBA  00CD               	movwf	??___fttol
  4853  0DBB                     u3425:	
  4854  0DBB  1003               	clrc
  4855  0DBC  0DD2               	rlf	___fttol@lval,f
  4856  0DBD  0DD3               	rlf	___fttol@lval+1,f
  4857  0DBE  0DD4               	rlf	___fttol@lval+2,f
  4858  0DBF  0DD5               	rlf	___fttol@lval+3,f
  4859  0DC0  0BCD               	decfsz	??___fttol,f
  4860  0DC1  2DBB               	goto	u3425
  4861  0DC2  3001               	movlw	1
  4862  0DC3  02D6               	subwf	___fttol@exp1,f
  4863  0DC4                     l769:	
  4864  0DC4  0856               	movf	___fttol@exp1,w
  4865  0DC5  1D03               	btfss	3,2
  4866  0DC6  2DB9               	goto	l2773
  4867  0DC7                     l2775:	
  4868  0DC7  0851               	movf	___fttol@sign1,w
  4869  0DC8  1903               	btfsc	3,2
  4870  0DC9  2DD5               	goto	l2779
  4871  0DCA  09D2               	comf	___fttol@lval,f
  4872  0DCB  09D3               	comf	___fttol@lval+1,f
  4873  0DCC  09D4               	comf	___fttol@lval+2,f
  4874  0DCD  09D5               	comf	___fttol@lval+3,f
  4875  0DCE  0AD2               	incf	___fttol@lval,f
  4876  0DCF  1903               	skipnz
  4877  0DD0  0AD3               	incf	___fttol@lval+1,f
  4878  0DD1  1903               	skipnz
  4879  0DD2  0AD4               	incf	___fttol@lval+2,f
  4880  0DD3  1903               	skipnz
  4881  0DD4  0AD5               	incf	___fttol@lval+3,f
  4882  0DD5                     l2779:	
  4883  0DD5  0855               	movf	___fttol@lval+3,w
  4884  0DD6  00CC               	movwf	?___fttol+3
  4885  0DD7  0854               	movf	___fttol@lval+2,w
  4886  0DD8  00CB               	movwf	?___fttol+2
  4887  0DD9  0853               	movf	___fttol@lval+1,w
  4888  0DDA  00CA               	movwf	?___fttol+1
  4889  0DDB  0852               	movf	___fttol@lval,w
  4890  0DDC  00C9               	movwf	?___fttol
  4891  0DDD  0008               	return
  4892  0DDE                     __end_of___fttol:	
  4893                           
  4894                           	psect	text20
  4895  0A17                     __ptext20:	
  4896 ;; *************** function ___ftneg *****************
  4897 ;; Defined at:
  4898 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\ftneg.c"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;  f1              3   25[BANK0 ] float 
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;		None
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  3   25[BANK0 ] float 
  4905 ;; Registers used:
  4906 ;;		wreg
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4912 ;;      Params:         0       3       0       0       0
  4913 ;;      Locals:         0       0       0       0       0
  4914 ;;      Temps:          0       0       0       0       0
  4915 ;;      Totals:         0       3       0       0       0
  4916 ;;Total ram usage:        3 bytes
  4917 ;; Hardware stack levels used:    1
  4918 ;; Hardware stack levels required when called:    2
  4919 ;; This function calls:
  4920 ;;		Nothing
  4921 ;; This function is called by:
  4922 ;;		_Set_Freq_Value
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926                           
  4927                           ;psect for function ___ftneg
  4928  0A17                     ___ftneg:	
  4929                           
  4930                           ;incstack = 0
  4931                           ; Regs used in ___ftneg: [wreg]
  4932  0A17  1283               	bcf	3,5	;RP0=0, select bank0
  4933  0A18  1303               	bcf	3,6	;RP1=0, select bank0
  4934  0A19  083B               	movf	___ftneg@f1+2,w
  4935  0A1A  043A               	iorwf	___ftneg@f1+1,w
  4936  0A1B  0439               	iorwf	___ftneg@f1,w
  4937  0A1C  1903               	skipnz
  4938  0A1D  0008               	return
  4939  0A1E  3080               	movlw	128
  4940  0A1F  06BB               	xorwf	___ftneg@f1+2,f
  4941  0A20  0008               	return
  4942  0A21                     __end_of___ftneg:	
  4943                           
  4944                           	psect	text21
  4945  002E                     __ptext21:	
  4946 ;; *************** function ___ftdiv *****************
  4947 ;; Defined at:
  4948 ;;		line 56 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;  f2              3    9[BANK0 ] float 
  4951 ;;  f1              3   12[BANK0 ] float 
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;  f3              3   20[BANK0 ] float 
  4954 ;;  sign            1   24[BANK0 ] unsigned char 
  4955 ;;  exp             1   23[BANK0 ] unsigned char 
  4956 ;;  cntr            1   19[BANK0 ] unsigned char 
  4957 ;; Return value:  Size  Location     Type
  4958 ;;                  3    9[BANK0 ] float 
  4959 ;; Registers used:
  4960 ;;		wreg, status,2, status,0, pclath, cstack
  4961 ;; Tracked objects:
  4962 ;;		On entry : 0/0
  4963 ;;		On exit  : 0/0
  4964 ;;		Unchanged: 0/0
  4965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4966 ;;      Params:         0       6       0       0       0
  4967 ;;      Locals:         0       6       0       0       0
  4968 ;;      Temps:          0       4       0       0       0
  4969 ;;      Totals:         0      16       0       0       0
  4970 ;;Total ram usage:       16 bytes
  4971 ;; Hardware stack levels used:    1
  4972 ;; Hardware stack levels required when called:    3
  4973 ;; This function calls:
  4974 ;;		___ftpack
  4975 ;; This function is called by:
  4976 ;;		_Set_Freq_Value
  4977 ;;		_PWM_Value
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981                           
  4982                           ;psect for function ___ftdiv
  4983  002E                     ___ftdiv:	
  4984                           
  4985                           ;incstack = 0
  4986                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4987  002E  1283               	bcf	3,5	;RP0=0, select bank0
  4988  002F  1303               	bcf	3,6	;RP1=0, select bank0
  4989  0030  082C               	movf	___ftdiv@f1,w
  4990  0031  00AF               	movwf	??___ftdiv
  4991  0032  082D               	movf	___ftdiv@f1+1,w
  4992  0033  00B0               	movwf	??___ftdiv+1
  4993  0034  082E               	movf	___ftdiv@f1+2,w
  4994  0035  00B1               	movwf	??___ftdiv+2
  4995  0036  1003               	clrc
  4996  0037  0D30               	rlf	??___ftdiv+1,w
  4997  0038  0D31               	rlf	??___ftdiv+2,w
  4998  0039  00B2               	movwf	??___ftdiv+3
  4999  003A  0832               	movf	??___ftdiv+3,w
  5000  003B  00B7               	movwf	___ftdiv@exp
  5001  003C  0837               	movf	___ftdiv@exp,w
  5002  003D  1D03               	btfss	3,2
  5003  003E  2846               	goto	l2697
  5004  003F  3000               	movlw	0
  5005  0040  00A9               	movwf	?___ftdiv
  5006  0041  3000               	movlw	0
  5007  0042  00AA               	movwf	?___ftdiv+1
  5008  0043  3000               	movlw	0
  5009  0044  00AB               	movwf	?___ftdiv+2
  5010  0045  0008               	return
  5011  0046                     l2697:	
  5012  0046  0829               	movf	___ftdiv@f2,w
  5013  0047  00AF               	movwf	??___ftdiv
  5014  0048  082A               	movf	___ftdiv@f2+1,w
  5015  0049  00B0               	movwf	??___ftdiv+1
  5016  004A  082B               	movf	___ftdiv@f2+2,w
  5017  004B  00B1               	movwf	??___ftdiv+2
  5018  004C  1003               	clrc
  5019  004D  0D30               	rlf	??___ftdiv+1,w
  5020  004E  0D31               	rlf	??___ftdiv+2,w
  5021  004F  00B2               	movwf	??___ftdiv+3
  5022  0050  0832               	movf	??___ftdiv+3,w
  5023  0051  00B8               	movwf	___ftdiv@sign
  5024  0052  0838               	movf	___ftdiv@sign,w
  5025  0053  1D03               	btfss	3,2
  5026  0054  285C               	goto	l2703
  5027  0055  3000               	movlw	0
  5028  0056  00A9               	movwf	?___ftdiv
  5029  0057  3000               	movlw	0
  5030  0058  00AA               	movwf	?___ftdiv+1
  5031  0059  3000               	movlw	0
  5032  005A  00AB               	movwf	?___ftdiv+2
  5033  005B  0008               	return
  5034  005C                     l2703:	
  5035  005C  3000               	movlw	0
  5036  005D  00B4               	movwf	___ftdiv@f3
  5037  005E  3000               	movlw	0
  5038  005F  00B5               	movwf	___ftdiv@f3+1
  5039  0060  3000               	movlw	0
  5040  0061  00B6               	movwf	___ftdiv@f3+2
  5041  0062  3089               	movlw	137
  5042  0063  0738               	addwf	___ftdiv@sign,w
  5043  0064  00AF               	movwf	??___ftdiv
  5044  0065  082F               	movf	??___ftdiv,w
  5045  0066  02B7               	subwf	___ftdiv@exp,f
  5046  0067  082C               	movf	___ftdiv@f1,w
  5047  0068  00AF               	movwf	??___ftdiv
  5048  0069  082D               	movf	___ftdiv@f1+1,w
  5049  006A  00B0               	movwf	??___ftdiv+1
  5050  006B  082E               	movf	___ftdiv@f1+2,w
  5051  006C  00B1               	movwf	??___ftdiv+2
  5052  006D  3010               	movlw	16
  5053  006E                     u3285:	
  5054  006E  1003               	clrc
  5055  006F  0CB1               	rrf	??___ftdiv+2,f
  5056  0070  0CB0               	rrf	??___ftdiv+1,f
  5057  0071  0CAF               	rrf	??___ftdiv,f
  5058  0072  3EFF               	addlw	-1
  5059  0073  1D03               	skipz
  5060  0074  286E               	goto	u3285
  5061  0075  082F               	movf	??___ftdiv,w
  5062  0076  00B2               	movwf	??___ftdiv+3
  5063  0077  0832               	movf	??___ftdiv+3,w
  5064  0078  00B8               	movwf	___ftdiv@sign
  5065  0079  0829               	movf	___ftdiv@f2,w
  5066  007A  00AF               	movwf	??___ftdiv
  5067  007B  082A               	movf	___ftdiv@f2+1,w
  5068  007C  00B0               	movwf	??___ftdiv+1
  5069  007D  082B               	movf	___ftdiv@f2+2,w
  5070  007E  00B1               	movwf	??___ftdiv+2
  5071  007F  3010               	movlw	16
  5072  0080                     u3295:	
  5073  0080  1003               	clrc
  5074  0081  0CB1               	rrf	??___ftdiv+2,f
  5075  0082  0CB0               	rrf	??___ftdiv+1,f
  5076  0083  0CAF               	rrf	??___ftdiv,f
  5077  0084  3EFF               	addlw	-1
  5078  0085  1D03               	skipz
  5079  0086  2880               	goto	u3295
  5080  0087  082F               	movf	??___ftdiv,w
  5081  0088  00B2               	movwf	??___ftdiv+3
  5082  0089  0832               	movf	??___ftdiv+3,w
  5083  008A  06B8               	xorwf	___ftdiv@sign,f
  5084  008B  3080               	movlw	128
  5085  008C  00AF               	movwf	??___ftdiv
  5086  008D  082F               	movf	??___ftdiv,w
  5087  008E  05B8               	andwf	___ftdiv@sign,f
  5088  008F  17AD               	bsf	___ftdiv@f1+1,7
  5089  0090  30FF               	movlw	255
  5090  0091  05AC               	andwf	___ftdiv@f1,f
  5091  0092  30FF               	movlw	255
  5092  0093  05AD               	andwf	___ftdiv@f1+1,f
  5093  0094  3000               	movlw	0
  5094  0095  05AE               	andwf	___ftdiv@f1+2,f
  5095  0096  17AA               	bsf	___ftdiv@f2+1,7
  5096  0097  30FF               	movlw	255
  5097  0098  05A9               	andwf	___ftdiv@f2,f
  5098  0099  30FF               	movlw	255
  5099  009A  05AA               	andwf	___ftdiv@f2+1,f
  5100  009B  3000               	movlw	0
  5101  009C  05AB               	andwf	___ftdiv@f2+2,f
  5102  009D  3018               	movlw	24
  5103  009E  00AF               	movwf	??___ftdiv
  5104  009F  082F               	movf	??___ftdiv,w
  5105  00A0  00B3               	movwf	___ftdiv@cntr
  5106  00A1                     l2717:	
  5107  00A1  3001               	movlw	1
  5108  00A2                     u3305:	
  5109  00A2  1003               	clrc
  5110  00A3  0DB4               	rlf	___ftdiv@f3,f
  5111  00A4  0DB5               	rlf	___ftdiv@f3+1,f
  5112  00A5  0DB6               	rlf	___ftdiv@f3+2,f
  5113  00A6  3EFF               	addlw	-1
  5114  00A7  1D03               	skipz
  5115  00A8  28A2               	goto	u3305
  5116  00A9  082B               	movf	___ftdiv@f2+2,w
  5117  00AA  022E               	subwf	___ftdiv@f1+2,w
  5118  00AB  1D03               	skipz
  5119  00AC  28B3               	goto	u3315
  5120  00AD  082A               	movf	___ftdiv@f2+1,w
  5121  00AE  022D               	subwf	___ftdiv@f1+1,w
  5122  00AF  1D03               	skipz
  5123  00B0  28B3               	goto	u3315
  5124  00B1  0829               	movf	___ftdiv@f2,w
  5125  00B2  022C               	subwf	___ftdiv@f1,w
  5126  00B3                     u3315:	
  5127  00B3  1C03               	skipc
  5128  00B4  28C0               	goto	l2725
  5129  00B5  0829               	movf	___ftdiv@f2,w
  5130  00B6  02AC               	subwf	___ftdiv@f1,f
  5131  00B7  082A               	movf	___ftdiv@f2+1,w
  5132  00B8  1C03               	skipc
  5133  00B9  0F2A               	incfsz	___ftdiv@f2+1,w
  5134  00BA  02AD               	subwf	___ftdiv@f1+1,f
  5135  00BB  082B               	movf	___ftdiv@f2+2,w
  5136  00BC  1C03               	skipc
  5137  00BD  0A2B               	incf	___ftdiv@f2+2,w
  5138  00BE  02AE               	subwf	___ftdiv@f1+2,f
  5139  00BF  1434               	bsf	___ftdiv@f3,0
  5140  00C0                     l2725:	
  5141  00C0  3001               	movlw	1
  5142  00C1                     u3325:	
  5143  00C1  1003               	clrc
  5144  00C2  0DAC               	rlf	___ftdiv@f1,f
  5145  00C3  0DAD               	rlf	___ftdiv@f1+1,f
  5146  00C4  0DAE               	rlf	___ftdiv@f1+2,f
  5147  00C5  3EFF               	addlw	-1
  5148  00C6  1D03               	skipz
  5149  00C7  28C1               	goto	u3325
  5150  00C8  3001               	movlw	1
  5151  00C9  02B3               	subwf	___ftdiv@cntr,f
  5152  00CA  1D03               	btfss	3,2
  5153  00CB  28A1               	goto	l2717
  5154  00CC  0834               	movf	___ftdiv@f3,w
  5155  00CD  00A0               	movwf	___ftpack@arg
  5156  00CE  0835               	movf	___ftdiv@f3+1,w
  5157  00CF  00A1               	movwf	___ftpack@arg+1
  5158  00D0  0836               	movf	___ftdiv@f3+2,w
  5159  00D1  00A2               	movwf	___ftpack@arg+2
  5160  00D2  0837               	movf	___ftdiv@exp,w
  5161  00D3  00AF               	movwf	??___ftdiv
  5162  00D4  082F               	movf	??___ftdiv,w
  5163  00D5  00A3               	movwf	___ftpack@exp
  5164  00D6  0838               	movf	___ftdiv@sign,w
  5165  00D7  00B0               	movwf	??___ftdiv+1
  5166  00D8  0830               	movf	??___ftdiv+1,w
  5167  00D9  00A4               	movwf	___ftpack@sign
  5168  00DA  120A  158A  24E2   	fcall	___ftpack
  5169  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  5170  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  5171  00DF  0820               	movf	?___ftpack,w
  5172  00E0  00A9               	movwf	?___ftdiv
  5173  00E1  0821               	movf	?___ftpack+1,w
  5174  00E2  00AA               	movwf	?___ftdiv+1
  5175  00E3  0822               	movf	?___ftpack+2,w
  5176  00E4  00AB               	movwf	?___ftdiv+2
  5177  00E5  0008               	return
  5178  00E6                     __end_of___ftdiv:	
  5179                           
  5180                           	psect	text22
  5181  06F0                     __ptext22:	
  5182 ;; *************** function ___ftadd *****************
  5183 ;; Defined at:
  5184 ;;		line 86 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\ftadd.c"
  5185 ;; Parameters:    Size  Location     Type
  5186 ;;  f1              3   28[BANK0 ] float 
  5187 ;;  f2              3   31[BANK0 ] float 
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;  exp1            1   40[BANK0 ] unsigned char 
  5190 ;;  exp2            1   39[BANK0 ] unsigned char 
  5191 ;;  sign            1   38[BANK0 ] unsigned char 
  5192 ;; Return value:  Size  Location     Type
  5193 ;;                  3   28[BANK0 ] float 
  5194 ;; Registers used:
  5195 ;;		wreg, status,2, status,0, pclath, cstack
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/0
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5201 ;;      Params:         0       6       0       0       0
  5202 ;;      Locals:         0       3       0       0       0
  5203 ;;      Temps:          0       4       0       0       0
  5204 ;;      Totals:         0      13       0       0       0
  5205 ;;Total ram usage:       13 bytes
  5206 ;; Hardware stack levels used:    1
  5207 ;; Hardware stack levels required when called:    3
  5208 ;; This function calls:
  5209 ;;		___ftpack
  5210 ;; This function is called by:
  5211 ;;		_Set_Freq_Value
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           
  5215                           
  5216                           ;psect for function ___ftadd
  5217  06F0                     ___ftadd:	
  5218                           
  5219                           ;incstack = 0
  5220                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5221  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  5222  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  5223  06F2  083C               	movf	___ftadd@f1,w
  5224  06F3  00C2               	movwf	??___ftadd
  5225  06F4  083D               	movf	___ftadd@f1+1,w
  5226  06F5  00C3               	movwf	??___ftadd+1
  5227  06F6  083E               	movf	___ftadd@f1+2,w
  5228  06F7  00C4               	movwf	??___ftadd+2
  5229  06F8  1003               	clrc
  5230  06F9  0D43               	rlf	??___ftadd+1,w
  5231  06FA  0D44               	rlf	??___ftadd+2,w
  5232  06FB  00C5               	movwf	??___ftadd+3
  5233  06FC  0845               	movf	??___ftadd+3,w
  5234  06FD  00C8               	movwf	___ftadd@exp1
  5235  06FE  083F               	movf	___ftadd@f2,w
  5236  06FF  00C2               	movwf	??___ftadd
  5237  0700  0840               	movf	___ftadd@f2+1,w
  5238  0701  00C3               	movwf	??___ftadd+1
  5239  0702  0841               	movf	___ftadd@f2+2,w
  5240  0703  00C4               	movwf	??___ftadd+2
  5241  0704  1003               	clrc
  5242  0705  0D43               	rlf	??___ftadd+1,w
  5243  0706  0D44               	rlf	??___ftadd+2,w
  5244  0707  00C5               	movwf	??___ftadd+3
  5245  0708  0845               	movf	??___ftadd+3,w
  5246  0709  00C7               	movwf	___ftadd@exp2
  5247  070A  0848               	movf	___ftadd@exp1,w
  5248  070B  1903               	btfsc	3,2
  5249  070C  2F19               	goto	l2627
  5250  070D  0847               	movf	___ftadd@exp2,w
  5251  070E  0248               	subwf	___ftadd@exp1,w
  5252  070F  1803               	skipnc
  5253  0710  2F20               	goto	l2631
  5254  0711  0348               	decf	___ftadd@exp1,w
  5255  0712  3AFF               	xorlw	255
  5256  0713  0747               	addwf	___ftadd@exp2,w
  5257  0714  00C2               	movwf	??___ftadd
  5258  0715  3019               	movlw	25
  5259  0716  0242               	subwf	??___ftadd,w
  5260  0717  1C03               	skipc
  5261  0718  2F20               	goto	l2631
  5262  0719                     l2627:	
  5263  0719  083F               	movf	___ftadd@f2,w
  5264  071A  00BC               	movwf	?___ftadd
  5265  071B  0840               	movf	___ftadd@f2+1,w
  5266  071C  00BD               	movwf	?___ftadd+1
  5267  071D  0841               	movf	___ftadd@f2+2,w
  5268  071E  00BE               	movwf	?___ftadd+2
  5269  071F  0008               	return
  5270  0720                     l2631:	
  5271  0720  0847               	movf	___ftadd@exp2,w
  5272  0721  1903               	btfsc	3,2
  5273  0722  0008               	return
  5274  0723  0848               	movf	___ftadd@exp1,w
  5275  0724  0247               	subwf	___ftadd@exp2,w
  5276  0725  1803               	skipnc
  5277  0726  2F2F               	goto	l2637
  5278  0727  0347               	decf	___ftadd@exp2,w
  5279  0728  3AFF               	xorlw	255
  5280  0729  0748               	addwf	___ftadd@exp1,w
  5281  072A  00C2               	movwf	??___ftadd
  5282  072B  3019               	movlw	25
  5283  072C  0242               	subwf	??___ftadd,w
  5284  072D  1803               	btfsc	3,0
  5285  072E  0008               	return
  5286  072F                     l2637:	
  5287  072F  3006               	movlw	6
  5288  0730  00C2               	movwf	??___ftadd
  5289  0731  0842               	movf	??___ftadd,w
  5290  0732  00C6               	movwf	___ftadd@sign
  5291  0733  1BBE               	btfsc	___ftadd@f1+2,7
  5292  0734  17C6               	bsf	___ftadd@sign,7
  5293  0735  1BC1               	btfsc	___ftadd@f2+2,7
  5294  0736  1746               	bsf	___ftadd@sign,6
  5295  0737  17BD               	bsf	___ftadd@f1+1,7
  5296  0738  30FF               	movlw	255
  5297  0739  05BC               	andwf	___ftadd@f1,f
  5298  073A  30FF               	movlw	255
  5299  073B  05BD               	andwf	___ftadd@f1+1,f
  5300  073C  3000               	movlw	0
  5301  073D  05BE               	andwf	___ftadd@f1+2,f
  5302  073E  17C0               	bsf	___ftadd@f2+1,7
  5303  073F  30FF               	movlw	255
  5304  0740  05BF               	andwf	___ftadd@f2,f
  5305  0741  30FF               	movlw	255
  5306  0742  05C0               	andwf	___ftadd@f2+1,f
  5307  0743  3000               	movlw	0
  5308  0744  05C1               	andwf	___ftadd@f2+2,f
  5309  0745  0847               	movf	___ftadd@exp2,w
  5310  0746  0248               	subwf	___ftadd@exp1,w
  5311  0747  1803               	skipnc
  5312  0748  2F6F               	goto	l2659
  5313  0749                     l2649:	
  5314  0749  3001               	movlw	1
  5315  074A                     u3115:	
  5316  074A  1003               	clrc
  5317  074B  0DBF               	rlf	___ftadd@f2,f
  5318  074C  0DC0               	rlf	___ftadd@f2+1,f
  5319  074D  0DC1               	rlf	___ftadd@f2+2,f
  5320  074E  3EFF               	addlw	-1
  5321  074F  1D03               	skipz
  5322  0750  2F4A               	goto	u3115
  5323  0751  3001               	movlw	1
  5324  0752  02C7               	subwf	___ftadd@exp2,f
  5325  0753  0847               	movf	___ftadd@exp2,w
  5326  0754  0648               	xorwf	___ftadd@exp1,w
  5327  0755  1903               	skipnz
  5328  0756  2F6A               	goto	l2657
  5329  0757  3001               	movlw	1
  5330  0758  02C6               	subwf	___ftadd@sign,f
  5331  0759  0846               	movf	___ftadd@sign,w
  5332  075A  3907               	andlw	7
  5333  075B  1903               	btfsc	3,2
  5334  075C  2F6A               	goto	l2657
  5335  075D  2F49               	goto	l2649
  5336  075E                     l2655:	
  5337  075E  3001               	movlw	1
  5338  075F                     u3145:	
  5339  075F  1003               	clrc
  5340  0760  0CBE               	rrf	___ftadd@f1+2,f
  5341  0761  0CBD               	rrf	___ftadd@f1+1,f
  5342  0762  0CBC               	rrf	___ftadd@f1,f
  5343  0763  3EFF               	addlw	-1
  5344  0764  1D03               	skipz
  5345  0765  2F5F               	goto	u3145
  5346  0766  3001               	movlw	1
  5347  0767  00C2               	movwf	??___ftadd
  5348  0768  0842               	movf	??___ftadd,w
  5349  0769  07C8               	addwf	___ftadd@exp1,f
  5350  076A                     l2657:	
  5351  076A  0848               	movf	___ftadd@exp1,w
  5352  076B  0647               	xorwf	___ftadd@exp2,w
  5353  076C  1903               	btfsc	3,2
  5354  076D  2F98               	goto	l709
  5355  076E  2F5E               	goto	l2655
  5356  076F                     l2659:	
  5357  076F  0848               	movf	___ftadd@exp1,w
  5358  0770  0247               	subwf	___ftadd@exp2,w
  5359  0771  1803               	skipnc
  5360  0772  2F98               	goto	l709
  5361  0773                     l2661:	
  5362  0773  3001               	movlw	1
  5363  0774                     u3175:	
  5364  0774  1003               	clrc
  5365  0775  0DBC               	rlf	___ftadd@f1,f
  5366  0776  0DBD               	rlf	___ftadd@f1+1,f
  5367  0777  0DBE               	rlf	___ftadd@f1+2,f
  5368  0778  3EFF               	addlw	-1
  5369  0779  1D03               	skipz
  5370  077A  2F74               	goto	u3175
  5371  077B  3001               	movlw	1
  5372  077C  02C8               	subwf	___ftadd@exp1,f
  5373  077D  0847               	movf	___ftadd@exp2,w
  5374  077E  0648               	xorwf	___ftadd@exp1,w
  5375  077F  1903               	skipnz
  5376  0780  2F94               	goto	l2669
  5377  0781  3001               	movlw	1
  5378  0782  02C6               	subwf	___ftadd@sign,f
  5379  0783  0846               	movf	___ftadd@sign,w
  5380  0784  3907               	andlw	7
  5381  0785  1903               	btfsc	3,2
  5382  0786  2F94               	goto	l2669
  5383  0787  2F73               	goto	l2661
  5384  0788                     l2667:	
  5385  0788  3001               	movlw	1
  5386  0789                     u3205:	
  5387  0789  1003               	clrc
  5388  078A  0CC1               	rrf	___ftadd@f2+2,f
  5389  078B  0CC0               	rrf	___ftadd@f2+1,f
  5390  078C  0CBF               	rrf	___ftadd@f2,f
  5391  078D  3EFF               	addlw	-1
  5392  078E  1D03               	skipz
  5393  078F  2F89               	goto	u3205
  5394  0790  3001               	movlw	1
  5395  0791  00C2               	movwf	??___ftadd
  5396  0792  0842               	movf	??___ftadd,w
  5397  0793  07C7               	addwf	___ftadd@exp2,f
  5398  0794                     l2669:	
  5399  0794  0848               	movf	___ftadd@exp1,w
  5400  0795  0647               	xorwf	___ftadd@exp2,w
  5401  0796  1D03               	skipz
  5402  0797  2F88               	goto	l2667
  5403  0798                     l709:	
  5404  0798  1FC6               	btfss	___ftadd@sign,7
  5405  0799  2FAA               	goto	l2673
  5406  079A  30FF               	movlw	255
  5407  079B  06BC               	xorwf	___ftadd@f1,f
  5408  079C  30FF               	movlw	255
  5409  079D  06BD               	xorwf	___ftadd@f1+1,f
  5410  079E  30FF               	movlw	255
  5411  079F  06BE               	xorwf	___ftadd@f1+2,f
  5412  07A0  3001               	movlw	1
  5413  07A1  07BC               	addwf	___ftadd@f1,f
  5414  07A2  3000               	movlw	0
  5415  07A3  1803               	skipnc
  5416  07A4  3001               	movlw	1
  5417  07A5  07BD               	addwf	___ftadd@f1+1,f
  5418  07A6  3000               	movlw	0
  5419  07A7  1803               	skipnc
  5420  07A8  3001               	movlw	1
  5421  07A9  07BE               	addwf	___ftadd@f1+2,f
  5422  07AA                     l2673:	
  5423  07AA  1F46               	btfss	___ftadd@sign,6
  5424  07AB  2FBC               	goto	l2677
  5425  07AC  30FF               	movlw	255
  5426  07AD  06BF               	xorwf	___ftadd@f2,f
  5427  07AE  30FF               	movlw	255
  5428  07AF  06C0               	xorwf	___ftadd@f2+1,f
  5429  07B0  30FF               	movlw	255
  5430  07B1  06C1               	xorwf	___ftadd@f2+2,f
  5431  07B2  3001               	movlw	1
  5432  07B3  07BF               	addwf	___ftadd@f2,f
  5433  07B4  3000               	movlw	0
  5434  07B5  1803               	skipnc
  5435  07B6  3001               	movlw	1
  5436  07B7  07C0               	addwf	___ftadd@f2+1,f
  5437  07B8  3000               	movlw	0
  5438  07B9  1803               	skipnc
  5439  07BA  3001               	movlw	1
  5440  07BB  07C1               	addwf	___ftadd@f2+2,f
  5441  07BC                     l2677:	
  5442  07BC  01C6               	clrf	___ftadd@sign
  5443  07BD  083C               	movf	___ftadd@f1,w
  5444  07BE  07BF               	addwf	___ftadd@f2,f
  5445  07BF  083D               	movf	___ftadd@f1+1,w
  5446  07C0  1103               	clrz
  5447  07C1  1803               	skipnc
  5448  07C2  0A3D               	incf	___ftadd@f1+1,w
  5449  07C3  1D03               	btfss	3,2
  5450  07C4  07C0               	addwf	___ftadd@f2+1,f
  5451  07C5  083E               	movf	___ftadd@f1+2,w
  5452  07C6  1103               	clrz
  5453  07C7  1803               	skipnc
  5454  07C8  0A3E               	incf	___ftadd@f1+2,w
  5455  07C9  1D03               	btfss	3,2
  5456  07CA  07C1               	addwf	___ftadd@f2+2,f
  5457  07CB  1FC1               	btfss	___ftadd@f2+2,7
  5458  07CC  2FDF               	goto	l2687
  5459  07CD  30FF               	movlw	255
  5460  07CE  06BF               	xorwf	___ftadd@f2,f
  5461  07CF  30FF               	movlw	255
  5462  07D0  06C0               	xorwf	___ftadd@f2+1,f
  5463  07D1  30FF               	movlw	255
  5464  07D2  06C1               	xorwf	___ftadd@f2+2,f
  5465  07D3  3001               	movlw	1
  5466  07D4  07BF               	addwf	___ftadd@f2,f
  5467  07D5  3000               	movlw	0
  5468  07D6  1803               	skipnc
  5469  07D7  3001               	movlw	1
  5470  07D8  07C0               	addwf	___ftadd@f2+1,f
  5471  07D9  3000               	movlw	0
  5472  07DA  1803               	skipnc
  5473  07DB  3001               	movlw	1
  5474  07DC  07C1               	addwf	___ftadd@f2+2,f
  5475  07DD  01C6               	clrf	___ftadd@sign
  5476  07DE  0AC6               	incf	___ftadd@sign,f
  5477  07DF                     l2687:	
  5478  07DF  083F               	movf	___ftadd@f2,w
  5479  07E0  00A0               	movwf	___ftpack@arg
  5480  07E1  0840               	movf	___ftadd@f2+1,w
  5481  07E2  00A1               	movwf	___ftpack@arg+1
  5482  07E3  0841               	movf	___ftadd@f2+2,w
  5483  07E4  00A2               	movwf	___ftpack@arg+2
  5484  07E5  0848               	movf	___ftadd@exp1,w
  5485  07E6  00C2               	movwf	??___ftadd
  5486  07E7  0842               	movf	??___ftadd,w
  5487  07E8  00A3               	movwf	___ftpack@exp
  5488  07E9  0846               	movf	___ftadd@sign,w
  5489  07EA  00C3               	movwf	??___ftadd+1
  5490  07EB  0843               	movf	??___ftadd+1,w
  5491  07EC  00A4               	movwf	___ftpack@sign
  5492  07ED  120A  158A  24E2   	fcall	___ftpack
  5493  07F0  1283               	bcf	3,5	;RP0=0, select bank0
  5494  07F1  1303               	bcf	3,6	;RP1=0, select bank0
  5495  07F2  0820               	movf	?___ftpack,w
  5496  07F3  00BC               	movwf	?___ftadd
  5497  07F4  0821               	movf	?___ftpack+1,w
  5498  07F5  00BD               	movwf	?___ftadd+1
  5499  07F6  0822               	movf	?___ftpack+2,w
  5500  07F7  00BE               	movwf	?___ftadd+2
  5501  07F8  0008               	return
  5502  07F9                     __end_of___ftadd:	
  5503                           
  5504                           	psect	text23
  5505  0BD9                     __ptext23:	
  5506 ;; *************** function _ADC_Read *****************
  5507 ;; Defined at:
  5508 ;;		line 39 in file "ADC.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;  channel         1    wreg     unsigned char 
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;  channel         1    6[COMMON] unsigned char 
  5513 ;; Return value:  Size  Location     Type
  5514 ;;                  2    4[COMMON] unsigned int 
  5515 ;; Registers used:
  5516 ;;		wreg, status,2, status,0
  5517 ;; Tracked objects:
  5518 ;;		On entry : 0/0
  5519 ;;		On exit  : 0/0
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5522 ;;      Params:         2       0       0       0       0
  5523 ;;      Locals:         1       0       0       0       0
  5524 ;;      Temps:          0       2       0       0       0
  5525 ;;      Totals:         3       2       0       0       0
  5526 ;;Total ram usage:        5 bytes
  5527 ;; Hardware stack levels used:    1
  5528 ;; Hardware stack levels required when called:    2
  5529 ;; This function calls:
  5530 ;;		Nothing
  5531 ;; This function is called by:
  5532 ;;		_ReadValue
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536                           
  5537                           ;psect for function _ADC_Read
  5538  0BD9                     _ADC_Read:	
  5539                           
  5540                           ;incstack = 0
  5541                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  5542                           ;ADC_Read@channel stored from wreg
  5543  0BD9  00F6               	movwf	ADC_Read@channel
  5544                           
  5545                           ;ADC.c: 41: if(channel > 7)
  5546  0BDA  3008               	movlw	8
  5547  0BDB  0276               	subwf	ADC_Read@channel,w
  5548  0BDC  1C03               	skipc
  5549  0BDD  2BE1               	goto	l2795
  5550                           
  5551                           ;ADC.c: 42: return 0;
  5552  0BDE  01F4               	clrf	?_ADC_Read
  5553  0BDF  01F5               	clrf	?_ADC_Read+1
  5554  0BE0  0008               	return
  5555  0BE1                     l2795:	
  5556                           
  5557                           ;ADC.c: 44: ADCON0&=0xC5;
  5558  0BE1  30C5               	movlw	197
  5559  0BE2  1283               	bcf	3,5	;RP0=0, select bank0
  5560  0BE3  1303               	bcf	3,6	;RP1=0, select bank0
  5561  0BE4  00A0               	movwf	??_ADC_Read
  5562  0BE5  0820               	movf	??_ADC_Read,w
  5563  0BE6  059F               	andwf	31,f	;volatile
  5564                           
  5565                           ;ADC.c: 45: ADCON0 |= channel<<3;
  5566  0BE7  0876               	movf	ADC_Read@channel,w
  5567  0BE8  00A0               	movwf	??_ADC_Read
  5568  0BE9  3002               	movlw	2
  5569  0BEA                     u3465:	
  5570  0BEA  1003               	clrc
  5571  0BEB  0DA0               	rlf	??_ADC_Read,f
  5572  0BEC  3EFF               	addlw	-1
  5573  0BED  1D03               	skipz
  5574  0BEE  2BEA               	goto	u3465
  5575  0BEF  1003               	clrc
  5576  0BF0  0D20               	rlf	??_ADC_Read,w
  5577  0BF1  00A1               	movwf	??_ADC_Read+1
  5578  0BF2  0821               	movf	??_ADC_Read+1,w
  5579  0BF3  049F               	iorwf	31,f	;volatile
  5580                           
  5581                           ;ADC.c: 46: _delay((unsigned long)((2)*(1000000/4000.0)));
  5582  0BF4  30A5               	movlw	165
  5583  0BF5  1283               	bcf	3,5	;RP0=0, select bank0
  5584  0BF6  1303               	bcf	3,6	;RP1=0, select bank0
  5585  0BF7  00A0               	movwf	??_ADC_Read
  5586  0BF8                     u4137:	
  5587  0BF8  0BA0               	decfsz	??_ADC_Read,f
  5588  0BF9  2BF8               	goto	u4137
  5589  0BFA  2BFB               	nop2
  5590                           
  5591                           ;ADC.c: 47: GO_nDONE = 1;
  5592  0BFB  1283               	bcf	3,5	;RP0=0, select bank0
  5593  0BFC  1303               	bcf	3,6	;RP1=0, select bank0
  5594  0BFD  151F               	bsf	31,2	;volatile
  5595  0BFE                     l234:	
  5596                           ;ADC.c: 48: while(GO_nDONE);
  5597                           
  5598  0BFE  191F               	btfsc	31,2	;volatile
  5599  0BFF  2BFE               	goto	l234
  5600                           
  5601                           ;ADC.c: 49: return ((ADRESH<<8)+ADRESL);
  5602  0C00  081E               	movf	30,w	;volatile
  5603  0C01  00F5               	movwf	?_ADC_Read+1
  5604  0C02  1683               	bsf	3,5	;RP0=1, select bank1
  5605  0C03  1303               	bcf	3,6	;RP1=0, select bank1
  5606  0C04  081E               	movf	30,w	;volatile
  5607  0C05  00F4               	movwf	?_ADC_Read
  5608  0C06  0008               	return
  5609  0C07                     __end_of_ADC_Read:	
  5610                           
  5611                           	psect	text24
  5612  0B87                     __ptext24:	
  5613 ;; *************** function _Port_Init *****************
  5614 ;; Defined at:
  5615 ;;		line 24 in file "main.c"
  5616 ;; Parameters:    Size  Location     Type
  5617 ;;		None
  5618 ;; Auto vars:     Size  Location     Type
  5619 ;;		None
  5620 ;; Return value:  Size  Location     Type
  5621 ;;                  1    wreg      void 
  5622 ;; Registers used:
  5623 ;;		None
  5624 ;; Tracked objects:
  5625 ;;		On entry : 0/0
  5626 ;;		On exit  : 0/0
  5627 ;;		Unchanged: 0/0
  5628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5629 ;;      Params:         0       0       0       0       0
  5630 ;;      Locals:         0       0       0       0       0
  5631 ;;      Temps:          0       0       0       0       0
  5632 ;;      Totals:         0       0       0       0       0
  5633 ;;Total ram usage:        0 bytes
  5634 ;; Hardware stack levels used:    1
  5635 ;; Hardware stack levels required when called:    2
  5636 ;; This function calls:
  5637 ;;		Nothing
  5638 ;; This function is called by:
  5639 ;;		_main
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           
  5644                           ;psect for function _Port_Init
  5645  0B87                     _Port_Init:	
  5646                           
  5647                           ;main.c: 27: TRISC5=1;
  5648                           
  5649                           ;incstack = 0
  5650                           ; Regs used in _Port_Init: []
  5651  0B87  1683               	bsf	3,5	;RP0=1, select bank1
  5652  0B88  1303               	bcf	3,6	;RP1=0, select bank1
  5653  0B89  1687               	bsf	7,5	;volatile
  5654                           
  5655                           ;main.c: 28: PORTCbits.RC5=0;
  5656  0B8A  1283               	bcf	3,5	;RP0=0, select bank0
  5657  0B8B  1303               	bcf	3,6	;RP1=0, select bank0
  5658  0B8C  1287               	bcf	7,5	;volatile
  5659                           
  5660                           ;main.c: 30: TRISC6=0;
  5661  0B8D  1683               	bsf	3,5	;RP0=1, select bank1
  5662  0B8E  1303               	bcf	3,6	;RP1=0, select bank1
  5663  0B8F  1307               	bcf	7,6	;volatile
  5664                           
  5665                           ;main.c: 31: TRISB7=0;
  5666  0B90  1386               	bcf	6,7	;volatile
  5667                           
  5668                           ;main.c: 32: PORTCbits.RC6=0;
  5669  0B91  1283               	bcf	3,5	;RP0=0, select bank0
  5670  0B92  1303               	bcf	3,6	;RP1=0, select bank0
  5671  0B93  1307               	bcf	7,6	;volatile
  5672                           
  5673                           ;main.c: 33: PORTBbits.RB7=0;
  5674  0B94  1386               	bcf	6,7	;volatile
  5675                           
  5676                           ;main.c: 35: TRISC3=0;
  5677  0B95  1683               	bsf	3,5	;RP0=1, select bank1
  5678  0B96  1303               	bcf	3,6	;RP1=0, select bank1
  5679  0B97  1187               	bcf	7,3	;volatile
  5680                           
  5681                           ;main.c: 36: TRISC4=0;
  5682  0B98  1207               	bcf	7,4	;volatile
  5683                           
  5684                           ;main.c: 37: PORTCbits.RC3=0;
  5685  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  5686  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  5687  0B9B  1187               	bcf	7,3	;volatile
  5688                           
  5689                           ;main.c: 38: PORTCbits.RC4=0;
  5690  0B9C  1207               	bcf	7,4	;volatile
  5691                           
  5692                           ;main.c: 41: TRISE0=0;
  5693  0B9D  1683               	bsf	3,5	;RP0=1, select bank1
  5694  0B9E  1303               	bcf	3,6	;RP1=0, select bank1
  5695  0B9F  1009               	bcf	9,0	;volatile
  5696                           
  5697                           ;main.c: 42: TRISE1=0;
  5698  0BA0  1089               	bcf	9,1	;volatile
  5699                           
  5700                           ;main.c: 43: TRISE2=0;
  5701  0BA1  1109               	bcf	9,2	;volatile
  5702                           
  5703                           ;main.c: 44: PORTEbits.RE0=0;
  5704  0BA2  1283               	bcf	3,5	;RP0=0, select bank0
  5705  0BA3  1303               	bcf	3,6	;RP1=0, select bank0
  5706  0BA4  1009               	bcf	9,0	;volatile
  5707                           
  5708                           ;main.c: 45: PORTEbits.RE1=0;
  5709  0BA5  1089               	bcf	9,1	;volatile
  5710                           
  5711                           ;main.c: 46: PORTEbits.RE2=0;
  5712  0BA6  1109               	bcf	9,2	;volatile
  5713                           
  5714                           ;main.c: 49: TRISA4=0;
  5715  0BA7  1683               	bsf	3,5	;RP0=1, select bank1
  5716  0BA8  1303               	bcf	3,6	;RP1=0, select bank1
  5717  0BA9  1205               	bcf	5,4	;volatile
  5718                           
  5719                           ;main.c: 50: TRISA5=0;
  5720  0BAA  1285               	bcf	5,5	;volatile
  5721                           
  5722                           ;main.c: 53: PORTAbits.RA4=0;
  5723  0BAB  1283               	bcf	3,5	;RP0=0, select bank0
  5724  0BAC  1303               	bcf	3,6	;RP1=0, select bank0
  5725  0BAD  1205               	bcf	5,4	;volatile
  5726                           
  5727                           ;main.c: 54: PORTAbits.RA5=0;
  5728  0BAE  1285               	bcf	5,5	;volatile
  5729  0BAF  0008               	return
  5730  0BB0                     __end_of_Port_Init:	
  5731                           
  5732                           	psect	text25
  5733  0A0A                     __ptext25:	
  5734 ;; *************** function _ENABLE_SET *****************
  5735 ;; Defined at:
  5736 ;;		line 60 in file "main.c"
  5737 ;; Parameters:    Size  Location     Type
  5738 ;;		None
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;		None
  5741 ;; Return value:  Size  Location     Type
  5742 ;;                  1    wreg      void 
  5743 ;; Registers used:
  5744 ;;		None
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5750 ;;      Params:         0       0       0       0       0
  5751 ;;      Locals:         0       0       0       0       0
  5752 ;;      Temps:          0       0       0       0       0
  5753 ;;      Totals:         0       0       0       0       0
  5754 ;;Total ram usage:        0 bytes
  5755 ;; Hardware stack levels used:    1
  5756 ;; Hardware stack levels required when called:    2
  5757 ;; This function calls:
  5758 ;;		Nothing
  5759 ;; This function is called by:
  5760 ;;		_main
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           
  5765                           ;psect for function _ENABLE_SET
  5766  0A0A                     _ENABLE_SET:	
  5767                           
  5768                           ;main.c: 62: PORTCbits.RC6=1;
  5769                           
  5770                           ;incstack = 0
  5771                           ; Regs used in _ENABLE_SET: []
  5772  0A0A  1283               	bcf	3,5	;RP0=0, select bank0
  5773  0A0B  1303               	bcf	3,6	;RP1=0, select bank0
  5774  0A0C  1707               	bsf	7,6	;volatile
  5775                           
  5776                           ;main.c: 63: PORTEbits.RE0=1;
  5777  0A0D  1409               	bsf	9,0	;volatile
  5778  0A0E  0008               	return
  5779  0A0F                     __end_of_ENABLE_SET:	
  5780                           
  5781                           	psect	text26
  5782  0A05                     __ptext26:	
  5783 ;; *************** function _ENABLE_RESET *****************
  5784 ;; Defined at:
  5785 ;;		line 70 in file "main.c"
  5786 ;; Parameters:    Size  Location     Type
  5787 ;;		None
  5788 ;; Auto vars:     Size  Location     Type
  5789 ;;		None
  5790 ;; Return value:  Size  Location     Type
  5791 ;;                  1    wreg      void 
  5792 ;; Registers used:
  5793 ;;		None
  5794 ;; Tracked objects:
  5795 ;;		On entry : 0/0
  5796 ;;		On exit  : 0/0
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5799 ;;      Params:         0       0       0       0       0
  5800 ;;      Locals:         0       0       0       0       0
  5801 ;;      Temps:          0       0       0       0       0
  5802 ;;      Totals:         0       0       0       0       0
  5803 ;;Total ram usage:        0 bytes
  5804 ;; Hardware stack levels used:    1
  5805 ;; Hardware stack levels required when called:    2
  5806 ;; This function calls:
  5807 ;;		Nothing
  5808 ;; This function is called by:
  5809 ;;		_main
  5810 ;; This function uses a non-reentrant model
  5811 ;;
  5812                           
  5813                           
  5814                           ;psect for function _ENABLE_RESET
  5815  0A05                     _ENABLE_RESET:	
  5816                           
  5817                           ;main.c: 72: PORTCbits.RC6=0;
  5818                           
  5819                           ;incstack = 0
  5820                           ; Regs used in _ENABLE_RESET: []
  5821  0A05  1283               	bcf	3,5	;RP0=0, select bank0
  5822  0A06  1303               	bcf	3,6	;RP1=0, select bank0
  5823  0A07  1307               	bcf	7,6	;volatile
  5824                           
  5825                           ;main.c: 73: PORTEbits.RE0=0;
  5826  0A08  1009               	bcf	9,0	;volatile
  5827  0A09  0008               	return
  5828  0A0A                     __end_of_ENABLE_RESET:	
  5829                           
  5830                           	psect	text27
  5831  0A74                     __ptext27:	
  5832 ;; *************** function _DIRECTION_SET *****************
  5833 ;; Defined at:
  5834 ;;		line 79 in file "main.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;  dir             1    wreg     unsigned char 
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;  dir             1    4[COMMON] unsigned char 
  5839 ;; Return value:  Size  Location     Type
  5840 ;;                  1    wreg      void 
  5841 ;; Registers used:
  5842 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5848 ;;      Params:         0       0       0       0       0
  5849 ;;      Locals:         1       0       0       0       0
  5850 ;;      Temps:          0       0       0       0       0
  5851 ;;      Totals:         1       0       0       0       0
  5852 ;;Total ram usage:        1 bytes
  5853 ;; Hardware stack levels used:    1
  5854 ;; Hardware stack levels required when called:    2
  5855 ;; This function calls:
  5856 ;;		Nothing
  5857 ;; This function is called by:
  5858 ;;		_main
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           
  5863                           ;psect for function _DIRECTION_SET
  5864  0A74                     _DIRECTION_SET:	
  5865                           
  5866                           ;incstack = 0
  5867                           ; Regs used in _DIRECTION_SET: [wreg-fsr0h+status,2+status,0]
  5868                           ;DIRECTION_SET@dir stored from wreg
  5869  0A74  00F4               	movwf	DIRECTION_SET@dir
  5870                           
  5871                           ;main.c: 81: switch(dir)
  5872  0A75  2A82               	goto	l2917
  5873  0A76                     l71:	
  5874                           ;main.c: 82: {
  5875                           ;main.c: 83: case 1:
  5876                           
  5877                           
  5878                           ;main.c: 84: {
  5879                           ;main.c: 85: PORTBbits.RB7=0;
  5880  0A76  1283               	bcf	3,5	;RP0=0, select bank0
  5881  0A77  1303               	bcf	3,6	;RP1=0, select bank0
  5882  0A78  1386               	bcf	6,7	;volatile
  5883                           
  5884                           ;main.c: 86: PORTEbits.RE1=1;
  5885  0A79  1489               	bsf	9,1	;volatile
  5886                           
  5887                           ;main.c: 87: PORTEbits.RE2=0;
  5888  0A7A  1109               	bcf	9,2	;volatile
  5889                           
  5890                           ;main.c: 88: break;
  5891  0A7B  0008               	return
  5892  0A7C                     l73:	
  5893                           ;main.c: 89: }
  5894                           ;main.c: 91: case 2:
  5895                           
  5896                           
  5897                           ;main.c: 92: {
  5898                           ;main.c: 93: PORTBbits.RB7=1;
  5899  0A7C  1283               	bcf	3,5	;RP0=0, select bank0
  5900  0A7D  1303               	bcf	3,6	;RP1=0, select bank0
  5901  0A7E  1786               	bsf	6,7	;volatile
  5902                           
  5903                           ;main.c: 94: PORTEbits.RE1=0;
  5904  0A7F  1089               	bcf	9,1	;volatile
  5905                           
  5906                           ;main.c: 95: PORTEbits.RE2=1;
  5907  0A80  1509               	bsf	9,2	;volatile
  5908                           
  5909                           ;main.c: 97: }
  5910                           ;main.c: 98: }
  5911                           
  5912                           ;main.c: 96: break;
  5913  0A81  0008               	return
  5914  0A82                     l2917:	
  5915  0A82  0874               	movf	DIRECTION_SET@dir,w
  5916                           
  5917                           ; Switch size 1, requested type "space"
  5918                           ; Number of cases is 2, Range of values is 1 to 2
  5919                           ; switch strategies available:
  5920                           ; Name         Instructions Cycles
  5921                           ; simple_byte            7     4 (average)
  5922                           ; direct_byte           17    11 (fixed)
  5923                           ; jumptable            263     9 (fixed)
  5924                           ;	Chosen strategy is simple_byte
  5925  0A83  3A01               	xorlw	1	; case 1
  5926  0A84  1903               	skipnz
  5927  0A85  2A76               	goto	l71
  5928  0A86  3A03               	xorlw	3	; case 2
  5929  0A87  1903               	skipnz
  5930  0A88  2A7C               	goto	l73
  5931  0A89  2A8A               	goto	l74
  5932  0A8A                     l74:	
  5933  0A8A  0008               	return
  5934  0A8B                     __end_of_DIRECTION_SET:	
  5935                           
  5936                           	psect	text28
  5937  0B0C                     __ptext28:	
  5938 ;; *************** function _ADC_Init *****************
  5939 ;; Defined at:
  5940 ;;		line 10 in file "ADC.c"
  5941 ;; Parameters:    Size  Location     Type
  5942 ;;  Uref            1    wreg     unsigned char 
  5943 ;; Auto vars:     Size  Location     Type
  5944 ;;  Uref            1   13[BANK0 ] unsigned char 
  5945 ;; Return value:  Size  Location     Type
  5946 ;;                  1    wreg      void 
  5947 ;; Registers used:
  5948 ;;		wreg, status,2, status,0, pclath, cstack
  5949 ;; Tracked objects:
  5950 ;;		On entry : 0/0
  5951 ;;		On exit  : 0/0
  5952 ;;		Unchanged: 0/0
  5953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5954 ;;      Params:         0       0       0       0       0
  5955 ;;      Locals:         0       1       0       0       0
  5956 ;;      Temps:          0       0       0       0       0
  5957 ;;      Totals:         0       1       0       0       0
  5958 ;;Total ram usage:        1 bytes
  5959 ;; Hardware stack levels used:    1
  5960 ;; Hardware stack levels required when called:    4
  5961 ;; This function calls:
  5962 ;;		___lbtoft
  5963 ;; This function is called by:
  5964 ;;		_main
  5965 ;; This function uses a non-reentrant model
  5966 ;;
  5967                           
  5968                           
  5969                           ;psect for function _ADC_Init
  5970  0B0C                     _ADC_Init:	
  5971                           
  5972                           ;incstack = 0
  5973                           ; Regs used in _ADC_Init: [wreg+status,2+status,0+pclath+cstack]
  5974                           ;ADC_Init@Uref stored from wreg
  5975  0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  5976  0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  5977  0B0E  00AD               	movwf	ADC_Init@Uref
  5978                           
  5979                           ;ADC.c: 13: ADCS0=1;
  5980  0B0F  171F               	bsf	31,6	;volatile
  5981                           
  5982                           ;ADC.c: 14: ADCS1=0;
  5983  0B10  139F               	bcf	31,7	;volatile
  5984                           
  5985                           ;ADC.c: 17: ADON=1;
  5986  0B11  141F               	bsf	31,0	;volatile
  5987                           
  5988                           ;ADC.c: 19: PCFG0=0;
  5989  0B12  1683               	bsf	3,5	;RP0=1, select bank1
  5990  0B13  1303               	bcf	3,6	;RP1=0, select bank1
  5991  0B14  101F               	bcf	31,0	;volatile
  5992                           
  5993                           ;ADC.c: 20: PCFG1=0;
  5994  0B15  109F               	bcf	31,1	;volatile
  5995                           
  5996                           ;ADC.c: 21: PCFG2=1;
  5997  0B16  151F               	bsf	31,2	;volatile
  5998                           
  5999                           ;ADC.c: 22: PCFG3=0;
  6000  0B17  119F               	bcf	31,3	;volatile
  6001                           
  6002                           ;ADC.c: 24: ADFM=1;
  6003  0B18  179F               	bsf	31,7	;volatile
  6004                           
  6005                           ;ADC.c: 27: Vref=Uref;
  6006  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  6007  0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  6008  0B1B  082D               	movf	ADC_Init@Uref,w
  6009  0B1C  120A  158A  2344   	fcall	___lbtoft
  6010  0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  6011  0B20  1303               	bcf	3,6	;RP1=0, select bank0
  6012  0B21  0825               	movf	?___lbtoft,w
  6013  0B22  00F7               	movwf	_Vref
  6014  0B23  0826               	movf	?___lbtoft+1,w
  6015  0B24  00F8               	movwf	_Vref+1
  6016  0B25  0827               	movf	?___lbtoft+2,w
  6017  0B26  00F9               	movwf	_Vref+2
  6018  0B27  0008               	return
  6019  0B28                     __end_of_ADC_Init:	
  6020                           
  6021                           	psect	text29
  6022  0B44                     __ptext29:	
  6023 ;; *************** function ___lbtoft *****************
  6024 ;; Defined at:
  6025 ;;		line 27 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\lbtoft.c"
  6026 ;; Parameters:    Size  Location     Type
  6027 ;;  c               1    wreg     unsigned char 
  6028 ;; Auto vars:     Size  Location     Type
  6029 ;;  c               1   12[BANK0 ] unsigned char 
  6030 ;; Return value:  Size  Location     Type
  6031 ;;                  3    5[BANK0 ] float 
  6032 ;; Registers used:
  6033 ;;		wreg, status,2, status,0, pclath, cstack
  6034 ;; Tracked objects:
  6035 ;;		On entry : 0/0
  6036 ;;		On exit  : 0/0
  6037 ;;		Unchanged: 0/0
  6038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6039 ;;      Params:         0       3       0       0       0
  6040 ;;      Locals:         0       1       0       0       0
  6041 ;;      Temps:          0       4       0       0       0
  6042 ;;      Totals:         0       8       0       0       0
  6043 ;;Total ram usage:        8 bytes
  6044 ;; Hardware stack levels used:    1
  6045 ;; Hardware stack levels required when called:    3
  6046 ;; This function calls:
  6047 ;;		___ftpack
  6048 ;; This function is called by:
  6049 ;;		_ADC_Init
  6050 ;; This function uses a non-reentrant model
  6051 ;;
  6052                           
  6053                           
  6054                           ;psect for function ___lbtoft
  6055  0B44                     ___lbtoft:	
  6056                           
  6057                           ;incstack = 0
  6058                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  6059                           ;___lbtoft@c stored from wreg
  6060  0B44  1283               	bcf	3,5	;RP0=0, select bank0
  6061  0B45  1303               	bcf	3,6	;RP1=0, select bank0
  6062  0B46  00AC               	movwf	___lbtoft@c
  6063  0B47  082C               	movf	___lbtoft@c,w
  6064  0B48  00A8               	movwf	??___lbtoft
  6065  0B49  01A9               	clrf	??___lbtoft+1
  6066  0B4A  01AA               	clrf	??___lbtoft+2
  6067  0B4B  0828               	movf	??___lbtoft,w
  6068  0B4C  00A0               	movwf	___ftpack@arg
  6069  0B4D  0829               	movf	??___lbtoft+1,w
  6070  0B4E  00A1               	movwf	___ftpack@arg+1
  6071  0B4F  082A               	movf	??___lbtoft+2,w
  6072  0B50  00A2               	movwf	___ftpack@arg+2
  6073  0B51  308E               	movlw	142
  6074  0B52  00AB               	movwf	??___lbtoft+3
  6075  0B53  082B               	movf	??___lbtoft+3,w
  6076  0B54  00A3               	movwf	___ftpack@exp
  6077  0B55  01A4               	clrf	___ftpack@sign
  6078  0B56  120A  158A  24E2   	fcall	___ftpack
  6079  0B59  1283               	bcf	3,5	;RP0=0, select bank0
  6080  0B5A  1303               	bcf	3,6	;RP1=0, select bank0
  6081  0B5B  0820               	movf	?___ftpack,w
  6082  0B5C  00A5               	movwf	?___lbtoft
  6083  0B5D  0821               	movf	?___ftpack+1,w
  6084  0B5E  00A6               	movwf	?___lbtoft+1
  6085  0B5F  0822               	movf	?___ftpack+2,w
  6086  0B60  00A7               	movwf	?___lbtoft+2
  6087  0B61  0008               	return
  6088  0B62                     __end_of___lbtoft:	
  6089                           
  6090                           	psect	text30
  6091  0CE2                     __ptext30:	
  6092 ;; *************** function ___ftpack *****************
  6093 ;; Defined at:
  6094 ;;		line 62 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\float.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;  arg             3    0[BANK0 ] unsigned um
  6097 ;;  exp             1    3[BANK0 ] unsigned char 
  6098 ;;  sign            1    4[BANK0 ] unsigned char 
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;		None
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  3    0[BANK0 ] float 
  6103 ;; Registers used:
  6104 ;;		wreg, status,2, status,0
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6110 ;;      Params:         0       5       0       0       0
  6111 ;;      Locals:         0       0       0       0       0
  6112 ;;      Temps:          3       0       0       0       0
  6113 ;;      Totals:         3       5       0       0       0
  6114 ;;Total ram usage:        8 bytes
  6115 ;; Hardware stack levels used:    1
  6116 ;; Hardware stack levels required when called:    2
  6117 ;; This function calls:
  6118 ;;		Nothing
  6119 ;; This function is called by:
  6120 ;;		___ftadd
  6121 ;;		___ftdiv
  6122 ;;		___lbtoft
  6123 ;;		___lwtoft
  6124 ;;		___ftmul
  6125 ;;		___altoft
  6126 ;; This function uses a non-reentrant model
  6127 ;;
  6128                           
  6129                           
  6130                           ;psect for function ___ftpack
  6131  0CE2                     ___ftpack:	
  6132                           
  6133                           ;incstack = 0
  6134                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6135  0CE2  1283               	bcf	3,5	;RP0=0, select bank0
  6136  0CE3  1303               	bcf	3,6	;RP1=0, select bank0
  6137  0CE4  0823               	movf	___ftpack@exp,w
  6138  0CE5  1903               	btfsc	3,2
  6139  0CE6  2CEC               	goto	l2569
  6140  0CE7  0822               	movf	___ftpack@arg+2,w
  6141  0CE8  0421               	iorwf	___ftpack@arg+1,w
  6142  0CE9  0420               	iorwf	___ftpack@arg,w
  6143  0CEA  1D03               	skipz
  6144  0CEB  2CFF               	goto	l2575
  6145  0CEC                     l2569:	
  6146  0CEC  3000               	movlw	0
  6147  0CED  00A0               	movwf	?___ftpack
  6148  0CEE  3000               	movlw	0
  6149  0CEF  00A1               	movwf	?___ftpack+1
  6150  0CF0  3000               	movlw	0
  6151  0CF1  00A2               	movwf	?___ftpack+2
  6152  0CF2  0008               	return
  6153  0CF3                     l2573:	
  6154  0CF3  3001               	movlw	1
  6155  0CF4  00F4               	movwf	??___ftpack
  6156  0CF5  0874               	movf	??___ftpack,w
  6157  0CF6  07A3               	addwf	___ftpack@exp,f
  6158  0CF7  3001               	movlw	1
  6159  0CF8                     u2915:	
  6160  0CF8  1003               	clrc
  6161  0CF9  0CA2               	rrf	___ftpack@arg+2,f
  6162  0CFA  0CA1               	rrf	___ftpack@arg+1,f
  6163  0CFB  0CA0               	rrf	___ftpack@arg,f
  6164  0CFC  3EFF               	addlw	-1
  6165  0CFD  1D03               	skipz
  6166  0CFE  2CF8               	goto	u2915
  6167  0CFF                     l2575:	
  6168  0CFF  30FE               	movlw	254
  6169  0D00  0522               	andwf	___ftpack@arg+2,w
  6170  0D01  1903               	btfsc	3,2
  6171  0D02  2D1A               	goto	l678
  6172  0D03  2CF3               	goto	l2573
  6173  0D04                     l2577:	
  6174  0D04  3001               	movlw	1
  6175  0D05  00F4               	movwf	??___ftpack
  6176  0D06  0874               	movf	??___ftpack,w
  6177  0D07  07A3               	addwf	___ftpack@exp,f
  6178  0D08  3001               	movlw	1
  6179  0D09  07A0               	addwf	___ftpack@arg,f
  6180  0D0A  3000               	movlw	0
  6181  0D0B  1803               	skipnc
  6182  0D0C  3001               	movlw	1
  6183  0D0D  07A1               	addwf	___ftpack@arg+1,f
  6184  0D0E  3000               	movlw	0
  6185  0D0F  1803               	skipnc
  6186  0D10  3001               	movlw	1
  6187  0D11  07A2               	addwf	___ftpack@arg+2,f
  6188  0D12  3001               	movlw	1
  6189  0D13                     u2935:	
  6190  0D13  1003               	clrc
  6191  0D14  0CA2               	rrf	___ftpack@arg+2,f
  6192  0D15  0CA1               	rrf	___ftpack@arg+1,f
  6193  0D16  0CA0               	rrf	___ftpack@arg,f
  6194  0D17  3EFF               	addlw	-1
  6195  0D18  1D03               	skipz
  6196  0D19  2D13               	goto	u2935
  6197  0D1A                     l678:	
  6198  0D1A  30FF               	movlw	255
  6199  0D1B  0522               	andwf	___ftpack@arg+2,w
  6200  0D1C  1903               	btfsc	3,2
  6201  0D1D  2D29               	goto	l2585
  6202  0D1E  2D04               	goto	l2577
  6203  0D1F                     l2583:	
  6204  0D1F  3001               	movlw	1
  6205  0D20  02A3               	subwf	___ftpack@exp,f
  6206  0D21  3001               	movlw	1
  6207  0D22                     u2955:	
  6208  0D22  1003               	clrc
  6209  0D23  0DA0               	rlf	___ftpack@arg,f
  6210  0D24  0DA1               	rlf	___ftpack@arg+1,f
  6211  0D25  0DA2               	rlf	___ftpack@arg+2,f
  6212  0D26  3EFF               	addlw	-1
  6213  0D27  1D03               	skipz
  6214  0D28  2D22               	goto	u2955
  6215  0D29                     l2585:	
  6216  0D29  1BA1               	btfsc	___ftpack@arg+1,7
  6217  0D2A  2D2F               	goto	l685
  6218  0D2B  3002               	movlw	2
  6219  0D2C  0223               	subwf	___ftpack@exp,w
  6220  0D2D  1803               	skipnc
  6221  0D2E  2D1F               	goto	l2583
  6222  0D2F                     l685:	
  6223  0D2F  1823               	btfsc	___ftpack@exp,0
  6224  0D30  2D37               	goto	l686
  6225  0D31  30FF               	movlw	255
  6226  0D32  05A0               	andwf	___ftpack@arg,f
  6227  0D33  307F               	movlw	127
  6228  0D34  05A1               	andwf	___ftpack@arg+1,f
  6229  0D35  30FF               	movlw	255
  6230  0D36  05A2               	andwf	___ftpack@arg+2,f
  6231  0D37                     l686:	
  6232  0D37  1003               	clrc
  6233  0D38  0CA3               	rrf	___ftpack@exp,f
  6234  0D39  0823               	movf	___ftpack@exp,w
  6235  0D3A  00F4               	movwf	??___ftpack
  6236  0D3B  01F5               	clrf	??___ftpack+1
  6237  0D3C  01F6               	clrf	??___ftpack+2
  6238  0D3D  3010               	movlw	16
  6239  0D3E                     u2995:	
  6240  0D3E  1003               	clrc
  6241  0D3F  0DF4               	rlf	??___ftpack,f
  6242  0D40  0DF5               	rlf	??___ftpack+1,f
  6243  0D41  0DF6               	rlf	??___ftpack+2,f
  6244  0D42  3EFF               	addlw	-1
  6245  0D43  1D03               	skipz
  6246  0D44  2D3E               	goto	u2995
  6247  0D45  0874               	movf	??___ftpack,w
  6248  0D46  04A0               	iorwf	___ftpack@arg,f
  6249  0D47  0875               	movf	??___ftpack+1,w
  6250  0D48  04A1               	iorwf	___ftpack@arg+1,f
  6251  0D49  0876               	movf	??___ftpack+2,w
  6252  0D4A  04A2               	iorwf	___ftpack@arg+2,f
  6253  0D4B  0824               	movf	___ftpack@sign,w
  6254  0D4C  1903               	btfsc	3,2
  6255  0D4D  0008               	return
  6256  0D4E  17A2               	bsf	___ftpack@arg+2,7
  6257  0D4F  0008               	return
  6258  0D50                     __end_of___ftpack:	
  6259                           
  6260                           	psect	text31
  6261  0AA3                     __ptext31:	
  6262 ;; *************** function _CallBack *****************
  6263 ;; Defined at:
  6264 ;;		line 166 in file "PWM.c"
  6265 ;; Parameters:    Size  Location     Type
  6266 ;;		None
  6267 ;; Auto vars:     Size  Location     Type
  6268 ;;		None
  6269 ;; Return value:  Size  Location     Type
  6270 ;;                  1    wreg      void 
  6271 ;; Registers used:
  6272 ;;		wreg, status,2, status,0, pclath, cstack
  6273 ;; Tracked objects:
  6274 ;;		On entry : 0/0
  6275 ;;		On exit  : 0/0
  6276 ;;		Unchanged: 0/0
  6277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6278 ;;      Params:         0       0       0       0       0
  6279 ;;      Locals:         0       0       0       0       0
  6280 ;;      Temps:          4       0       0       0       0
  6281 ;;      Totals:         4       0       0       0       0
  6282 ;;Total ram usage:        4 bytes
  6283 ;; Hardware stack levels used:    1
  6284 ;; Hardware stack levels required when called:    1
  6285 ;; This function calls:
  6286 ;;		_Strob
  6287 ;; This function is called by:
  6288 ;;		Interrupt level 1
  6289 ;; This function uses a non-reentrant model
  6290 ;;
  6291                           
  6292                           
  6293                           ;psect for function _CallBack
  6294  0AA3                     _CallBack:	
  6295                           
  6296                           ;PWM.c: 168: if(TMR1IF==1)
  6297  0AA3  1C0C               	btfss	12,0	;volatile
  6298  0AA4  2AB1               	goto	i1l195
  6299                           
  6300                           ;PWM.c: 169: {
  6301                           ;PWM.c: 170: Strob();
  6302  0AA5  120A  158A  22F0  120A  158A  	fcall	_Strob
  6303                           
  6304                           ;PWM.c: 171: TMR1=FreqTim;
  6305  0AAA  1283               	bcf	3,5	;RP0=0, select bank0
  6306  0AAB  1303               	bcf	3,6	;RP1=0, select bank0
  6307  0AAC  0861               	movf	_FreqTim+1,w
  6308  0AAD  008F               	movwf	15	;volatile
  6309  0AAE  0860               	movf	_FreqTim,w
  6310  0AAF  008E               	movwf	14	;volatile
  6311                           
  6312                           ;PWM.c: 173: TMR1IF=0;
  6313  0AB0  100C               	bcf	12,0	;volatile
  6314  0AB1                     i1l195:	
  6315  0AB1  0873               	movf	??_CallBack+3,w
  6316  0AB2  00FF               	movwf	127
  6317  0AB3  0872               	movf	??_CallBack+2,w
  6318  0AB4  008A               	movwf	10
  6319  0AB5  0871               	movf	??_CallBack+1,w
  6320  0AB6  0084               	movwf	4
  6321  0AB7  0E70               	swapf	??_CallBack^(0+-128),w
  6322  0AB8  0083               	movwf	3
  6323  0AB9  0EFE               	swapf	126,f
  6324  0ABA  0E7E               	swapf	126,w
  6325  0ABB  0009               	retfie
  6326  0ABC                     __end_of_CallBack:	
  6327                           
  6328                           	psect	intentry
  6329  0004                     __pintentry:	
  6330                           ;incstack = 0
  6331                           ; Regs used in _CallBack: [wreg+status,2+status,0+pclath+cstack]
  6332                           
  6333  0004                     interrupt_function:	
  6334  007E                     saved_w	set	btemp
  6335  0004  00FE               	movwf	btemp
  6336  0005  0E03               	swapf	3,w
  6337  0006  00F0               	movwf	??_CallBack
  6338  0007  0804               	movf	4,w
  6339  0008  00F1               	movwf	??_CallBack+1
  6340  0009  080A               	movf	10,w
  6341  000A  00F2               	movwf	??_CallBack+2
  6342  000B  1283               	bcf	3,5	;RP0=0, select bank0
  6343  000C  1303               	bcf	3,6	;RP1=0, select bank0
  6344  000D  087F               	movf	btemp+1,w
  6345  000E  00F3               	movwf	??_CallBack+3
  6346  000F  120A  158A  2AA3   	ljmp	_CallBack
  6347                           
  6348                           	psect	text32
  6349  0AF0                     __ptext32:	
  6350 ;; *************** function _Strob *****************
  6351 ;; Defined at:
  6352 ;;		line 182 in file "PWM.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;		None
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;		None
  6357 ;; Return value:  Size  Location     Type
  6358 ;;                  1    wreg      void 
  6359 ;; Registers used:
  6360 ;;		None
  6361 ;; Tracked objects:
  6362 ;;		On entry : 0/0
  6363 ;;		On exit  : 0/0
  6364 ;;		Unchanged: 0/0
  6365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6366 ;;      Params:         0       0       0       0       0
  6367 ;;      Locals:         0       0       0       0       0
  6368 ;;      Temps:          0       0       0       0       0
  6369 ;;      Totals:         0       0       0       0       0
  6370 ;;Total ram usage:        0 bytes
  6371 ;; Hardware stack levels used:    1
  6372 ;; This function calls:
  6373 ;;		Nothing
  6374 ;; This function is called by:
  6375 ;;		_CallBack
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379                           
  6380                           ;psect for function _Strob
  6381  0AF0                     _Strob:	
  6382                           
  6383                           ;PWM.c: 184: PORTCbits.RC2=1;
  6384                           
  6385                           ;incstack = 0
  6386                           ; Regs used in _Strob: []
  6387  0AF0  1283               	bcf	3,5	;RP0=0, select bank0
  6388  0AF1  1303               	bcf	3,6	;RP1=0, select bank0
  6389  0AF2  1507               	bsf	7,2	;volatile
  6390  0AF3  0000               	nop	;# 
  6391  0AF4  0000               	nop	;# 
  6392  0AF5  0000               	nop	;# 
  6393  0AF6  0000               	nop	;# 
  6394  0AF7  0000               	nop	;# 
  6395  0AF8  0000               	nop	;# 
  6396  0AF9  0000               	nop	;# 
  6397  0AFA  0000               	nop	;# 
  6398  0AFB  0000               	nop	;# 
  6399  0AFC  0000               	nop	;# 
  6400  0AFD  0000               	nop	;# 
  6401  0AFE  0000               	nop	;# 
  6402  0AFF  0000               	nop	;# 
  6403  0B00  0000               	nop	;# 
  6404  0B01  0000               	nop	;# 
  6405  0B02  0000               	nop	;# 
  6406  0B03  0000               	nop	;# 
  6407  0B04  0000               	nop	;# 
  6408  0B05  0000               	nop	;# 
  6409  0B06  0000               	nop	;# 
  6410  0B07  0000               	nop	;# 
  6411                           
  6412                           ;PWM.c: 192: PORTCbits.RC2=0;
  6413  0B08  1283               	bcf	3,5	;RP0=0, select bank0
  6414  0B09  1303               	bcf	3,6	;RP1=0, select bank0
  6415  0B0A  1107               	bcf	7,2	;volatile
  6416  0B0B  0008               	return
  6417  0B0C                     __end_of_Strob:	
  6418  007E                     btemp	set	126	;btemp
  6419  007E                     wtemp0	set	126


Data Sizes:
    Strings     61
    Constant    930
    Data        7
    BSS         41
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     64      72
    BANK1            80     10      50
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_4(CODE[19]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 40
		 -> dataFreq(BANK1[40]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_printStringXY@str	PTR unsigned char  size(2) Largest target is 120
		 -> STR_5(CODE[11]), dataFreq(BANK1[40]), data(CODE[120]), STR_3(CODE[10]), 
		 -> STR_2(CODE[10]), STR_1(CODE[11]), 

    lcd_printString@str	PTR unsigned char  size(2) Largest target is 120
		 -> STR_5(CODE[11]), dataFreq(BANK1[40]), data(CODE[120]), STR_3(CODE[10]), 
		 -> STR_2(CODE[10]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->___lwdiv
    _main->_check_button
    _sprintf->___lwdiv
    ___lwdiv->___lwmod
    _lcd_printString->_lcd_Print_char
    _lcd_Print_char->_Send_Data
    _lcd_gotoxy->_Send_command
    _lcd_init->_Send_command
    _Send_command->_Send_Data
    _ReadValue->_ADC_Read
    _Set_Freq_Value->_ADC_Read
    ___lwtoft->___ftpack
    ___ftdiv->___ftpack
    ___ftadd->___ftpack
    ___lbtoft->___ftpack

Critical Paths under _CallBack in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ReadValue
    _sprintf->___lwdiv
    ___lwdiv->___lwmod
    _lcd_printStringXY->_lcd_gotoxy
    _ReadValue->_Set_Freq_Value
    _Set_Freq_Value->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftadd
    ___ftneg->___ftdiv
    ___ftdiv->___lwtoft
    ___ftadd->___ftneg
    _ADC_Init->___lbtoft
    ___lbtoft->___ftpack

Critical Paths under _CallBack in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _CallBack in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _CallBack in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _CallBack in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                52    52      0   18869
                                             62 BANK0      2     2      0
                                              0 BANK1     10    10      0
                           _ADC_Init
                      _DIRECTION_SET
                       _ENABLE_RESET
                         _ENABLE_SET
                          _Port_Init
                          _ReadValue
                        _Start_Timer
                         _Stop_Timer
                        _Timer1_init
                            ___lwdiv
                            ___lwmod
                       _check_button
                 _check_buttonSelect
                           _lcd_init
                  _lcd_printStringXY
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             28    18     10    2304
                                             11 BANK0     20    10     10
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     752
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     761
                                              6 COMMON     1     1      0
                                              4 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_printStringXY                                    5     1      4    2681
                                              4 BANK0      5     1      4
                         _lcd_gotoxy
                    _lcd_printString
 ---------------------------------------------------------------------------------
 (2) _lcd_printString                                      2     0      2     316
                                              0 BANK0      2     0      2
                     _lcd_Print_char
 ---------------------------------------------------------------------------------
 (3) _lcd_Print_char                                       2     2      0     186
                                              5 COMMON     2     2      0
                          _Send_Data
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           4     3      1     712
                                              0 BANK0      4     3      1
                       _Send_command
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     229
                                              0 BANK0      3     3      0
                       _Send_command
 ---------------------------------------------------------------------------------
 (3) _Send_command                                         2     2      0     155
                                              5 COMMON     2     2      0
                          _Send_Data
 ---------------------------------------------------------------------------------
 (4) _Send_Data                                            1     1      0     124
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _check_buttonSelect                                   4     4      0     105
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _check_button                                         3     3      0      74
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Stop_Timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Start_Timer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadValue                                            2     0      2    9515
                                             60 BANK0      2     0      2
                           _ADC_Read
                     _Set_Freq_Value
 ---------------------------------------------------------------------------------
 (2) _Set_Freq_Value                                       5     3      2    9453
                                             55 BANK0      5     3      2
                           _ADC_Read (ARG)
                            ___ftadd
                            ___ftdiv
                            ___ftneg
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             4     1      3    2253
                                              5 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     501
                                             41 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     130
                                             25 BANK0      3     0      3
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2902
                                              9 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3537
                                             28 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      62
                                              4 COMMON     3     1      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Port_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ENABLE_SET                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ENABLE_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DIRECTION_SET                                        1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             1     1      0    2154
                                             13 BANK0      1     1      0
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             8     5      3    2123
                                              5 BANK0      8     5      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2092
                                              4 COMMON     3     3      0
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _CallBack                                             4     4      0       0
                                              0 COMMON     4     4      0
                              _Strob
 ---------------------------------------------------------------------------------
 (6) _Strob                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
     ___lbtoft
       ___ftpack
   _DIRECTION_SET
   _ENABLE_RESET
   _ENABLE_SET
   _Port_Init
   _ReadValue
     _ADC_Read
     _Set_Freq_Value
       _ADC_Read (ARG)
       ___ftadd (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
       ___lwtoft (ARG)
         ___ftpack
   _Start_Timer
   _Stop_Timer
   _Timer1_init
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod
   _check_button
   _check_buttonSelect
   _lcd_init
     _Send_command
       _Send_Data
   _lcd_printStringXY
     _lcd_gotoxy
       _Send_command
         _Send_Data
     _lcd_printString
       _lcd_Print_char
         _Send_Data
   _sprintf
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod

 _CallBack (ROOT)
   _Strob

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      A      32       7       62.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     40      48       5       90.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      84      12        0.0%
ABS                  0      0      84       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Apr 06 12:53:07 2018

                          pc 0002         __end_of_ENABLE_RESET 0A0A                Send_Data@data 0074  
                         l71 0A76                           l73 0A7C                           l74 0A8A  
                         l77 0ABF                           l79 0AD1                           l87 0AEC  
                         l97 06AF                           fsr 0004                 ___ftadd@exp1 0048  
               ___ftadd@exp2 0047                 ___ftadd@sign 0046                          l234 0BFE  
                        l360 00F5                          l361 00F9                          l362 00FA  
                        l363 00FE                          l357 00ED                          l358 00F0  
                        l359 00F4                          l392 0DF1                          l709 0798  
                        l399 0E76                          l685 0D2F                          l686 0D37  
                        l678 0D1A                          l769 0DC4                          _GIE 005F  
                        _RA4 002C                          _RA5 002D                          _RC5 003D  
       __end_of_check_button 0AD5                          _PR2 0092                 main@Frequnsy 00D0  
                        fsr0 0004                  lcd_init@lcd 0022                          indf 0000  
                lcd_gotoxy@x 0022                  lcd_gotoxy@y 0020                 ___ftdiv@cntr 0033  
           ??_lcd_Print_char 0075                 ___ftdiv@sign 0038                         l3021 0F7C  
                       l3005 0F5F                         l3015 0F76                         l3041 0FB4  
                       l3033 0FB0                         l3027 0FA1                         l3043 0F1D  
                       l3045 0FFB                         l3061 0515                         l3081 056B  
                       l3073 0540                         l3057 0507                         l3077 0551  
                       l2631 0720                         l2703 005C                         l3087 0585  
                       l3089 058F                         l2627 0719                         l2811 0B62  
                       l2573 0CF3                         l2661 0773                         l2637 072F  
                       l2725 00C0                         l2717 00A1                         l2583 0D1F  
                       l2575 0CFF                         l2655 075E                         l2903 0C36  
                       l2585 0D29                         l2577 0D04                         l2569 0CEC  
                       l2673 07AA                         l2657 076A                         l2649 0749  
                       l2833 0E0F                         l2667 0788                         l2659 076F  
                       l2747 0D6A                         l2827 0DF4                         l2819 0DE9  
                       l2917 0A82                         l2677 07BC                         l2669 0794  
                       l2773 0DB9                         l2765 0D9C                         l2925 0AD3  
                       l2845 0E49                         l2853 0E66                         l2687 07DF  
                       l2775 0DC7                         l2767 0DAC                         l2935 0ADB  
                       l2839 0E2C                         l2871 0C53                         l2697 0046  
                       l2937 0AEE                         l2961 0E86                         l2881 0C74  
                       l2795 0BE1                         l2779 0DD5                         l2955 0E7F  
                       l2957 0E82                         l2965 0E8B                         l2877 0C69  
                       l2869 0C45                         l2893 0C0F                         l2959 0E84  
                       l2967 0E9A                         l2895 0C1D                         l2899 0C2B  
                       l2999 0F43                         _ADFM 04FF                         _ADON 00F8  
                       STR_1 04C7                         STR_2 04DD                         STR_3 04E7  
                       STR_4 04B4                         STR_5 04D2                         u3015 0BB7  
                       u3115 074A                         u3205 0789                         u3145 075F  
                       u3305 00A2                         u3315 00B3                         u4107 0EC9  
                       u3325 00C1                         u4117 0ED6                         u3175 0774  
                       u4127 0A58                         u4137 0BF8                         u3425 0DBB  
                       u3515 0DFC                         u4067 0BD3                         u3285 006E  
                       u3365 0D71                         u4077 0EA0                         u3525 0E19  
                       u3605 0C6A                         u3295 0080                         u4087 0EAF  
                       u3535 0E36                         u3465 0BEA                         u4097 0EBC  
                       u3545 0E53                         u2915 0CF8                         u3395 0D9D  
                       u3635 0C12                         _PEIE 005E                         u3565 0C48  
                       u2935 0D13                         u3655 0C23                         u3585 0C54  
                       u3665 0C2C                         u2955 0D22                         u3595 0C60  
                       u3755 0F97                         u2995 0D3E                         _TMR1 000E  
                       _Freq 0063          __size_of_ENABLE_SET 0005                         _Vref 0077  
                       _data 043C                         _main 04F1                 ___ftpack@arg 0020  
               ___ftpack@exp 0023                         btemp 007E             __end_of_ADC_Init 0B28  
           __end_of_ADC_Read 0C07                         start 0012        __end_of_DIRECTION_SET 0A8B  
               ___fttol@exp1 0056   check_buttonSelect@butcount 0021                 ___fttol@lval 0052  
                      _ADCS0 00FE                        _ADCS1 00FF                        ?_main 0070  
                      _CCP1X 00BD                        _CCP1Y 00BC              __end_of___ftadd 07F9  
            __end_of___ftdiv 00E6              __end_of___ftneg 0A21              __end_of___fttol 0DDE  
                      _PCFG0 04F8                        _PCFG1 04F9                        _PCFG2 04FA  
                      _PCFG3 04FB              __end_of___lwdiv 0C79              __end_of___lwmod 0C3B  
                      i1l195 0AB1                        _PORTD 0008                        _TRISB 0086  
                      _TRISD 0088                        _Strob 0AF0              __end_of_dpowers 043C  
              ___ftpack@sign 0024                        pclath 000A             __end_of_CallBack 0ABC  
                      status 0003                        wtemp0 007E              __end_of_sprintf 1000  
           ?_lcd_printString 0020              __initialization 0015                 __end_of_data 04B4  
               __end_of_main 06F0                       ??_main 005E                ___fttol@sign1 0051  
       lcd_printStringXY@str 0024                       ?_Strob 0070                       _ADCON0 001F  
                     _CCP1M2 00BA                       _CCP1M3 00BB                       _ADRESH 001E  
                     _ADRESL 009E                       _CCPR1L 0015             __end_of___ftpack 0D50  
           __end_of___lbtoft 0B62             __end_of___lwtoft 0AA3                       _TMR1IE 0460  
                     _TMR1IF 0060                       _TMR1CS 0081                       _TMR1ON 0080  
                     _TMR2ON 0092                       _TRISA4 042C                       _TRISA5 042D  
                     _TRISC2 043A                       _TRISC3 043B                       _TRISC4 043C  
                     _TRISE0 0448                       _TRISC5 043D                       _TRISB7 0437  
                     _TRISE1 0449                       _TRISC6 043E                       _TRISE2 044A  
         __size_of_ReadValue 001C        __size_of_ENABLE_RESET 0005                ??_Timer1_init 0074  
           __end_of_lcd_init 0F16           __size_of_Send_Data 001A                    ??___ftadd 0042  
                  ??___ftdiv 002F                    ??___ftneg 0077                    ??___fttol 004D  
      __size_of_check_button 0019                    ??___lwdiv 0076                 ??_ENABLE_SET 0074  
                  ??___lwmod 0074              ADC_Read@channel 0076                       _symbol 0112  
         __size_of_Port_Init 0029   __end_of_check_buttonSelect 0AF0                    ?_ADC_Init 0070  
                  ?_ADC_Read 0074             ??_Set_Freq_Value 0077                       saved_w 007E  
                  ??_sprintf 0035                 _ENABLE_RESET 0A05      __end_of__initialization 002A  
         __end_of_ENABLE_SET 0A0F                   ___ftadd@f1 003C                   ___ftadd@f2 003F  
                 _Stop_Timer 0A01                 _check_button 0ABC                ?_Send_command 0070  
                 ___ftdiv@f1 002C                   ___ftdiv@f2 0029                   ___ftdiv@f3 0034  
                 ___ftneg@f1 0039                   ___lbtoft@c 002C                   ___fttol@f1 0049  
             __pcstackCOMMON 0070                 __pidataBANK0 07F9                __end_of_Strob 0B0C  
              ??_Start_Timer 0074          __end_of_Timer1_init 0A48                   ___lwtoft@c 0025  
                  ?_CallBack 0070               lcd_gotoxy@temp 0023            __end_of_ReadValue 0B44  
                 ??_ADC_Init 0077                   ??_ADC_Read 0020                      ??_Strob 0070  
          __end_of_Send_Data 0100                   __pbssBANK0 0067                   __pbssBANK1 00A0  
                 __pnvCOMMON 0077               ??_Send_command 0075            __end_of_Port_Init 0BB0  
                 __pmaintext 04F1                   __pintentry 0004                   _flag_count 0062  
                  ?___ftpack 0020                    ?___lbtoft 0025                   ??_CallBack 0070  
                    _T1CKPS0 0084                      _T1CKPS1 0085                      _T2CKPS0 0090  
                    _T2CKPS1 0091                    ?___lwtoft 0025                      _T1OSCEN 0083  
        __end_of_Start_Timer 0A01                   _lcd_gotoxy 0DDE                    ?_lcd_init 0070  
                 __stringtab 0100                  ?_Stop_Timer 0070                      _FreqTim 0060  
               ADC_Init@Uref 002D                  _Timer1_init 0A32                      ___ftadd 06F0  
                    ___ftdiv 002E                      ___ftneg 0A17                      ___fttol 0D50  
                    ___lwdiv 0C3B                      ___lwmod 0C07                   ??___ftpack 0074  
                 ??___lbtoft 0028                      __ptext1 0F16                      __ptext2 0C07  
                    __ptext3 0C3B                      __ptext4 0A5E                      __ptext5 0B62  
                    __ptext6 0BB0                      __ptext7 0DDE                      __ptext8 0E77  
                    __ptext9 0A48                   ??___lwtoft 0028                      _dpowers 0432  
     __size_of_DIRECTION_SET 0017                      _sprintf 0F16                      clrloop0 0A10  
                 ??_lcd_init 0020         end_of_initialization 002A      __size_of_lcd_Print_char 0029  
   __size_of_lcd_printString 0025            _lcd_printStringXY 0A5E                 __pstringtext 0100  
                _Start_Timer 09FD           ?_lcd_printStringXY 0024                    _PORTAbits 0005  
                  _PORTBbits 0006                    _PORTCbits 0007                    _PORTDbits 0008  
                  _PORTEbits 0009         __end_of_Send_command 0A5E          __size_of_Stop_Timer 0004  
        ??_lcd_printStringXY 0028                    _TRISBbits 0086                  ?_lcd_gotoxy 0020  
          __size_of_ADC_Init 001C            __size_of_ADC_Read 002E                  ___ftdiv@exp 0037  
         _check_buttonSelect 0AD5    __end_of_lcd_printStringXY 0A74                _DIRECTION_SET 0A74  
        ?_check_buttonSelect 0070           lcd_printStringXY@x 0026           lcd_printStringXY@y 0027  
         lcd_printString@str 0020               __end_of_symbol 0432          start_initialization 0015  
          __size_of_CallBack 0019         ??_check_buttonSelect 0074                    _ReadValue 0B28  
                  _Send_Data 00E6               ?_DIRECTION_SET 0070          __size_of_lcd_gotoxy 0099  
                 init_fetch0 0A21                    _Port_Init 0B87                  __pdataBANK0 0060  
          ??_lcd_printString 0077            __size_of___ftpack 006E            __size_of___lbtoft 001E  
                  ___latbits 0002            __size_of___lwtoft 0018                __pcstackBANK0 0020  
              __pcstackBANK1 00C8                   ?_ReadValue 005C            __size_of_lcd_init 009F  
                sprintf@flag 0039                   ?_Send_Data 0070                  sprintf@prec 003A  
               ??_Stop_Timer 0074      __size_of_Set_Freq_Value 0069               _lcd_Print_char 0BB0  
           ___lwdiv@dividend 0026   __size_of_lcd_printStringXY 0016                 ?_Timer1_init 0070  
                  _flag_Work 0067         check_button@butcount 0074           check_button@result 0076  
                   ?___ftadd 003C                     ?___ftdiv 0029                     ?___ftneg 0039  
                 ?_Port_Init 0070                     ?___fttol 0049                     ?___lwdiv 0024  
                   ?___lwmod 0020        __size_of_Send_command 0016                     _ADC_Init 0B0C  
                   _ADC_Read 0BD9           __end_of_Stop_Timer 0A05               __size_of_Strob 001C  
           ___lwdiv@quotient 0029                     ?_sprintf 002B              Send_command@com 0076  
          interrupt_function 0004       __end_of_lcd_Print_char 0BD9                    clear_ram0 0A0F  
            ??_DIRECTION_SET 0074                 _Send_command 0A48                     _GO_nDONE 00FA  
               ?_Start_Timer 0070             DIRECTION_SET@dir 0074                  __stringbase 0112  
                   _CallBack 0AA3                 ??_lcd_gotoxy 0021                  ??_ReadValue 0077  
              ?_ENABLE_RESET 0070                  ??_Send_Data 0074              ?_lcd_Print_char 0070  
              ?_check_button 0070                  ??_Port_Init 0074           __end_of_lcd_gotoxy 0E77  
                 _ENABLE_SET 0A0A             __size_of___ftadd 0109             __size_of___ftdiv 00B8  
           __size_of___ftneg 000A          Set_Freq_Value@value 0057             __size_of___fttol 008E  
           __size_of___lwdiv 003E             __size_of___lwmod 0034                     ___ftpack 0CE2  
                   ___lbtoft 0B44           __end_of__stringtab 0112                     ___lwtoft 0A8B  
                 sprintf@val 003B                     _dataFreq 00A0     check_buttonSelect@result 0023  
                   _main$953 00C8                     _main$954 00CA                     _main$955 00CC  
                   _main$956 00CE              ___lwdiv@divisor 0024              ___lwdiv@counter 0028  
                   __ptext10 00E6                     __ptext11 0AD5                     __ptext20 0A17  
                   __ptext12 0ABC                     __ptext21 002E                     __ptext13 0A32  
                   __ptext30 0CE2                     __ptext22 06F0                     __ptext14 0A01  
                   __ptext31 0AA3                     __ptext23 0BD9                     __ptext15 09FD  
                   __ptext32 0AF0                     __ptext24 0B87                     __ptext16 0B28  
                   __ptext25 0A0A                     __ptext17 0C79                     __ptext26 0A05  
                   __ptext18 0A8B                     __ptext27 0A74                     __ptext19 0D50  
                   __ptext28 0B0C                     __ptext29 0B44               ??_ENABLE_RESET 0074  
                   _lcd_init 0E77             __size_of_sprintf 00EA               _Set_Freq_Value 0C79  
             ??_check_button 0074                __size_of_main 01FF           lcd_Print_char@data 0076  
            _lcd_printString 0B62         __size_of_Timer1_init 0016                     init_ram0 0A25  
__size_of_check_buttonSelect 001B       __end_of_Set_Freq_Value 0CE2                     intlevel1 0000  
                  sprintf@ap 0038                    sprintf@sp 003D             ___lwmod@dividend 0022  
                  stringcode 010A                  ?_ENABLE_SET 0070            Set_Freq_Value@val 0059  
       __size_of_Start_Timer 0004       check_buttonSelect@flag 0020                     sprintf@c 003E  
                   sprintf@f 002B              ___lwmod@divisor 0020              ___lwmod@counter 0075  
                   stringtab 0100              ?_Set_Freq_Value 0057      __end_of_lcd_printString 0B87  
