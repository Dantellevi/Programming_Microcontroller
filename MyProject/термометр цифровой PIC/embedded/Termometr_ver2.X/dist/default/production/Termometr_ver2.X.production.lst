

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Apr 26 14:22:25 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 1.45
    42                           ; Generated 16/11/2017 GMT
    43                           ; 
    44                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F877 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0088                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009E                     	;# 
   184  009F                     	;# 
   185  010C                     	;# 
   186  010D                     	;# 
   187  010E                     	;# 
   188  010F                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191  0000                     	;# 
   192  0001                     	;# 
   193  0002                     	;# 
   194  0003                     	;# 
   195  0004                     	;# 
   196  0005                     	;# 
   197  0006                     	;# 
   198  0007                     	;# 
   199  0008                     	;# 
   200  0009                     	;# 
   201  000A                     	;# 
   202  000B                     	;# 
   203  000C                     	;# 
   204  000D                     	;# 
   205  000E                     	;# 
   206  000E                     	;# 
   207  000F                     	;# 
   208  0010                     	;# 
   209  0011                     	;# 
   210  0012                     	;# 
   211  0013                     	;# 
   212  0014                     	;# 
   213  0015                     	;# 
   214  0015                     	;# 
   215  0016                     	;# 
   216  0017                     	;# 
   217  0018                     	;# 
   218  0019                     	;# 
   219  001A                     	;# 
   220  001B                     	;# 
   221  001B                     	;# 
   222  001C                     	;# 
   223  001D                     	;# 
   224  001E                     	;# 
   225  001F                     	;# 
   226  0081                     	;# 
   227  0085                     	;# 
   228  0086                     	;# 
   229  0087                     	;# 
   230  0088                     	;# 
   231  0089                     	;# 
   232  008C                     	;# 
   233  008D                     	;# 
   234  008E                     	;# 
   235  0091                     	;# 
   236  0092                     	;# 
   237  0093                     	;# 
   238  0094                     	;# 
   239  0098                     	;# 
   240  0099                     	;# 
   241  009E                     	;# 
   242  009F                     	;# 
   243  010C                     	;# 
   244  010D                     	;# 
   245  010E                     	;# 
   246  010F                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249  0000                     	;# 
   250  0001                     	;# 
   251  0002                     	;# 
   252  0003                     	;# 
   253  0004                     	;# 
   254  0005                     	;# 
   255  0006                     	;# 
   256  0007                     	;# 
   257  0008                     	;# 
   258  0009                     	;# 
   259  000A                     	;# 
   260  000B                     	;# 
   261  000C                     	;# 
   262  000D                     	;# 
   263  000E                     	;# 
   264  000E                     	;# 
   265  000F                     	;# 
   266  0010                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0013                     	;# 
   270  0014                     	;# 
   271  0015                     	;# 
   272  0015                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001B                     	;# 
   280  001C                     	;# 
   281  001D                     	;# 
   282  001E                     	;# 
   283  001F                     	;# 
   284  0081                     	;# 
   285  0085                     	;# 
   286  0086                     	;# 
   287  0087                     	;# 
   288  0088                     	;# 
   289  0089                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  0091                     	;# 
   294  0092                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0098                     	;# 
   298  0099                     	;# 
   299  009E                     	;# 
   300  009F                     	;# 
   301  010C                     	;# 
   302  010D                     	;# 
   303  010E                     	;# 
   304  010F                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0094                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365                           
   366                           	psect	idataBANK0
   367  0004                     __pidataBANK0:	
   368                           
   369                           ;initializer for _ZNAK
   370  0004  3401               	retlw	1
   371                           
   372                           	psect	stringtext
   373  0800                     __pstringtext:	
   374  0800                     stringtab:	
   375  0800                     __stringtab:	
   376                           
   377                           ;	String table - string pointers are 2 bytes each
   378  0800  1BFF               	btfsc	btemp+1,7
   379  0801  280A               	ljmp	stringcode
   380  0802  1383               	bcf	3,7
   381  0803  187F               	btfsc	btemp+1,0
   382  0804  1783               	bsf	3,7
   383  0805  0800               	movf	0,w
   384  0806  0A84               	incf	4,f
   385  0807  1903               	skipnz
   386  0808  0AFF               	incf	btemp+1,f
   387  0809  0008               	return
   388  080A                     stringcode:	
   389  080A  087F               	movf	btemp+1,w
   390  080B  397F               	andlw	127
   391  080C  008A               	movwf	10
   392  080D  0804               	movf	4,w
   393  080E  0A84               	incf	4,f
   394  080F  1903               	skipnz
   395  0810  0AFF               	incf	btemp+1,f
   396  0811  0082               	movwf	2
   397  0812                     __stringbase:	
   398  0812                     __end_of__stringtab:	
   399  0812                     _dpowers:	
   400  0812  3401               	retlw	1
   401  0813  3400               	retlw	0
   402  0814  340A               	retlw	10
   403  0815  3400               	retlw	0
   404  0816  3464               	retlw	100
   405  0817  3400               	retlw	0
   406  0818  34E8               	retlw	232
   407  0819  3403               	retlw	3
   408  081A  3410               	retlw	16
   409  081B  3427               	retlw	39
   410  081C                     __end_of_dpowers:	
   411  081C                     _hexpowers:	
   412  081C  3401               	retlw	1
   413  081D  3400               	retlw	0
   414  081E  3410               	retlw	16
   415  081F  3400               	retlw	0
   416  0820  3400               	retlw	0
   417  0821  3401               	retlw	1
   418  0822  3400               	retlw	0
   419  0823  3410               	retlw	16
   420  0824                     __end_of_hexpowers:	
   421  001A                     _RCREG	set	26
   422  0019                     _TXREG	set	25
   423  0007                     _PORTC	set	7
   424  0007                     _PORTCbits	set	7
   425  0006                     _PORTBbits	set	6
   426  0065                     _RCIF	set	101
   427  00C4                     _CREN	set	196
   428  00C7                     _SPEN	set	199
   429  0038                     _RC0	set	56
   430  0099                     _SPBRG	set	153
   431  0086                     _TRISB	set	134
   432  04C1                     _TRMT	set	1217
   433  04C5                     _TXEN	set	1221
   434  043E                     _TRISC6	set	1086
   435  043F                     _TRISC7	set	1087
   436  04C4                     _SYNC	set	1220
   437  04C2                     _BRGH	set	1218
   438  0438                     _TRISC0	set	1080
   439  0432                     _TRISB2	set	1074
   440  0431                     _TRISB1	set	1073
   441  0430                     _TRISB0	set	1072
   442  0824                     STR_14:	
   443  0824  3454               	retlw	84	;'T'
   444  0825  3463               	retlw	99	;'c'
   445  0826  3465               	retlw	101	;'e'
   446  0827  346C               	retlw	108	;'l'
   447  0828  3473               	retlw	115	;'s'
   448  0829  343D               	retlw	61	;'='
   449  082A  342D               	retlw	45	;'-'
   450  082B  3425               	retlw	37	;'%'
   451  082C  3434               	retlw	52	;'4'
   452  082D  3464               	retlw	100	;'d'
   453  082E  342E               	retlw	46	;'.'
   454  082F  3425               	retlw	37	;'%'
   455  0830  3430               	retlw	48	;'0'
   456  0831  3431               	retlw	49	;'1'
   457  0832  3464               	retlw	100	;'d'
   458  0833  3420               	retlw	32	;' '
   459  0834  3443               	retlw	67	;'C'
   460  0835  340D               	retlw	13
   461  0836  340A               	retlw	10
   462  0837  3400               	retlw	0
   463  0838                     STR_13:	
   464  0838  3454               	retlw	84	;'T'
   465  0839  3463               	retlw	99	;'c'
   466  083A  3465               	retlw	101	;'e'
   467  083B  346C               	retlw	108	;'l'
   468  083C  3473               	retlw	115	;'s'
   469  083D  343D               	retlw	61	;'='
   470  083E  3425               	retlw	37	;'%'
   471  083F  3434               	retlw	52	;'4'
   472  0840  3464               	retlw	100	;'d'
   473  0841  342E               	retlw	46	;'.'
   474  0842  3425               	retlw	37	;'%'
   475  0843  3430               	retlw	48	;'0'
   476  0844  3431               	retlw	49	;'1'
   477  0845  3464               	retlw	100	;'d'
   478  0846  3420               	retlw	32	;' '
   479  0847  3443               	retlw	67	;'C'
   480  0848  340D               	retlw	13
   481  0849  340A               	retlw	10
   482  084A  3400               	retlw	0
   483  084B                     STR_16:	
   484  084B  3454               	retlw	84	;'T'
   485  084C  3476               	retlw	118	;'v'
   486  084D  346E               	retlw	110	;'n'
   487  084E  3465               	retlw	101	;'e'
   488  084F  3473               	retlw	115	;'s'
   489  0850  3468               	retlw	104	;'h'
   490  0851  343D               	retlw	61	;'='
   491  0852  342B               	retlw	43	;'+'
   492  0853  3425               	retlw	37	;'%'
   493  0854  3434               	retlw	52	;'4'
   494  0855  3464               	retlw	100	;'d'
   495  0856  342E               	retlw	46	;'.'
   496  0857  3425               	retlw	37	;'%'
   497  0858  3430               	retlw	48	;'0'
   498  0859  3431               	retlw	49	;'1'
   499  085A  3464               	retlw	100	;'d'
   500  085B  3420               	retlw	32	;' '
   501  085C  3443               	retlw	67	;'C'
   502  085D  3400               	retlw	0
   503  085E                     STR_17:	
   504  085E  3454               	retlw	84	;'T'
   505  085F  3476               	retlw	118	;'v'
   506  0860  346E               	retlw	110	;'n'
   507  0861  3465               	retlw	101	;'e'
   508  0862  3473               	retlw	115	;'s'
   509  0863  3468               	retlw	104	;'h'
   510  0864  343D               	retlw	61	;'='
   511  0865  342D               	retlw	45	;'-'
   512  0866  3425               	retlw	37	;'%'
   513  0867  3434               	retlw	52	;'4'
   514  0868  3464               	retlw	100	;'d'
   515  0869  342E               	retlw	46	;'.'
   516  086A  3425               	retlw	37	;'%'
   517  086B  3430               	retlw	48	;'0'
   518  086C  3431               	retlw	49	;'1'
   519  086D  3464               	retlw	100	;'d'
   520  086E  3420               	retlw	32	;' '
   521  086F  3443               	retlw	67	;'C'
   522  0870  3400               	retlw	0
   523  0871                     STR_6:	
   524  0871  3443               	retlw	67	;'C'
   525  0872  344F               	retlw	79	;'O'
   526  0873  344E               	retlw	78	;'N'
   527  0874  344E               	retlw	78	;'N'
   528  0875  3445               	retlw	69	;'E'
   529  0876  3443               	retlw	67	;'C'
   530  0877  3454               	retlw	84	;'T'
   531  0878  3449               	retlw	73	;'I'
   532  0879  344F               	retlw	79	;'O'
   533  087A  344E               	retlw	78	;'N'
   534  087B  3420               	retlw	32	;' '
   535  087C  344F               	retlw	79	;'O'
   536  087D  344B               	retlw	75	;'K'
   537  087E  3420               	retlw	32	;' '
   538  087F  3420               	retlw	32	;' '
   539  0880  340D               	retlw	13
   540  0881  340A               	retlw	10
   541  0882  3400               	retlw	0
   542  0883                     STR_2:	
   543  0883  3453               	retlw	83	;'S'
   544  0884  3468               	retlw	104	;'h'
   545  0885  346F               	retlw	111	;'o'
   546  0886  3472               	retlw	114	;'r'
   547  0887  3474               	retlw	116	;'t'
   548  0888  3420               	retlw	32	;' '
   549  0889  3443               	retlw	67	;'C'
   550  088A  3469               	retlw	105	;'i'
   551  088B  3472               	retlw	114	;'r'
   552  088C  3463               	retlw	99	;'c'
   553  088D  3475               	retlw	117	;'u'
   554  088E  3469               	retlw	105	;'i'
   555  088F  3474               	retlw	116	;'t'
   556  0890  3420               	retlw	32	;' '
   557  0891  3421               	retlw	33	;'!'
   558  0892  340D               	retlw	13
   559  0893  340A               	retlw	10
   560  0894  3400               	retlw	0
   561  0895                     STR_4:	
   562  0895  344E               	retlw	78	;'N'
   563  0896  346F               	retlw	111	;'o'
   564  0897  3420               	retlw	32	;' '
   565  0898  3453               	retlw	83	;'S'
   566  0899  3465               	retlw	101	;'e'
   567  089A  346E               	retlw	110	;'n'
   568  089B  3473               	retlw	115	;'s'
   569  089C  346F               	retlw	111	;'o'
   570  089D  3472               	retlw	114	;'r'
   571  089E  3420               	retlw	32	;' '
   572  089F  3466               	retlw	102	;'f'
   573  08A0  346F               	retlw	111	;'o'
   574  08A1  3475               	retlw	117	;'u'
   575  08A2  346E               	retlw	110	;'n'
   576  08A3  3464               	retlw	100	;'d'
   577  08A4  340D               	retlw	13
   578  08A5  340A               	retlw	10
   579  08A6  3400               	retlw	0
   580  08A7                     STR_18:	
   581  08A7  3454               	retlw	84	;'T'
   582  08A8  3476               	retlw	118	;'v'
   583  08A9  346E               	retlw	110	;'n'
   584  08AA  3479               	retlw	121	;'y'
   585  08AB  3474               	retlw	116	;'t'
   586  08AC  343D               	retlw	61	;'='
   587  08AD  342B               	retlw	43	;'+'
   588  08AE  3425               	retlw	37	;'%'
   589  08AF  3434               	retlw	52	;'4'
   590  08B0  3464               	retlw	100	;'d'
   591  08B1  342E               	retlw	46	;'.'
   592  08B2  3425               	retlw	37	;'%'
   593  08B3  3430               	retlw	48	;'0'
   594  08B4  3431               	retlw	49	;'1'
   595  08B5  3464               	retlw	100	;'d'
   596  08B6  3420               	retlw	32	;' '
   597  08B7  3443               	retlw	67	;'C'
   598  08B8  3400               	retlw	0
   599  08B9                     STR_19:	
   600  08B9  3454               	retlw	84	;'T'
   601  08BA  3476               	retlw	118	;'v'
   602  08BB  346E               	retlw	110	;'n'
   603  08BC  3479               	retlw	121	;'y'
   604  08BD  3474               	retlw	116	;'t'
   605  08BE  343D               	retlw	61	;'='
   606  08BF  342D               	retlw	45	;'-'
   607  08C0  3425               	retlw	37	;'%'
   608  08C1  3434               	retlw	52	;'4'
   609  08C2  3464               	retlw	100	;'d'
   610  08C3  342E               	retlw	46	;'.'
   611  08C4  3425               	retlw	37	;'%'
   612  08C5  3430               	retlw	48	;'0'
   613  08C6  3431               	retlw	49	;'1'
   614  08C7  3464               	retlw	100	;'d'
   615  08C8  3420               	retlw	32	;' '
   616  08C9  3443               	retlw	67	;'C'
   617  08CA  3400               	retlw	0
   618  08CB                     STR_20:	
   619  08CB  3430               	retlw	48	;'0'
   620  08CC  3431               	retlw	49	;'1'
   621  08CD  3432               	retlw	50	;'2'
   622  08CE  3433               	retlw	51	;'3'
   623  08CF  3434               	retlw	52	;'4'
   624  08D0  3435               	retlw	53	;'5'
   625  08D1  3436               	retlw	54	;'6'
   626  08D2  3437               	retlw	55	;'7'
   627  08D3  3438               	retlw	56	;'8'
   628  08D4  3439               	retlw	57	;'9'
   629  08D5  3441               	retlw	65	;'A'
   630  08D6  3442               	retlw	66	;'B'
   631  08D7  3443               	retlw	67	;'C'
   632  08D8  3444               	retlw	68	;'D'
   633  08D9  3445               	retlw	69	;'E'
   634  08DA  3446               	retlw	70	;'F'
   635  08DB  3400               	retlw	0
   636  08DC                     STR_7:	
   637  08DC  3442               	retlw	66	;'B'
   638  08DD  3475               	retlw	117	;'u'
   639  08DE  3473               	retlw	115	;'s'
   640  08DF  3420               	retlw	32	;' '
   641  08E0  3445               	retlw	69	;'E'
   642  08E1  3472               	retlw	114	;'r'
   643  08E2  3472               	retlw	114	;'r'
   644  08E3  346F               	retlw	111	;'o'
   645  08E4  3472               	retlw	114	;'r'
   646  08E5  3420               	retlw	32	;' '
   647  08E6  3420               	retlw	32	;' '
   648  08E7  3420               	retlw	32	;' '
   649  08E8  3420               	retlw	32	;' '
   650  08E9  3420               	retlw	32	;' '
   651  08EA  3420               	retlw	32	;' '
   652  08EB  3400               	retlw	0
   653  08EC                     STR_5:	
   654  08EC  3443               	retlw	67	;'C'
   655  08ED  344F               	retlw	79	;'O'
   656  08EE  344E               	retlw	78	;'N'
   657  08EF  344E               	retlw	78	;'N'
   658  08F0  3445               	retlw	69	;'E'
   659  08F1  3443               	retlw	67	;'C'
   660  08F2  3454               	retlw	84	;'T'
   661  08F3  3449               	retlw	73	;'I'
   662  08F4  344F               	retlw	79	;'O'
   663  08F5  344E               	retlw	78	;'N'
   664  08F6  3420               	retlw	32	;' '
   665  08F7  344F               	retlw	79	;'O'
   666  08F8  344B               	retlw	75	;'K'
   667  08F9  3420               	retlw	32	;' '
   668  08FA  3420               	retlw	32	;' '
   669  08FB  3400               	retlw	0
   670  08FC                     STR_3:	
   671  08FC  344E               	retlw	78	;'N'
   672  08FD  346F               	retlw	111	;'o'
   673  08FE  3420               	retlw	32	;' '
   674  08FF  3453               	retlw	83	;'S'
   675  0900  3465               	retlw	101	;'e'
   676  0901  346E               	retlw	110	;'n'
   677  0902  3473               	retlw	115	;'s'
   678  0903  346F               	retlw	111	;'o'
   679  0904  3472               	retlw	114	;'r'
   680  0905  3420               	retlw	32	;' '
   681  0906  3466               	retlw	102	;'f'
   682  0907  346F               	retlw	111	;'o'
   683  0908  3475               	retlw	117	;'u'
   684  0909  346E               	retlw	110	;'n'
   685  090A  3464               	retlw	100	;'d'
   686  090B  3400               	retlw	0
   687  090C                     STR_8:	
   688  090C  3442               	retlw	66	;'B'
   689  090D  3475               	retlw	117	;'u'
   690  090E  3473               	retlw	115	;'s'
   691  090F  3420               	retlw	32	;' '
   692  0910  3445               	retlw	69	;'E'
   693  0911  3472               	retlw	114	;'r'
   694  0912  3472               	retlw	114	;'r'
   695  0913  346F               	retlw	111	;'o'
   696  0914  3472               	retlw	114	;'r'
   697  0915  340D               	retlw	13
   698  0916  340A               	retlw	10
   699  0917  3400               	retlw	0
   700  0918                     STR_1:	
   701  0918  3448               	retlw	72	;'H'
   702  0919  3465               	retlw	101	;'e'
   703  091A  346C               	retlw	108	;'l'
   704  091B  346C               	retlw	108	;'l'
   705  091C  346F               	retlw	111	;'o'
   706  091D  3420               	retlw	32	;' '
   707  091E  3457               	retlw	87	;'W'
   708  091F  346F               	retlw	111	;'o'
   709  0920  3472               	retlw	114	;'r'
   710  0921  346C               	retlw	108	;'l'
   711  0922  3464               	retlw	100	;'d'
   712  0923  3400               	retlw	0
   713  0924                     STR_12:	
   714  0924  3425               	retlw	37	;'%'
   715  0925  3430               	retlw	48	;'0'
   716  0926  3432               	retlw	50	;'2'
   717  0927  3458               	retlw	88	;'X'
   718  0928  3420               	retlw	32	;' '
   719  0929  3400               	retlw	0
   720  092A                     STR_11:	
   721  092A  3449               	retlw	73	;'I'
   722  092B  3444               	retlw	68	;'D'
   723  092C  343A               	retlw	58	;':'
   724  092D  3420               	retlw	32	;' '
   725  092E  3400               	retlw	0
   726  0882                     
   727                           	psect	cinit
   728  07F2                     start_initialization:	
   729                           ; #config settings
   730                           
   731  07F2                     __initialization:	
   732                           
   733                           ; Initialize objects allocated to BANK0
   734  07F2  120A  118A  2004   	fcall	__pidataBANK0	;fetch initializer
   735  07F5  00EE               	movwf	__pdataBANK0& (0+127)
   736                           
   737                           ; Clear objects allocated to BANK0
   738  07F6  01E8               	clrf	__pbssBANK0& (0+127)
   739  07F7  01E9               	clrf	(__pbssBANK0+1)& (0+127)
   740  07F8  01EA               	clrf	(__pbssBANK0+2)& (0+127)
   741  07F9  01EB               	clrf	(__pbssBANK0+3)& (0+127)
   742  07FA  01EC               	clrf	(__pbssBANK0+4)& (0+127)
   743  07FB  01ED               	clrf	(__pbssBANK0+5)& (0+127)
   744  07FC                     end_of_initialization:	
   745                           ;End of C runtime variable initialization code
   746                           
   747  07FC                     __end_of__initialization:	
   748  07FC  0183               	clrf	3
   749  07FD  120A  158A  2F2E   	ljmp	_main	;jump to C main() function
   750                           
   751                           	psect	bssBANK0
   752  0068                     __pbssBANK0:	
   753  0068                     _Tvnyt:	
   754  0068                     	ds	2
   755  006A                     _Tvnesh:	
   756  006A                     	ds	2
   757  006C                     _temp:	
   758  006C                     	ds	2
   759                           
   760                           	psect	dataBANK0
   761  006E                     __pdataBANK0:	
   762  006E                     _ZNAK:	
   763  006E                     	ds	1
   764                           
   765                           	psect	cstackBANK1
   766  00A0                     __pcstackBANK1:	
   767  00A0                     Indicate_LCDTemp@bufferVn:	
   768                           
   769                           ; 30 bytes @ 0x0
   770  00A0                     	ds	30
   771  00BE                     Indicate_LCDTemp@bufferVnyt:	
   772                           
   773                           ; 30 bytes @ 0x1E
   774  00BE                     	ds	30
   775  00DC                     Indicate_LCDTemp@flag:	
   776                           
   777                           ; 1 bytes @ 0x3C
   778  00DC                     	ds	1
   779  00DD                     _Indicate_LCDTemp$738:	
   780                           
   781                           ; 2 bytes @ 0x3D
   782  00DD                     	ds	2
   783                           
   784                           	psect	cstackCOMMON
   785  0070                     __pcstackCOMMON:	
   786  0070                     ?_isdigit:	
   787  0070                     ?_start_meas:	
   788                           ; 1 bit 
   789                           
   790  0070                     ?_read_meas:	
   791                           ; 1 bytes @ 0x0
   792                           
   793  0070                     ??_isdigit:	
   794                           ; 1 bytes @ 0x0
   795                           
   796  0070                     ?_LCD_SendData:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0070                     ??_LCD_SendData:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0070                     ?_LCD_SendCommand:	
   803                           ; 1 bytes @ 0x0
   804                           
   805  0070                     ?_LCD_Init:	
   806                           ; 1 bytes @ 0x0
   807                           
   808  0070                     ?_LCD_PrintChar:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0070                     ?_LCD_Clear:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0070                     ?_main:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0070                     ?_OneWire_reset:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0070                     ??_OneWire_reset:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0070                     ?_OneWire_Bit_IO:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0070                     ??_OneWire_Bit_IO:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0070                     ?_Transmit_char:	
   830                           ; 1 bytes @ 0x0
   831                           
   832  0070                     ??_Transmit_char:	
   833                           ; 1 bytes @ 0x0
   834                           
   835  0070                     ?___wmul:	
   836                           ; 1 bytes @ 0x0
   837                           
   838  0070                     ?___lwdiv:	
   839                           ; 2 bytes @ 0x0
   840                           
   841  0070                     ?___aldiv:	
   842                           ; 2 bytes @ 0x0
   843                           
   844  0070                     LCD_SendData@data:	
   845                           ; 4 bytes @ 0x0
   846                           
   847  0070                     Transmit_char@data:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0070                     _isdigit$506:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0070                     ___wmul@multiplier:	
   854                           ; 1 bytes @ 0x0
   855                           
   856  0070                     ___lwdiv@divisor:	
   857                           ; 2 bytes @ 0x0
   858                           
   859  0070                     ___aldiv@divisor:	
   860                           ; 2 bytes @ 0x0
   861                           
   862                           
   863                           ; 4 bytes @ 0x0
   864  0070                     	ds	1
   865  0071                     ?_Usart_PrintString:	
   866  0071                     ??_LCD_SendCommand:	
   867                           ; 1 bytes @ 0x1
   868                           
   869  0071                     ??_LCD_PrintChar:	
   870                           ; 1 bytes @ 0x1
   871                           
   872  0071                     OneWire_Bit_IO@b:	
   873                           ; 1 bytes @ 0x1
   874                           
   875  0071                     isdigit@c:	
   876                           ; 1 bytes @ 0x1
   877                           
   878  0071                     Usart_PrintString@Text:	
   879                           ; 1 bytes @ 0x1
   880                           
   881                           
   882                           ; 2 bytes @ 0x1
   883  0071                     	ds	1
   884  0072                     ?_OneWire_Byte_Write:	
   885  0072                     OneWire_reset@err:	
   886                           ; 2 bytes @ 0x2
   887                           
   888  0072                     ___wmul@multiplicand:	
   889                           ; 1 bytes @ 0x2
   890                           
   891  0072                     ___lwdiv@dividend:	
   892                           ; 2 bytes @ 0x2
   893                           
   894                           
   895                           ; 2 bytes @ 0x2
   896  0072                     	ds	1
   897  0073                     ??_Usart_PrintString:	
   898  0073                     LCD_SendCommand@com:	
   899                           ; 1 bytes @ 0x3
   900                           
   901  0073                     LCD_PrintChar@c:	
   902                           ; 1 bytes @ 0x3
   903                           
   904                           
   905                           ; 1 bytes @ 0x3
   906  0073                     	ds	1
   907  0074                     ??_OneWire_Byte_Write:	
   908  0074                     ??_LCD_Init:	
   909                           ; 1 bytes @ 0x4
   910                           
   911  0074                     ?_LCD_PrintString:	
   912                           ; 1 bytes @ 0x4
   913                           
   914  0074                     ?_LCD_GoToXY:	
   915                           ; 1 bytes @ 0x4
   916                           
   917  0074                     ??_LCD_Clear:	
   918                           ; 1 bytes @ 0x4
   919                           
   920  0074                     ??___wmul:	
   921                           ; 1 bytes @ 0x4
   922                           
   923  0074                     ??___lwdiv:	
   924                           ; 1 bytes @ 0x4
   925                           
   926  0074                     LCD_GoToXY@y:	
   927                           ; 1 bytes @ 0x4
   928                           
   929  0074                     Usart_PrintString@i:	
   930                           ; 1 bytes @ 0x4
   931                           
   932  0074                     LCD_PrintString@str:	
   933                           ; 1 bytes @ 0x4
   934                           
   935  0074                     ___wmul@product:	
   936                           ; 2 bytes @ 0x4
   937                           
   938  0074                     ___aldiv@dividend:	
   939                           ; 2 bytes @ 0x4
   940                           
   941                           
   942                           ; 4 bytes @ 0x4
   943  0074                     	ds	1
   944  0075                     ??_LCD_GoToXY:	
   945  0075                     ___lwdiv@quotient:	
   946                           ; 1 bytes @ 0x5
   947                           
   948                           
   949                           ; 2 bytes @ 0x5
   950  0075                     	ds	1
   951  0076                     ??_LCD_PrintString:	
   952  0076                     LCD_Init@lcd:	
   953                           ; 1 bytes @ 0x6
   954                           
   955  0076                     LCD_GoToXY@x:	
   956                           ; 1 bytes @ 0x6
   957                           
   958  0076                     OneWire_Byte_Write@i:	
   959                           ; 1 bytes @ 0x6
   960                           
   961                           
   962                           ; 1 bytes @ 0x6
   963  0076                     	ds	1
   964  0077                     LCD_GoToXY@temp:	
   965  0077                     OneWire_Byte_Write@j:	
   966                           ; 1 bytes @ 0x7
   967                           
   968  0077                     ___lwdiv@counter:	
   969                           ; 1 bytes @ 0x7
   970                           
   971                           
   972                           ; 1 bytes @ 0x7
   973  0077                     	ds	1
   974  0078                     ?_LCD_PrintStringXY:	
   975  0078                     ??___aldiv:	
   976                           ; 1 bytes @ 0x8
   977                           
   978  0078                     ?___lwmod:	
   979                           ; 1 bytes @ 0x8
   980                           
   981  0078                     OneWire_Byte_Write@b:	
   982                           ; 2 bytes @ 0x8
   983                           
   984  0078                     LCD_PrintStringXY@str:	
   985                           ; 1 bytes @ 0x8
   986                           
   987  0078                     ___lwmod@divisor:	
   988                           ; 2 bytes @ 0x8
   989                           
   990                           
   991                           ; 2 bytes @ 0x8
   992  0078                     	ds	1
   993  0079                     ?_OneWire_command:	
   994  0079                     ?_w1_rom_search:	
   995                           ; 1 bytes @ 0x9
   996                           
   997  0079                     ?_OneWire_Byte_Read:	
   998                           ; 1 bytes @ 0x9
   999                           
  1000  0079                     w1_rom_search@id:	
  1001                           ; 2 bytes @ 0x9
  1002                           
  1003  0079                     OneWire_command@id:	
  1004                           ; 1 bytes @ 0x9
  1005                           
  1006  0079                     USART_Init@x:	
  1007                           ; 1 bytes @ 0x9
  1008                           
  1009                           
  1010                           ; 2 bytes @ 0x9
  1011  0079                     	ds	1
  1012  007A                     ??_OneWire_command:	
  1013  007A                     ??_w1_rom_search:	
  1014                           ; 1 bytes @ 0xA
  1015                           
  1016  007A                     LCD_PrintStringXY@x:	
  1017                           ; 1 bytes @ 0xA
  1018                           
  1019  007A                     ___lwmod@dividend:	
  1020                           ; 1 bytes @ 0xA
  1021                           
  1022                           
  1023                           ; 2 bytes @ 0xA
  1024  007A                     	ds	1
  1025  007B                     ??_OneWire_Byte_Read:	
  1026  007B                     LCD_PrintStringXY@y:	
  1027                           ; 1 bytes @ 0xB
  1028                           
  1029  007B                     OneWire_command@command:	
  1030                           ; 1 bytes @ 0xB
  1031                           
  1032                           
  1033                           ; 1 bytes @ 0xB
  1034  007B                     	ds	1
  1035  007C                     ??_LCD_PrintStringXY:	
  1036  007C                     ??___lwmod:	
  1037                           ; 1 bytes @ 0xC
  1038                           
  1039  007C                     OneWire_command@i:	
  1040                           ; 1 bytes @ 0xC
  1041                           
  1042                           
  1043                           ; 1 bytes @ 0xC
  1044  007C                     	ds	1
  1045  007D                     ??_start_meas:	
  1046  007D                     ___lwmod@counter:	
  1047                           ; 1 bytes @ 0xD
  1048                           
  1049                           
  1050                           ; 1 bytes @ 0xD
  1051  007D                     	ds	1
  1052                           
  1053                           	psect	cstackBANK0
  1054  0020                     __pcstackBANK0:	
  1055  0020                     ?_sprintf:	
  1056  0020                     w1_rom_search@j:	
  1057                           ; 2 bytes @ 0x0
  1058                           
  1059  0020                     ___aldiv@counter:	
  1060                           ; 1 bytes @ 0x0
  1061                           
  1062  0020                     sprintf@f:	
  1063                           ; 1 bytes @ 0x0
  1064                           
  1065                           
  1066                           ; 2 bytes @ 0x0
  1067  0020                     	ds	1
  1068  0021                     w1_rom_search@next_diff:	
  1069  0021                     ___aldiv@sign:	
  1070                           ; 1 bytes @ 0x1
  1071                           
  1072                           
  1073                           ; 1 bytes @ 0x1
  1074  0021                     	ds	1
  1075  0022                     w1_rom_search@diff:	
  1076  0022                     ___aldiv@quotient:	
  1077                           ; 1 bytes @ 0x2
  1078                           
  1079                           
  1080                           ; 4 bytes @ 0x2
  1081  0022                     	ds	1
  1082  0023                     w1_rom_search@i:	
  1083                           
  1084                           ; 1 bytes @ 0x3
  1085  0023                     	ds	1
  1086  0024                     w1_rom_search@b:	
  1087                           
  1088                           ; 1 bytes @ 0x4
  1089  0024                     	ds	2
  1090  0026                     ?_USART_Init:	
  1091  0026                     ??_sprintf:	
  1092                           ; 1 bytes @ 0x6
  1093                           
  1094  0026                     USART_Init@baud:	
  1095                           ; 1 bytes @ 0x6
  1096                           
  1097                           
  1098                           ; 4 bytes @ 0x6
  1099  0026                     	ds	3
  1100  0029                     sprintf@idx:	
  1101                           
  1102                           ; 1 bytes @ 0x9
  1103  0029                     	ds	1
  1104  002A                     ??_USART_Init:	
  1105  002A                     sprintf@ap:	
  1106                           ; 1 bytes @ 0xA
  1107                           
  1108                           
  1109                           ; 1 bytes @ 0xA
  1110  002A                     	ds	1
  1111  002B                     sprintf@prec:	
  1112                           
  1113                           ; 1 bytes @ 0xB
  1114  002B                     	ds	1
  1115  002C                     sprintf@val:	
  1116                           
  1117                           ; 2 bytes @ 0xC
  1118  002C                     	ds	2
  1119  002E                     sprintf@flag:	
  1120                           
  1121                           ; 1 bytes @ 0xE
  1122  002E                     	ds	1
  1123  002F                     sprintf@width:	
  1124                           
  1125                           ; 2 bytes @ 0xF
  1126  002F                     	ds	2
  1127  0031                     sprintf@sp:	
  1128                           
  1129                           ; 1 bytes @ 0x11
  1130  0031                     	ds	1
  1131  0032                     sprintf@c:	
  1132                           
  1133                           ; 1 bytes @ 0x12
  1134  0032                     	ds	1
  1135  0033                     ?_Indicate_LCDTemp:	
  1136  0033                     Indicate_LCDTemp@znakflag:	
  1137                           ; 1 bytes @ 0x13
  1138                           
  1139                           
  1140                           ; 1 bytes @ 0x13
  1141  0033                     	ds	1
  1142  0034                     ??_Indicate_LCDTemp:	
  1143                           
  1144                           ; 1 bytes @ 0x14
  1145  0034                     	ds	2
  1146  0036                     ??_read_meas:	
  1147                           
  1148                           ; 1 bytes @ 0x16
  1149  0036                     	ds	2
  1150  0038                     read_meas@s:	
  1151                           
  1152                           ; 30 bytes @ 0x18
  1153  0038                     	ds	30
  1154  0056                     read_meas@byte:	
  1155                           
  1156                           ; 2 bytes @ 0x36
  1157  0056                     	ds	2
  1158  0058                     read_meas@id:	
  1159                           
  1160                           ; 8 bytes @ 0x38
  1161  0058                     	ds	8
  1162  0060                     _read_meas$737:	
  1163                           
  1164                           ; 2 bytes @ 0x40
  1165  0060                     	ds	2
  1166  0062                     read_meas@i:	
  1167                           
  1168                           ; 1 bytes @ 0x42
  1169  0062                     	ds	1
  1170  0063                     read_meas@diff:	
  1171                           
  1172                           ; 1 bytes @ 0x43
  1173  0063                     	ds	1
  1174  0064                     read_meas@count:	
  1175                           
  1176                           ; 1 bytes @ 0x44
  1177  0064                     	ds	1
  1178  0065                     ??_main:	
  1179                           
  1180                           ; 1 bytes @ 0x45
  1181  0065                     	ds	3
  1182                           
  1183                           	psect	maintext
  1184  0F2E                     __pmaintext:	
  1185 ;;
  1186 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1187 ;;
  1188 ;; *************** function _main *****************
  1189 ;; Defined at:
  1190 ;;		line 4 in file "main.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;		None
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;		None
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1199 ;; Tracked objects:
  1200 ;;		On entry : B00/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1204 ;;      Params:         0       0       0       0       0
  1205 ;;      Locals:         0       0       0       0       0
  1206 ;;      Temps:          0       3       0       0       0
  1207 ;;      Totals:         0       3       0       0       0
  1208 ;;Total ram usage:        3 bytes
  1209 ;; Hardware stack levels required when called:    6
  1210 ;; This function calls:
  1211 ;;		_LCD_Clear
  1212 ;;		_LCD_Init
  1213 ;;		_LCD_PrintStringXY
  1214 ;;		_USART_Init
  1215 ;;		_read_meas
  1216 ;;		_start_meas
  1217 ;; This function is called by:
  1218 ;;		Startup code after reset
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           
  1223                           ;psect for function _main
  1224  0F2E                     _main:	
  1225                           
  1226                           ;main.c: 6: LCD_Init(0);
  1227                           
  1228                           ;incstack = 0
  1229                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1230  0F2E  3000               	movlw	0
  1231  0F2F  120A  118A  2167  120A  158A  	fcall	_LCD_Init
  1232                           
  1233                           ;main.c: 7: LCD_Clear();
  1234  0F34  120A  158A  2559  120A  158A  	fcall	_LCD_Clear
  1235                           
  1236                           ;main.c: 8: LCD_PrintStringXY("Hello World",0,0);
  1237  0F39  3018               	movlw	low (STR_1| (0+32768))
  1238  0F3A  00F8               	movwf	LCD_PrintStringXY@str
  1239  0F3B  3089               	movlw	high (STR_1| (0+32768))
  1240  0F3C  00F9               	movwf	LCD_PrintStringXY@str+1
  1241  0F3D  01FA               	clrf	LCD_PrintStringXY@x
  1242  0F3E  01FB               	clrf	LCD_PrintStringXY@y
  1243  0F3F  120A  158A  2564  120A  158A  	fcall	_LCD_PrintStringXY
  1244                           
  1245                           ;main.c: 9: USART_Init(9600);
  1246  0F44  3000               	movlw	0
  1247  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  1248  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  1249  0F47  00A9               	movwf	USART_Init@baud+3
  1250  0F48  3000               	movlw	0
  1251  0F49  00A8               	movwf	USART_Init@baud+2
  1252  0F4A  3025               	movlw	37
  1253  0F4B  00A7               	movwf	USART_Init@baud+1
  1254  0F4C  3080               	movlw	128
  1255  0F4D  00A6               	movwf	USART_Init@baud
  1256  0F4E  120A  118A  21F8  120A  158A  	fcall	_USART_Init
  1257                           
  1258                           ;main.c: 10: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1259  0F53  300B               	movlw	11
  1260  0F54  1283               	bcf	3,5	;RP0=0, select bank0
  1261  0F55  1303               	bcf	3,6	;RP1=0, select bank0
  1262  0F56  00E7               	movwf	??_main+2
  1263  0F57  3026               	movlw	38
  1264  0F58  00E6               	movwf	??_main+1
  1265  0F59  305D               	movlw	93
  1266  0F5A  00E5               	movwf	??_main
  1267  0F5B                     u2317:	
  1268  0F5B  0BE5               	decfsz	??_main,f
  1269  0F5C  2F5B               	goto	u2317
  1270  0F5D  0BE6               	decfsz	??_main+1,f
  1271  0F5E  2F5B               	goto	u2317
  1272  0F5F  0BE7               	decfsz	??_main+2,f
  1273  0F60  2F5B               	goto	u2317
  1274                           
  1275                           ;main.c: 11: LCD_Clear();
  1276  0F61  120A  158A  2559  120A  158A  	fcall	_LCD_Clear
  1277  0F66                     l2206:	
  1278                           ;main.c: 14: while(1)
  1279                           
  1280                           
  1281                           ;main.c: 15: {
  1282                           ;main.c: 16: start_meas();
  1283  0F66  120A  158A  258E  120A  158A  	fcall	_start_meas
  1284                           
  1285                           ;main.c: 17: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1286  0F6B  300B               	movlw	11
  1287  0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  1288  0F6D  1303               	bcf	3,6	;RP1=0, select bank0
  1289  0F6E  00E7               	movwf	??_main+2
  1290  0F6F  3026               	movlw	38
  1291  0F70  00E6               	movwf	??_main+1
  1292  0F71  305D               	movlw	93
  1293  0F72  00E5               	movwf	??_main
  1294  0F73                     u2327:	
  1295  0F73  0BE5               	decfsz	??_main,f
  1296  0F74  2F73               	goto	u2327
  1297  0F75  0BE6               	decfsz	??_main+1,f
  1298  0F76  2F73               	goto	u2327
  1299  0F77  0BE7               	decfsz	??_main+2,f
  1300  0F78  2F73               	goto	u2327
  1301                           
  1302                           ;main.c: 18: read_meas();
  1303  0F79  120A  118A  23D7  120A  158A  	fcall	_read_meas
  1304                           
  1305                           ;main.c: 20: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1306  0F7E  300B               	movlw	11
  1307  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  1308  0F80  1303               	bcf	3,6	;RP1=0, select bank0
  1309  0F81  00E7               	movwf	??_main+2
  1310  0F82  3026               	movlw	38
  1311  0F83  00E6               	movwf	??_main+1
  1312  0F84  305D               	movlw	93
  1313  0F85  00E5               	movwf	??_main
  1314  0F86                     u2337:	
  1315  0F86  0BE5               	decfsz	??_main,f
  1316  0F87  2F86               	goto	u2337
  1317  0F88  0BE6               	decfsz	??_main+1,f
  1318  0F89  2F86               	goto	u2337
  1319  0F8A  0BE7               	decfsz	??_main+2,f
  1320  0F8B  2F86               	goto	u2337
  1321  0F8C  2F66               	goto	l2206
  1322  0F8D                     __end_of_main:	
  1323                           
  1324                           	psect	text1
  1325  0D8E                     __ptext1:	
  1326 ;; *************** function _start_meas *****************
  1327 ;; Defined at:
  1328 ;;		line 14 in file "DS18B20.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;		None
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;		None
  1333 ;; Return value:  Size  Location     Type
  1334 ;;                  1    wreg      void 
  1335 ;; Registers used:
  1336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1337 ;; Tracked objects:
  1338 ;;		On entry : 0/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1342 ;;      Params:         0       0       0       0       0
  1343 ;;      Locals:         0       0       0       0       0
  1344 ;;      Temps:          0       0       0       0       0
  1345 ;;      Totals:         0       0       0       0       0
  1346 ;;Total ram usage:        0 bytes
  1347 ;; Hardware stack levels used:    1
  1348 ;; Hardware stack levels required when called:    3
  1349 ;; This function calls:
  1350 ;;		_OneWire_command
  1351 ;;		_Usart_PrintString
  1352 ;; This function is called by:
  1353 ;;		_main
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           
  1358                           ;psect for function _start_meas
  1359  0D8E                     _start_meas:	
  1360                           
  1361                           ;DS18B20.c: 15: if( RC0==1){
  1362                           
  1363                           ;incstack = 0
  1364                           ; Regs used in _start_meas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1365  0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  1366  0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  1367  0D90  1C07               	btfss	7,0	;volatile
  1368  0D91  2D9E               	goto	l2090
  1369                           
  1370                           ;DS18B20.c: 16: OneWire_command( 0x44, (0) );
  1371  0D92  01F9               	clrf	OneWire_command@id
  1372  0D93  3044               	movlw	68
  1373  0D94  120A  158A  2697   	fcall	_OneWire_command
  1374                           
  1375                           ;DS18B20.c: 17: PORTCbits.RC0=1;
  1376  0D97  1283               	bcf	3,5	;RP0=0, select bank0
  1377  0D98  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0D99  1407               	bsf	7,0	;volatile
  1379                           
  1380                           ;DS18B20.c: 18: TRISC0=0;
  1381  0D9A  1683               	bsf	3,5	;RP0=1, select bank1
  1382  0D9B  1303               	bcf	3,6	;RP1=0, select bank1
  1383  0D9C  1007               	bcf	7,0	;volatile
  1384                           
  1385                           ;DS18B20.c: 20: }else{
  1386  0D9D  0008               	return
  1387  0D9E                     l2090:	
  1388                           
  1389                           ;DS18B20.c: 21: Usart_PrintString( "Short Circuit !\r\n" );
  1390  0D9E  3083               	movlw	low (STR_2| (0+32768))
  1391  0D9F  00F1               	movwf	Usart_PrintString@Text
  1392  0DA0  3088               	movlw	high (STR_2| (0+32768))
  1393  0DA1  00F2               	movwf	Usart_PrintString@Text+1
  1394  0DA2  120A  158A  266C   	fcall	_Usart_PrintString
  1395  0DA5  0008               	return
  1396  0DA6                     __end_of_start_meas:	
  1397                           
  1398                           	psect	text2
  1399  0E97                     __ptext2:	
  1400 ;; *************** function _OneWire_command *****************
  1401 ;; Defined at:
  1402 ;;		line 108 in file "OneWire.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;  command         1    wreg     unsigned char 
  1405 ;;  id              1    9[COMMON] PTR unsigned char 
  1406 ;;		 -> NULL(0), 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  command         1   11[COMMON] unsigned char 
  1409 ;;  i               1   12[COMMON] unsigned char 
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  1    wreg      void 
  1412 ;; Registers used:
  1413 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1419 ;;      Params:         1       0       0       0       0
  1420 ;;      Locals:         2       0       0       0       0
  1421 ;;      Temps:          1       0       0       0       0
  1422 ;;      Totals:         4       0       0       0       0
  1423 ;;Total ram usage:        4 bytes
  1424 ;; Hardware stack levels used:    1
  1425 ;; Hardware stack levels required when called:    2
  1426 ;; This function calls:
  1427 ;;		_OneWire_Byte_Write
  1428 ;;		_OneWire_reset
  1429 ;; This function is called by:
  1430 ;;		_start_meas
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           
  1435                           ;psect for function _OneWire_command
  1436  0E97                     _OneWire_command:	
  1437                           
  1438                           ;incstack = 0
  1439                           ; Regs used in _OneWire_command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1440                           ;OneWire_command@command stored from wreg
  1441  0E97  00FB               	movwf	OneWire_command@command
  1442                           
  1443                           ;OneWire.c: 110: unsigned char i;
  1444                           ;OneWire.c: 111: OneWire_reset();
  1445  0E98  120A  158A  26F9  120A  158A  	fcall	_OneWire_reset
  1446                           
  1447                           ;OneWire.c: 112: if( id ){
  1448  0E9D  0879               	movf	OneWire_command@id,w
  1449  0E9E  1903               	btfsc	3,2
  1450  0E9F  2EBC               	goto	l1884
  1451                           
  1452                           ;OneWire.c: 113: OneWire_Byte_Write( 0x55 );
  1453  0EA0  3055               	movlw	85
  1454  0EA1  120A  158A  25DD  120A  158A  	fcall	_OneWire_Byte_Write
  1455                           
  1456                           ;OneWire.c: 114: i = 8;
  1457  0EA6  3008               	movlw	8
  1458  0EA7  00FA               	movwf	??_OneWire_command
  1459  0EA8  087A               	movf	??_OneWire_command,w
  1460  0EA9  00FC               	movwf	OneWire_command@i
  1461  0EAA                     l1878:	
  1462                           ;OneWire.c: 115: do{
  1463                           
  1464                           
  1465                           ;OneWire.c: 116: OneWire_Byte_Write( *id );
  1466  0EAA  0879               	movf	OneWire_command@id,w
  1467  0EAB  0084               	movwf	4
  1468  0EAC  1383               	bcf	3,7	;select IRP bank0
  1469  0EAD  0800               	movf	0,w
  1470  0EAE  120A  158A  25DD  120A  158A  	fcall	_OneWire_Byte_Write
  1471                           
  1472                           ;OneWire.c: 117: id++;
  1473  0EB3  3001               	movlw	1
  1474  0EB4  00FA               	movwf	??_OneWire_command
  1475  0EB5  087A               	movf	??_OneWire_command,w
  1476  0EB6  07F9               	addwf	OneWire_command@id,f
  1477                           
  1478                           ;OneWire.c: 118: }while( --i );
  1479  0EB7  3001               	movlw	1
  1480  0EB8  02FC               	subwf	OneWire_command@i,f
  1481  0EB9  1903               	btfsc	3,2
  1482  0EBA  2EC2               	goto	l211
  1483  0EBB  2EAA               	goto	l1878
  1484  0EBC                     l1884:	
  1485                           ;OneWire.c: 119: }else{
  1486                           
  1487                           
  1488                           ;OneWire.c: 120: OneWire_Byte_Write( 0xCC );
  1489  0EBC  30CC               	movlw	204
  1490  0EBD  120A  158A  25DD  120A  158A  	fcall	_OneWire_Byte_Write
  1491  0EC2                     l211:	
  1492                           
  1493                           ;OneWire.c: 121: }
  1494                           ;OneWire.c: 122: OneWire_Byte_Write( command );
  1495  0EC2  087B               	movf	OneWire_command@command,w
  1496  0EC3  120A  158A  25DD   	fcall	_OneWire_Byte_Write
  1497  0EC6  0008               	return
  1498  0EC7                     __end_of_OneWire_command:	
  1499                           
  1500                           	psect	text3
  1501  03D7                     __ptext3:	
  1502 ;; *************** function _read_meas *****************
  1503 ;; Defined at:
  1504 ;;		line 27 in file "DS18B20.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;		None
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;  s              30   24[BANK0 ] unsigned char [30]
  1509 ;;  sid            30    0        unsigned char [30]
  1510 ;;  id              8   56[BANK0 ] unsigned char [8]
  1511 ;;  byte            2   54[BANK0 ] unsigned char [2]
  1512 ;;  count           1   68[BANK0 ] unsigned char 
  1513 ;;  diff            1   67[BANK0 ] unsigned char 
  1514 ;;  i               1   66[BANK0 ] unsigned char 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1524 ;;      Params:         0       0       0       0       0
  1525 ;;      Locals:         0      45       0       0       0
  1526 ;;      Temps:          0       2       0       0       0
  1527 ;;      Totals:         0      47       0       0       0
  1528 ;;Total ram usage:       47 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; Hardware stack levels required when called:    5
  1531 ;; This function calls:
  1532 ;;		_Indicate_LCDTemp
  1533 ;;		_LCD_PrintStringXY
  1534 ;;		_OneWire_Byte_Read
  1535 ;;		_OneWire_Byte_Write
  1536 ;;		_Usart_PrintString
  1537 ;;		___lwdiv
  1538 ;;		_sprintf
  1539 ;;		_w1_rom_search
  1540 ;; This function is called by:
  1541 ;;		_main
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           
  1546                           ;psect for function _read_meas
  1547  03D7                     _read_meas:	
  1548                           
  1549                           ;DS18B20.c: 29: unsigned char id[8], diff;
  1550                           ;DS18B20.c: 30: char s[30];
  1551                           ;DS18B20.c: 31: char sid[30];
  1552                           ;DS18B20.c: 32: unsigned char byte[2];
  1553                           ;DS18B20.c: 33: unsigned char i;
  1554                           ;DS18B20.c: 35: uint8_t count=0;
  1555                           
  1556                           ;incstack = 0
  1557                           ; Regs used in _read_meas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1558  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  1559  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  1560  03D9  01E4               	clrf	read_meas@count
  1561                           
  1562                           ;DS18B20.c: 36: for( diff = 0xFF ; diff != 0x00;count++ ){
  1563  03DA  30FF               	movlw	255
  1564  03DB  00B6               	movwf	??_read_meas
  1565  03DC  0836               	movf	??_read_meas,w
  1566  03DD  00E3               	movwf	read_meas@diff
  1567  03DE  0863               	movf	read_meas@diff,w
  1568  03DF  1903               	btfsc	3,2
  1569  03E0  2D9D               	goto	l2192
  1570  03E1                     l2100:	
  1571                           
  1572                           ;DS18B20.c: 37: diff = w1_rom_search( diff, id );
  1573  03E1  3058               	movlw	(low (read_meas@id| 0))& (0+255)
  1574  03E2  00B6               	movwf	??_read_meas
  1575  03E3  0836               	movf	??_read_meas,w
  1576  03E4  00F9               	movwf	w1_rom_search@id
  1577  03E5  0863               	movf	read_meas@diff,w
  1578  03E6  120A  158A  278D  120A  118A  	fcall	_w1_rom_search
  1579  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  1580  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  1581  03ED  00B7               	movwf	??_read_meas+1
  1582  03EE  0837               	movf	??_read_meas+1,w
  1583  03EF  00E3               	movwf	read_meas@diff
  1584                           
  1585                           ;DS18B20.c: 40: if( diff == 0xFF ){
  1586  03F0  0A63               	incf	read_meas@diff,w
  1587  03F1  1D03               	btfss	3,2
  1588  03F2  2C0B               	goto	l2108
  1589                           
  1590                           ;DS18B20.c: 41: LCD_PrintStringXY( "No Sensor found",0,3 );
  1591  03F3  30FC               	movlw	low (STR_3| (0+32768))
  1592  03F4  00F8               	movwf	LCD_PrintStringXY@str
  1593  03F5  3088               	movlw	high (STR_3| (0+32768))
  1594  03F6  00F9               	movwf	LCD_PrintStringXY@str+1
  1595  03F7  01FA               	clrf	LCD_PrintStringXY@x
  1596  03F8  3003               	movlw	3
  1597  03F9  00B6               	movwf	??_read_meas
  1598  03FA  0836               	movf	??_read_meas,w
  1599  03FB  00FB               	movwf	LCD_PrintStringXY@y
  1600  03FC  120A  158A  2564  120A  118A  	fcall	_LCD_PrintStringXY
  1601                           
  1602                           ;DS18B20.c: 42: Usart_PrintString( "No Sensor found\r\n" );
  1603  0401  3095               	movlw	low (STR_4| (0+32768))
  1604  0402  00F1               	movwf	Usart_PrintString@Text
  1605  0403  3088               	movlw	high (STR_4| (0+32768))
  1606  0404  00F2               	movwf	Usart_PrintString@Text+1
  1607  0405  120A  158A  266C  120A  118A  	fcall	_Usart_PrintString
  1608                           
  1609                           ;DS18B20.c: 43: break;
  1610  040A  2D9D               	goto	l2192
  1611  040B                     l2108:	
  1612                           ;DS18B20.c: 44: }
  1613                           
  1614                           
  1615                           ;DS18B20.c: 45: else
  1616                           ;DS18B20.c: 46: {
  1617                           ;DS18B20.c: 47: LCD_PrintStringXY( "CONNECTION OK  ",0,3 );
  1618  040B  30EC               	movlw	low (STR_5| (0+32768))
  1619  040C  00F8               	movwf	LCD_PrintStringXY@str
  1620  040D  3088               	movlw	high (STR_5| (0+32768))
  1621  040E  00F9               	movwf	LCD_PrintStringXY@str+1
  1622  040F  01FA               	clrf	LCD_PrintStringXY@x
  1623  0410  3003               	movlw	3
  1624  0411  1283               	bcf	3,5	;RP0=0, select bank0
  1625  0412  1303               	bcf	3,6	;RP1=0, select bank0
  1626  0413  00B6               	movwf	??_read_meas
  1627  0414  0836               	movf	??_read_meas,w
  1628  0415  00FB               	movwf	LCD_PrintStringXY@y
  1629  0416  120A  158A  2564  120A  118A  	fcall	_LCD_PrintStringXY
  1630                           
  1631                           ;DS18B20.c: 48: Usart_PrintString( "CONNECTION OK  \r\n" );
  1632  041B  3071               	movlw	low (STR_6| (0+32768))
  1633  041C  00F1               	movwf	Usart_PrintString@Text
  1634  041D  3088               	movlw	high (STR_6| (0+32768))
  1635  041E  00F2               	movwf	Usart_PrintString@Text+1
  1636  041F  120A  158A  266C  120A  118A  	fcall	_Usart_PrintString
  1637                           
  1638                           ;DS18B20.c: 49: }
  1639                           ;DS18B20.c: 52: if( diff == 0xFE ){
  1640  0424  30FE               	movlw	254
  1641  0425  1283               	bcf	3,5	;RP0=0, select bank0
  1642  0426  1303               	bcf	3,6	;RP1=0, select bank0
  1643  0427  0663               	xorwf	read_meas@diff,w
  1644  0428  1D03               	btfss	3,2
  1645  0429  2C3C               	goto	l2114
  1646                           
  1647                           ;DS18B20.c: 53: LCD_PrintStringXY( "Bus Error      ",0,3 );
  1648  042A  30DC               	movlw	low (STR_7| (0+32768))
  1649  042B  00F8               	movwf	LCD_PrintStringXY@str
  1650  042C  3088               	movlw	high (STR_7| (0+32768))
  1651  042D  00F9               	movwf	LCD_PrintStringXY@str+1
  1652  042E  01FA               	clrf	LCD_PrintStringXY@x
  1653  042F  3003               	movlw	3
  1654  0430  00B6               	movwf	??_read_meas
  1655  0431  0836               	movf	??_read_meas,w
  1656  0432  00FB               	movwf	LCD_PrintStringXY@y
  1657  0433  120A  158A  2564  120A  118A  	fcall	_LCD_PrintStringXY
  1658                           
  1659                           ;DS18B20.c: 54: Usart_PrintString( "Bus Error\r\n" );
  1660  0438  300C               	movlw	low (STR_8| (0+32768))
  1661  0439  00F1               	movwf	Usart_PrintString@Text
  1662  043A  3089               	movlw	high (STR_8| (0+32768))
  1663  043B  2C4F               	goto	L1
  1664  043C                     l2114:	
  1665                           ;DS18B20.c: 56: }
  1666                           
  1667                           
  1668                           ;DS18B20.c: 57: else
  1669                           ;DS18B20.c: 58: {
  1670                           ;DS18B20.c: 59: LCD_PrintStringXY( "CONNECTION OK  ",0,3 );
  1671  043C  30EC               	movlw	low (STR_5| (0+32768))
  1672  043D  00F8               	movwf	LCD_PrintStringXY@str
  1673  043E  3088               	movlw	high (STR_5| (0+32768))
  1674  043F  00F9               	movwf	LCD_PrintStringXY@str+1
  1675  0440  01FA               	clrf	LCD_PrintStringXY@x
  1676  0441  3003               	movlw	3
  1677  0442  1283               	bcf	3,5	;RP0=0, select bank0
  1678  0443  1303               	bcf	3,6	;RP1=0, select bank0
  1679  0444  00B6               	movwf	??_read_meas
  1680  0445  0836               	movf	??_read_meas,w
  1681  0446  00FB               	movwf	LCD_PrintStringXY@y
  1682  0447  120A  158A  2564  120A  118A  	fcall	_LCD_PrintStringXY
  1683                           
  1684                           ;DS18B20.c: 60: Usart_PrintString( "CONNECTION OK  \r\n" );
  1685  044C  3071               	movlw	low (STR_6| (0+32768))
  1686  044D  00F1               	movwf	Usart_PrintString@Text
  1687  044E  3088               	movlw	high (STR_6| (0+32768))
  1688  044F                     L1:	
  1689  044F  00F2               	movwf	Usart_PrintString@Text+1
  1690  0450  120A  158A  266C  120A  118A  	fcall	_Usart_PrintString
  1691                           
  1692                           ;DS18B20.c: 61: }
  1693                           ;DS18B20.c: 62: if( id[0] == 0x28 || id[0] == 0x10 )
  1694  0455  3028               	movlw	40
  1695  0456  1283               	bcf	3,5	;RP0=0, select bank0
  1696  0457  1303               	bcf	3,6	;RP1=0, select bank0
  1697  0458  0658               	xorwf	read_meas@id,w
  1698  0459  1903               	btfsc	3,2
  1699  045A  2C5F               	goto	l2120
  1700  045B  3010               	movlw	16
  1701  045C  0658               	xorwf	read_meas@id,w
  1702  045D  1D03               	btfss	3,2
  1703  045E  2D94               	goto	l2190
  1704  045F                     l2120:	
  1705                           
  1706                           ;DS18B20.c: 63: {
  1707                           ;DS18B20.c: 64: Usart_PrintString( "ID: " );
  1708  045F  302A               	movlw	low (STR_11| (0+32768))
  1709  0460  00F1               	movwf	Usart_PrintString@Text
  1710  0461  3089               	movlw	high (STR_11| (0+32768))
  1711  0462  00F2               	movwf	Usart_PrintString@Text+1
  1712  0463  120A  158A  266C  120A  118A  	fcall	_Usart_PrintString
  1713                           
  1714                           ;DS18B20.c: 65: for( i = 0; i < 8; i++ ){
  1715  0468  1283               	bcf	3,5	;RP0=0, select bank0
  1716  0469  1303               	bcf	3,6	;RP1=0, select bank0
  1717  046A  01E2               	clrf	read_meas@i
  1718  046B  3008               	movlw	8
  1719  046C  0262               	subwf	read_meas@i,w
  1720  046D  1803               	btfsc	3,0
  1721  046E  2C97               	goto	l2134
  1722  046F                     l2128:	
  1723                           
  1724                           ;DS18B20.c: 66: sprintf(s, "%02X ", id[i] );
  1725  046F  3024               	movlw	low (STR_12| (0+32768))
  1726  0470  00A0               	movwf	sprintf@f
  1727  0471  3089               	movlw	high (STR_12| (0+32768))
  1728  0472  00A1               	movwf	sprintf@f+1
  1729  0473  0862               	movf	read_meas@i,w
  1730  0474  3E58               	addlw	(low (read_meas@id| 0))& (0+255)
  1731  0475  0084               	movwf	4
  1732  0476  1383               	bcf	3,7	;select IRP bank0
  1733  0477  0800               	movf	0,w
  1734  0478  00B6               	movwf	??_read_meas
  1735  0479  01B7               	clrf	??_read_meas+1
  1736  047A  0836               	movf	??_read_meas,w
  1737  047B  00A2               	movwf	?_sprintf+2
  1738  047C  0837               	movf	??_read_meas+1,w
  1739  047D  00A3               	movwf	?_sprintf+3
  1740  047E  3038               	movlw	(low (read_meas@s| 0))& (0+255)
  1741  047F  120A  118A  25A5  120A  118A  	fcall	_sprintf
  1742                           
  1743                           ;DS18B20.c: 68: Usart_PrintString(s);
  1744  0484  3038               	movlw	(low (read_meas@s| 0))& (0+255)
  1745  0485  00F1               	movwf	Usart_PrintString@Text
  1746  0486  3000               	movlw	0
  1747  0487  00F2               	movwf	Usart_PrintString@Text+1
  1748  0488  120A  158A  266C  120A  118A  	fcall	_Usart_PrintString
  1749  048D  3001               	movlw	1
  1750  048E  1283               	bcf	3,5	;RP0=0, select bank0
  1751  048F  1303               	bcf	3,6	;RP1=0, select bank0
  1752  0490  00B6               	movwf	??_read_meas
  1753  0491  0836               	movf	??_read_meas,w
  1754  0492  07E2               	addwf	read_meas@i,f
  1755  0493  3008               	movlw	8
  1756  0494  0262               	subwf	read_meas@i,w
  1757  0495  1C03               	skipc
  1758  0496  2C6F               	goto	l2128
  1759  0497                     l2134:	
  1760                           
  1761                           ;DS18B20.c: 69: }
  1762                           ;DS18B20.c: 70: OneWire_Byte_Write( 0xBE );
  1763  0497  30BE               	movlw	190
  1764  0498  120A  158A  25DD  120A  118A  	fcall	_OneWire_Byte_Write
  1765                           
  1766                           ;DS18B20.c: 73: temp = OneWire_Byte_Read();
  1767  049D  120A  158A  2546  120A  118A  	fcall	_OneWire_Byte_Read
  1768  04A2  087A               	movf	?_OneWire_Byte_Read+1,w
  1769  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  1770  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  1771  04A5  00ED               	movwf	_temp+1
  1772  04A6  0879               	movf	?_OneWire_Byte_Read,w
  1773  04A7  00EC               	movwf	_temp
  1774                           
  1775                           ;DS18B20.c: 74: temp |= (unsigned int)OneWire_Byte_Read() << 8;
  1776  04A8  120A  158A  2546  120A  118A  	fcall	_OneWire_Byte_Read
  1777  04AD  0879               	movf	?_OneWire_Byte_Read,w
  1778  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  1779  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  1780  04B0  00B7               	movwf	??_read_meas+1
  1781  04B1  01B6               	clrf	??_read_meas
  1782  04B2  0836               	movf	??_read_meas,w
  1783  04B3  04EC               	iorwf	_temp,f
  1784  04B4  0837               	movf	??_read_meas+1,w
  1785  04B5  04ED               	iorwf	_temp+1,f
  1786                           
  1787                           ;DS18B20.c: 76: byte[0]=temp>>8;
  1788  04B6  086D               	movf	_temp+1,w
  1789  04B7  00B6               	movwf	??_read_meas
  1790  04B8  0836               	movf	??_read_meas,w
  1791  04B9  00D6               	movwf	read_meas@byte
  1792                           
  1793                           ;DS18B20.c: 78: if (byte[0]&0x80)
  1794  04BA  1FD6               	btfss	read_meas@byte,7
  1795  04BB  2CC6               	goto	l134
  1796                           
  1797                           ;DS18B20.c: 79: {
  1798                           ;DS18B20.c: 80: temp=~temp;
  1799  04BC  09EC               	comf	_temp,f
  1800  04BD  09ED               	comf	_temp+1,f
  1801                           
  1802                           ;DS18B20.c: 81: temp+=1;
  1803  04BE  3001               	movlw	1
  1804  04BF  07EC               	addwf	_temp,f
  1805  04C0  1803               	skipnc
  1806  04C1  0AED               	incf	_temp+1,f
  1807  04C2  3000               	movlw	0
  1808  04C3  07ED               	addwf	_temp+1,f
  1809                           
  1810                           ;DS18B20.c: 82: ZNAK=0;
  1811  04C4  01EE               	clrf	_ZNAK
  1812                           
  1813                           ;DS18B20.c: 83: }
  1814  04C5  2D8A               	goto	l2188
  1815  04C6                     l134:	
  1816                           
  1817                           ;DS18B20.c: 84: else
  1818                           ;DS18B20.c: 85: {
  1819                           ;DS18B20.c: 86: ZNAK=1;
  1820  04C6  01EE               	clrf	_ZNAK
  1821  04C7  0AEE               	incf	_ZNAK,f
  1822                           
  1823                           ;DS18B20.c: 87: }
  1824                           ;DS18B20.c: 89: switch(ZNAK)
  1825  04C8  2D8A               	goto	l2188
  1826  04C9                     l2146:	
  1827                           ;DS18B20.c: 90: {
  1828                           ;DS18B20.c: 91: case 1:
  1829                           
  1830                           
  1831                           ;DS18B20.c: 92: {
  1832                           ;DS18B20.c: 93: if( id[0] == 0x10 )
  1833  04C9  3010               	movlw	16
  1834  04CA  0658               	xorwf	read_meas@id,w
  1835  04CB  1D03               	btfss	3,2
  1836  04CC  2CD4               	goto	l2150
  1837                           
  1838                           ;DS18B20.c: 94: temp <<= 3;
  1839  04CD  3003               	movlw	3
  1840  04CE                     u2235:	
  1841  04CE  1003               	clrc
  1842  04CF  0DEC               	rlf	_temp,f
  1843  04D0  0DED               	rlf	_temp+1,f
  1844  04D1  3EFF               	addlw	-1
  1845  04D2  1D03               	skipz
  1846  04D3  2CCE               	goto	u2235
  1847  04D4                     l2150:	
  1848                           
  1849                           ;DS18B20.c: 95: if(count==0)
  1850  04D4  0864               	movf	read_meas@count,w
  1851  04D5  1D03               	btfss	3,2
  1852  04D6  2CDC               	goto	l2154
  1853                           
  1854                           ;DS18B20.c: 96: {
  1855                           ;DS18B20.c: 97: Tvnesh=temp;
  1856  04D7  086D               	movf	_temp+1,w
  1857  04D8  00EB               	movwf	_Tvnesh+1
  1858  04D9  086C               	movf	_temp,w
  1859  04DA  00EA               	movwf	_Tvnesh
  1860                           
  1861                           ;DS18B20.c: 98: }
  1862  04DB  2CE3               	goto	l2158
  1863  04DC                     l2154:	
  1864                           
  1865                           ;DS18B20.c: 99: else if(count==1)
  1866  04DC  0364               	decf	read_meas@count,w
  1867  04DD  1D03               	btfss	3,2
  1868  04DE  2CE3               	goto	l2158
  1869                           
  1870                           ;DS18B20.c: 100: {
  1871                           ;DS18B20.c: 101: Tvnyt=temp;
  1872  04DF  086D               	movf	_temp+1,w
  1873  04E0  00E9               	movwf	_Tvnyt+1
  1874  04E1  086C               	movf	_temp,w
  1875  04E2  00E8               	movwf	_Tvnyt
  1876  04E3                     l2158:	
  1877                           
  1878                           ;DS18B20.c: 102: }
  1879                           ;DS18B20.c: 105: Indicate_LCDTemp(count,1);
  1880  04E3  01B3               	clrf	Indicate_LCDTemp@znakflag
  1881  04E4  0AB3               	incf	Indicate_LCDTemp@znakflag,f
  1882  04E5  0864               	movf	read_meas@count,w
  1883  04E6  120A  118A  22E0  120A  118A  	fcall	_Indicate_LCDTemp
  1884                           
  1885                           ;DS18B20.c: 106: sprintf( s, "Tcels=%4d.%01d C\r\n", temp >> 4, (temp << 12) / 6553 );
  1886  04EB  3099               	movlw	153
  1887  04EC  00F0               	movwf	___lwdiv@divisor
  1888  04ED  3019               	movlw	25
  1889  04EE  00F1               	movwf	___lwdiv@divisor+1
  1890  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  1891  04F0  1303               	bcf	3,6	;RP1=0, select bank0
  1892  04F1  086D               	movf	_temp+1,w
  1893  04F2  00B7               	movwf	??_read_meas+1
  1894  04F3  086C               	movf	_temp,w
  1895  04F4  00B6               	movwf	??_read_meas
  1896  04F5  0E36               	swapf	??_read_meas,w
  1897  04F6  39F0               	andlw	240
  1898  04F7  00B7               	movwf	??_read_meas+1
  1899  04F8  01B6               	clrf	??_read_meas
  1900  04F9  0836               	movf	??_read_meas,w
  1901  04FA  00F2               	movwf	___lwdiv@dividend
  1902  04FB  0837               	movf	??_read_meas+1,w
  1903  04FC  00F3               	movwf	___lwdiv@dividend+1
  1904  04FD  120A  118A  2013  120A  118A  	fcall	___lwdiv
  1905  0502  0871               	movf	?___lwdiv+1,w
  1906  0503  1283               	bcf	3,5	;RP0=0, select bank0
  1907  0504  1303               	bcf	3,6	;RP1=0, select bank0
  1908  0505  00E1               	movwf	_read_meas$737+1
  1909  0506  0870               	movf	?___lwdiv,w
  1910  0507  00E0               	movwf	_read_meas$737
  1911                           
  1912                           ;DS18B20.c: 106: sprintf( s, "Tcels=%4d.%01d C\r\n", temp >> 4, (temp << 12) / 6553 );
  1913  0508  3038               	movlw	low (STR_13| (0+32768))
  1914  0509  00A0               	movwf	sprintf@f
  1915  050A  3088               	movlw	high (STR_13| (0+32768))
  1916  050B  00A1               	movwf	sprintf@f+1
  1917  050C  0E6C               	swapf	_temp,w
  1918  050D  390F               	andlw	15
  1919  050E  00A2               	movwf	?_sprintf+2
  1920  050F  0E6D               	swapf	_temp+1,w
  1921  0510  39F0               	andlw	240
  1922  0511  04A2               	iorwf	?_sprintf+2,f
  1923  0512  0E6D               	swapf	_temp+1,w
  1924  0513  390F               	andlw	15
  1925  0514  00A3               	movwf	?_sprintf+3
  1926  0515  0861               	movf	_read_meas$737+1,w
  1927  0516  00A5               	movwf	?_sprintf+5
  1928  0517  0860               	movf	_read_meas$737,w
  1929  0518  00A4               	movwf	?_sprintf+4
  1930  0519  3038               	movlw	(low (read_meas@s| 0))& (0+255)
  1931  051A  120A  118A  25A5  120A  118A  	fcall	_sprintf
  1932                           
  1933                           ;DS18B20.c: 108: Usart_PrintString(s);
  1934  051F  3038               	movlw	(low (read_meas@s| 0))& (0+255)
  1935  0520  00F1               	movwf	Usart_PrintString@Text
  1936  0521  3000               	movlw	0
  1937  0522  00F2               	movwf	Usart_PrintString@Text+1
  1938  0523  120A  158A  266C  120A  118A  	fcall	_Usart_PrintString
  1939                           
  1940                           ;DS18B20.c: 109: break;
  1941  0528  2D94               	goto	l2190
  1942  0529                     l2166:	
  1943                           ;DS18B20.c: 110: }
  1944                           ;DS18B20.c: 111: case 0:
  1945                           
  1946                           
  1947                           ;DS18B20.c: 112: {
  1948                           ;DS18B20.c: 113: if( id[0] == 0x10 )
  1949  0529  3010               	movlw	16
  1950  052A  1283               	bcf	3,5	;RP0=0, select bank0
  1951  052B  1303               	bcf	3,6	;RP1=0, select bank0
  1952  052C  0658               	xorwf	read_meas@id,w
  1953  052D  1D03               	btfss	3,2
  1954  052E  2D36               	goto	l2170
  1955                           
  1956                           ;DS18B20.c: 114: temp <<= 3;
  1957  052F  3003               	movlw	3
  1958  0530                     u2275:	
  1959  0530  1003               	clrc
  1960  0531  0DEC               	rlf	_temp,f
  1961  0532  0DED               	rlf	_temp+1,f
  1962  0533  3EFF               	addlw	-1
  1963  0534  1D03               	skipz
  1964  0535  2D30               	goto	u2275
  1965  0536                     l2170:	
  1966                           
  1967                           ;DS18B20.c: 117: if(count==0)
  1968  0536  0864               	movf	read_meas@count,w
  1969  0537  1D03               	btfss	3,2
  1970  0538  2D3E               	goto	l2174
  1971                           
  1972                           ;DS18B20.c: 118: {
  1973                           ;DS18B20.c: 119: Tvnesh=temp;
  1974  0539  086D               	movf	_temp+1,w
  1975  053A  00EB               	movwf	_Tvnesh+1
  1976  053B  086C               	movf	_temp,w
  1977  053C  00EA               	movwf	_Tvnesh
  1978                           
  1979                           ;DS18B20.c: 120: }
  1980  053D  2D45               	goto	l2178
  1981  053E                     l2174:	
  1982                           
  1983                           ;DS18B20.c: 121: else if(count==1)
  1984  053E  0364               	decf	read_meas@count,w
  1985  053F  1D03               	btfss	3,2
  1986  0540  2D45               	goto	l2178
  1987                           
  1988                           ;DS18B20.c: 122: {
  1989                           ;DS18B20.c: 123: Tvnyt=temp;
  1990  0541  086D               	movf	_temp+1,w
  1991  0542  00E9               	movwf	_Tvnyt+1
  1992  0543  086C               	movf	_temp,w
  1993  0544  00E8               	movwf	_Tvnyt
  1994  0545                     l2178:	
  1995                           
  1996                           ;DS18B20.c: 124: }
  1997                           ;DS18B20.c: 125: Indicate_LCDTemp(count,0);
  1998  0545  01B3               	clrf	Indicate_LCDTemp@znakflag
  1999  0546  0864               	movf	read_meas@count,w
  2000  0547  120A  118A  22E0  120A  118A  	fcall	_Indicate_LCDTemp
  2001                           
  2002                           ;DS18B20.c: 126: sprintf( s, "Tcels=-%4d.%01d C\r\n", temp >> 4, (temp << 12) / 6553 );
  2003  054C  3099               	movlw	153
  2004  054D  00F0               	movwf	___lwdiv@divisor
  2005  054E  3019               	movlw	25
  2006  054F  00F1               	movwf	___lwdiv@divisor+1
  2007  0550  1283               	bcf	3,5	;RP0=0, select bank0
  2008  0551  1303               	bcf	3,6	;RP1=0, select bank0
  2009  0552  086D               	movf	_temp+1,w
  2010  0553  00B7               	movwf	??_read_meas+1
  2011  0554  086C               	movf	_temp,w
  2012  0555  00B6               	movwf	??_read_meas
  2013  0556  0E36               	swapf	??_read_meas,w
  2014  0557  39F0               	andlw	240
  2015  0558  00B7               	movwf	??_read_meas+1
  2016  0559  01B6               	clrf	??_read_meas
  2017  055A  0836               	movf	??_read_meas,w
  2018  055B  00F2               	movwf	___lwdiv@dividend
  2019  055C  0837               	movf	??_read_meas+1,w
  2020  055D  00F3               	movwf	___lwdiv@dividend+1
  2021  055E  120A  118A  2013  120A  118A  	fcall	___lwdiv
  2022  0563  0871               	movf	?___lwdiv+1,w
  2023  0564  1283               	bcf	3,5	;RP0=0, select bank0
  2024  0565  1303               	bcf	3,6	;RP1=0, select bank0
  2025  0566  00E1               	movwf	_read_meas$737+1
  2026  0567  0870               	movf	?___lwdiv,w
  2027  0568  00E0               	movwf	_read_meas$737
  2028                           
  2029                           ;DS18B20.c: 126: sprintf( s, "Tcels=-%4d.%01d C\r\n", temp >> 4, (temp << 12) / 6553 );
  2030  0569  3024               	movlw	low (STR_14| (0+32768))
  2031  056A  00A0               	movwf	sprintf@f
  2032  056B  3088               	movlw	high (STR_14| (0+32768))
  2033  056C  00A1               	movwf	sprintf@f+1
  2034  056D  0E6C               	swapf	_temp,w
  2035  056E  390F               	andlw	15
  2036  056F  00A2               	movwf	?_sprintf+2
  2037  0570  0E6D               	swapf	_temp+1,w
  2038  0571  39F0               	andlw	240
  2039  0572  04A2               	iorwf	?_sprintf+2,f
  2040  0573  0E6D               	swapf	_temp+1,w
  2041  0574  390F               	andlw	15
  2042  0575  00A3               	movwf	?_sprintf+3
  2043  0576  0861               	movf	_read_meas$737+1,w
  2044  0577  00A5               	movwf	?_sprintf+5
  2045  0578  0860               	movf	_read_meas$737,w
  2046  0579  00A4               	movwf	?_sprintf+4
  2047  057A  3038               	movlw	(low (read_meas@s| 0))& (0+255)
  2048  057B  120A  118A  25A5  120A  118A  	fcall	_sprintf
  2049                           
  2050                           ;DS18B20.c: 128: Usart_PrintString(s );
  2051  0580  3038               	movlw	(low (read_meas@s| 0))& (0+255)
  2052  0581  00F1               	movwf	Usart_PrintString@Text
  2053  0582  3000               	movlw	0
  2054  0583  00F2               	movwf	Usart_PrintString@Text+1
  2055  0584  120A  158A  266C  120A  118A  	fcall	_Usart_PrintString
  2056                           
  2057                           ;DS18B20.c: 130: }
  2058                           ;DS18B20.c: 131: }
  2059                           
  2060                           ;DS18B20.c: 129: break;
  2061  0589  2D94               	goto	l2190
  2062  058A                     l2188:	
  2063  058A  1283               	bcf	3,5	;RP0=0, select bank0
  2064  058B  1303               	bcf	3,6	;RP1=0, select bank0
  2065  058C  086E               	movf	_ZNAK,w
  2066                           
  2067                           ; Switch size 1, requested type "space"
  2068                           ; Number of cases is 2, Range of values is 0 to 1
  2069                           ; switch strategies available:
  2070                           ; Name         Instructions Cycles
  2071                           ; simple_byte            7     4 (average)
  2072                           ; direct_byte           14     8 (fixed)
  2073                           ; jumptable            260     6 (fixed)
  2074                           ;	Chosen strategy is simple_byte
  2075  058D  3A00               	xorlw	0	; case 0
  2076  058E  1903               	skipnz
  2077  058F  2D29               	goto	l2166
  2078  0590  3A01               	xorlw	1	; case 1
  2079  0591  1903               	skipnz
  2080  0592  2CC9               	goto	l2146
  2081  0593  2D94               	goto	l2190
  2082  0594                     l2190:	
  2083  0594  3001               	movlw	1
  2084  0595  1283               	bcf	3,5	;RP0=0, select bank0
  2085  0596  1303               	bcf	3,6	;RP1=0, select bank0
  2086  0597  00B6               	movwf	??_read_meas
  2087  0598  0836               	movf	??_read_meas,w
  2088  0599  07E4               	addwf	read_meas@count,f
  2089  059A  0863               	movf	read_meas@diff,w
  2090  059B  1D03               	btfss	3,2
  2091  059C  2BE1               	goto	l2100
  2092  059D                     l2192:	
  2093                           
  2094                           ;DS18B20.c: 142: }
  2095                           ;DS18B20.c: 143: }
  2096                           ;DS18B20.c: 144: Usart_PrintString( "" );
  2097  059D  3082               	movlw	low ((STR_6+17)| (0+32768))
  2098  059E  00F1               	movwf	Usart_PrintString@Text
  2099  059F  3088               	movlw	high ((STR_6+17)| (0+32768))
  2100  05A0  00F2               	movwf	Usart_PrintString@Text+1
  2101  05A1  120A  158A  266C   	fcall	_Usart_PrintString
  2102  05A4  0008               	return
  2103  05A5                     __end_of_read_meas:	
  2104                           
  2105                           	psect	text4
  2106  0F8D                     __ptext4:	
  2107 ;; *************** function _w1_rom_search *****************
  2108 ;; Defined at:
  2109 ;;		line 67 in file "OneWire.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  diff            1    wreg     unsigned char 
  2112 ;;  id              1    9[COMMON] PTR unsigned char 
  2113 ;;		 -> read_meas@id(8), 
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;  diff            1    2[BANK0 ] unsigned char 
  2116 ;;  b               1    4[BANK0 ] unsigned char 
  2117 ;;  i               1    3[BANK0 ] unsigned char 
  2118 ;;  next_diff       1    1[BANK0 ] unsigned char 
  2119 ;;  j               1    0[BANK0 ] unsigned char 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      unsigned char 
  2122 ;; Registers used:
  2123 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2129 ;;      Params:         1       0       0       0       0
  2130 ;;      Locals:         0       5       0       0       0
  2131 ;;      Temps:          1       0       0       0       0
  2132 ;;      Totals:         2       5       0       0       0
  2133 ;;Total ram usage:        7 bytes
  2134 ;; Hardware stack levels used:    1
  2135 ;; Hardware stack levels required when called:    2
  2136 ;; This function calls:
  2137 ;;		_OneWire_Bit_IO
  2138 ;;		_OneWire_Byte_Write
  2139 ;;		_OneWire_reset
  2140 ;; This function is called by:
  2141 ;;		_read_meas
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           
  2146                           ;psect for function _w1_rom_search
  2147  0F8D                     _w1_rom_search:	
  2148                           
  2149                           ;incstack = 0
  2150                           ; Regs used in _w1_rom_search: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2151                           ;w1_rom_search@diff stored from wreg
  2152  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  2153  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  2154  0F8F  00A2               	movwf	w1_rom_search@diff
  2155                           
  2156                           ;OneWire.c: 69: uint8_t i, j, next_diff;
  2157                           ;OneWire.c: 70: uint8_t b;
  2158                           ;OneWire.c: 72: if( OneWire_reset() )
  2159  0F90  120A  158A  26F9  120A  158A  	fcall	_OneWire_reset
  2160  0F95  3A00               	xorlw	0
  2161  0F96  1903               	skipnz
  2162  0F97  2F9A               	goto	l1900
  2163                           
  2164                           ;OneWire.c: 73: return 0xFF;
  2165  0F98  30FF               	movlw	255
  2166  0F99  0008               	return
  2167  0F9A                     l1900:	
  2168                           
  2169                           ;OneWire.c: 74: OneWire_Byte_Write( 0xF0 );
  2170  0F9A  30F0               	movlw	240
  2171  0F9B  120A  158A  25DD  120A  158A  	fcall	_OneWire_Byte_Write
  2172                           
  2173                           ;OneWire.c: 75: next_diff = 0x00;
  2174  0FA0  1283               	bcf	3,5	;RP0=0, select bank0
  2175  0FA1  1303               	bcf	3,6	;RP1=0, select bank0
  2176  0FA2  01A1               	clrf	w1_rom_search@next_diff
  2177                           
  2178                           ;OneWire.c: 76: i = 8 * 8;
  2179  0FA3  3040               	movlw	64
  2180  0FA4  00FA               	movwf	??_w1_rom_search
  2181  0FA5  087A               	movf	??_w1_rom_search,w
  2182  0FA6  00A3               	movwf	w1_rom_search@i
  2183  0FA7                     l1906:	
  2184                           ;OneWire.c: 77: do{
  2185                           
  2186                           
  2187                           ;OneWire.c: 78: j = 8;
  2188  0FA7  3008               	movlw	8
  2189  0FA8  00FA               	movwf	??_w1_rom_search
  2190  0FA9  087A               	movf	??_w1_rom_search,w
  2191  0FAA  00A0               	movwf	w1_rom_search@j
  2192  0FAB                     l1908:	
  2193                           ;OneWire.c: 79: do{
  2194                           
  2195                           
  2196                           ;OneWire.c: 80: b = OneWire_Bit_IO( 1 );
  2197  0FAB  3001               	movlw	1
  2198  0FAC  120A  158A  25C0  120A  158A  	fcall	_OneWire_Bit_IO
  2199  0FB1  00FA               	movwf	??_w1_rom_search
  2200  0FB2  087A               	movf	??_w1_rom_search,w
  2201  0FB3  1283               	bcf	3,5	;RP0=0, select bank0
  2202  0FB4  1303               	bcf	3,6	;RP1=0, select bank0
  2203  0FB5  00A4               	movwf	w1_rom_search@b
  2204                           
  2205                           ;OneWire.c: 81: if( OneWire_Bit_IO( 1 ) ){
  2206  0FB6  3001               	movlw	1
  2207  0FB7  120A  158A  25C0  120A  158A  	fcall	_OneWire_Bit_IO
  2208  0FBC  3A00               	xorlw	0
  2209  0FBD  1903               	skipnz
  2210  0FBE  2FC6               	goto	l1918
  2211                           
  2212                           ;OneWire.c: 82: if( b )
  2213  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  2214  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  2215  0FC1  0824               	movf	w1_rom_search@b,w
  2216  0FC2  1903               	btfsc	3,2
  2217  0FC3  2FDE               	goto	l1928
  2218                           
  2219                           ;OneWire.c: 83: return 0xFE;
  2220  0FC4  30FE               	movlw	254
  2221  0FC5  0008               	return
  2222  0FC6                     l1918:	
  2223                           ;OneWire.c: 84: }else{
  2224                           
  2225                           
  2226                           ;OneWire.c: 85: if( !b ){
  2227  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  2228  0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  2229  0FC8  0824               	movf	w1_rom_search@b,w
  2230  0FC9  1D03               	btfss	3,2
  2231  0FCA  2FDE               	goto	l1928
  2232                           
  2233                           ;OneWire.c: 86: if( diff > i ||
  2234                           ;OneWire.c: 87: ((*id & 1) && diff != i) ){
  2235  0FCB  0822               	movf	w1_rom_search@diff,w
  2236  0FCC  0223               	subwf	w1_rom_search@i,w
  2237  0FCD  1C03               	skipc
  2238  0FCE  2FD8               	goto	l202
  2239  0FCF  0879               	movf	w1_rom_search@id,w
  2240  0FD0  0084               	movwf	4
  2241  0FD1  1383               	bcf	3,7	;select IRP bank0
  2242  0FD2  1C00               	btfss	0,0
  2243  0FD3  2FDE               	goto	l1928
  2244  0FD4  0822               	movf	w1_rom_search@diff,w
  2245  0FD5  0623               	xorwf	w1_rom_search@i,w
  2246  0FD6  1903               	skipnz
  2247  0FD7  2FDE               	goto	l1928
  2248  0FD8                     l202:	
  2249                           
  2250                           ;OneWire.c: 88: b = 1;
  2251  0FD8  01A4               	clrf	w1_rom_search@b
  2252  0FD9  0AA4               	incf	w1_rom_search@b,f
  2253                           
  2254                           ;OneWire.c: 89: next_diff = i;
  2255  0FDA  0823               	movf	w1_rom_search@i,w
  2256  0FDB  00FA               	movwf	??_w1_rom_search
  2257  0FDC  087A               	movf	??_w1_rom_search,w
  2258  0FDD  00A1               	movwf	w1_rom_search@next_diff
  2259  0FDE                     l1928:	
  2260                           
  2261                           ;OneWire.c: 90: }
  2262                           ;OneWire.c: 91: }
  2263                           ;OneWire.c: 92: }
  2264                           ;OneWire.c: 93: OneWire_Bit_IO( b );
  2265  0FDE  0824               	movf	w1_rom_search@b,w
  2266  0FDF  120A  158A  25C0  120A  158A  	fcall	_OneWire_Bit_IO
  2267                           
  2268                           ;OneWire.c: 94: *id >>= 1;
  2269  0FE4  0879               	movf	w1_rom_search@id,w
  2270  0FE5  0084               	movwf	4
  2271  0FE6  1003               	clrc
  2272  0FE7  1383               	bcf	3,7	;select IRP bank0
  2273  0FE8  0C80               	rrf	0,f
  2274                           
  2275                           ;OneWire.c: 95: if( b )
  2276  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  2277  0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  2278  0FEB  0824               	movf	w1_rom_search@b,w
  2279  0FEC  1903               	btfsc	3,2
  2280  0FED  2FF1               	goto	l1936
  2281                           
  2282                           ;OneWire.c: 96: *id |= 0x80;
  2283  0FEE  0879               	movf	w1_rom_search@id,w
  2284  0FEF  0084               	movwf	4
  2285  0FF0  1780               	bsf	0,7
  2286  0FF1                     l1936:	
  2287                           
  2288                           ;OneWire.c: 97: i--;
  2289  0FF1  3001               	movlw	1
  2290  0FF2  02A3               	subwf	w1_rom_search@i,f
  2291                           
  2292                           ;OneWire.c: 98: }while( --j );
  2293  0FF3  3001               	movlw	1
  2294  0FF4  02A0               	subwf	w1_rom_search@j,f
  2295  0FF5  1D03               	btfss	3,2
  2296  0FF6  2FAB               	goto	l1908
  2297                           
  2298                           ;OneWire.c: 99: id++;
  2299  0FF7  3001               	movlw	1
  2300  0FF8  00FA               	movwf	??_w1_rom_search
  2301  0FF9  087A               	movf	??_w1_rom_search,w
  2302  0FFA  07F9               	addwf	w1_rom_search@id,f
  2303                           
  2304                           ;OneWire.c: 100: }while( i );
  2305  0FFB  0823               	movf	w1_rom_search@i,w
  2306  0FFC  1D03               	btfss	3,2
  2307  0FFD  2FA7               	goto	l1906
  2308                           
  2309                           ;OneWire.c: 101: return next_diff;
  2310  0FFE  0821               	movf	w1_rom_search@next_diff,w
  2311  0FFF  0008               	return
  2312  1000                     __end_of_w1_rom_search:	
  2313                           
  2314                           	psect	text5
  2315  0EF9                     __ptext5:	
  2316 ;; *************** function _OneWire_reset *****************
  2317 ;; Defined at:
  2318 ;;		line 3 in file "OneWire.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;		None
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;  err             1    2[COMMON] unsigned char 
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  1    wreg      unsigned char 
  2325 ;; Registers used:
  2326 ;;		wreg, status,2, status,0
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2332 ;;      Params:         0       0       0       0       0
  2333 ;;      Locals:         1       0       0       0       0
  2334 ;;      Temps:          2       0       0       0       0
  2335 ;;      Totals:         3       0       0       0       0
  2336 ;;Total ram usage:        3 bytes
  2337 ;; Hardware stack levels used:    1
  2338 ;; This function calls:
  2339 ;;		Nothing
  2340 ;; This function is called by:
  2341 ;;		_w1_rom_search
  2342 ;;		_OneWire_command
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           
  2347                           ;psect for function _OneWire_reset
  2348  0EF9                     _OneWire_reset:	
  2349                           
  2350                           ;OneWire.c: 5: uint8_t err;
  2351                           ;OneWire.c: 6: PORTCbits.RC0=0;
  2352                           
  2353                           ;incstack = 0
  2354                           ; Regs used in _OneWire_reset: [wreg+status,2+status,0]
  2355  0EF9  1283               	bcf	3,5	;RP0=0, select bank0
  2356  0EFA  1303               	bcf	3,6	;RP1=0, select bank0
  2357  0EFB  1007               	bcf	7,0	;volatile
  2358                           
  2359                           ;OneWire.c: 7: TRISC0=0;
  2360  0EFC  1683               	bsf	3,5	;RP0=1, select bank1
  2361  0EFD  1303               	bcf	3,6	;RP1=0, select bank1
  2362  0EFE  1007               	bcf	7,0	;volatile
  2363                           
  2364                           ;OneWire.c: 8: _delay((unsigned long)((480)*(8000000/4000000.0)));
  2365  0EFF  30BF               	movlw	191
  2366  0F00  00F0               	movwf	??_OneWire_reset
  2367  0F01                     u2347:	
  2368  0F01  2F02               	nop2
  2369  0F02  0BF0               	decfsz	??_OneWire_reset,f
  2370  0F03  2F01               	goto	u2347
  2371  0F04  2F05               	nop2
  2372  0F05  2F06               	nop2
  2373                           
  2374                           ;OneWire.c: 9: TRISC0=1;
  2375  0F06  1683               	bsf	3,5	;RP0=1, select bank1
  2376  0F07  1303               	bcf	3,6	;RP1=0, select bank1
  2377  0F08  1407               	bsf	7,0	;volatile
  2378                           
  2379                           ;OneWire.c: 10: _delay((unsigned long)((66)*(8000000/4000000.0)));
  2380  0F09  302B               	movlw	43
  2381  0F0A  00F0               	movwf	??_OneWire_reset
  2382  0F0B                     u2357:	
  2383  0F0B  0BF0               	decfsz	??_OneWire_reset,f
  2384  0F0C  2F0B               	goto	u2357
  2385  0F0D  2F0E               	nop2
  2386                           
  2387                           ;OneWire.c: 11: err=PORTC&(1<<PORTCbits.RC0);
  2388  0F0E  3001               	movlw	1
  2389  0F0F  00F0               	movwf	??_OneWire_reset
  2390  0F10  1283               	bcf	3,5	;RP0=0, select bank0
  2391  0F11  1303               	bcf	3,6	;RP1=0, select bank0
  2392  0F12  0807               	movf	7,w	;volatile
  2393  0F13  3901               	andlw	1
  2394  0F14  3E01               	addlw	1
  2395  0F15  2F18               	goto	u1754
  2396  0F16                     u1755:	
  2397  0F16  1003               	clrc
  2398  0F17  0DF0               	rlf	??_OneWire_reset,f
  2399  0F18                     u1754:	
  2400  0F18  3EFF               	addlw	-1
  2401  0F19  1D03               	skipz
  2402  0F1A  2F16               	goto	u1755
  2403  0F1B  0870               	movf	??_OneWire_reset,w
  2404  0F1C  0507               	andwf	7,w	;volatile
  2405  0F1D  00F1               	movwf	??_OneWire_reset+1
  2406  0F1E  0871               	movf	??_OneWire_reset+1,w
  2407  0F1F  00F2               	movwf	OneWire_reset@err
  2408                           
  2409                           ;OneWire.c: 12: _delay((unsigned long)((480-66)*(8000000/4000000.0)));
  2410  0F20  30A5               	movlw	165
  2411  0F21  00F0               	movwf	??_OneWire_reset
  2412  0F22                     u2367:	
  2413  0F22  2F23               	nop2
  2414  0F23  0BF0               	decfsz	??_OneWire_reset,f
  2415  0F24  2F22               	goto	u2367
  2416  0F25  2F26               	nop2
  2417                           
  2418                           ;OneWire.c: 13: if(RC0==0)
  2419  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  2420  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  2421  0F28  1807               	btfsc	7,0	;volatile
  2422  0F29  2F2C               	goto	l1862
  2423                           
  2424                           ;OneWire.c: 14: {
  2425                           ;OneWire.c: 15: err=1;
  2426  0F2A  01F2               	clrf	OneWire_reset@err
  2427  0F2B  0AF2               	incf	OneWire_reset@err,f
  2428  0F2C                     l1862:	
  2429                           
  2430                           ;OneWire.c: 16: }
  2431                           ;OneWire.c: 18: return err;
  2432  0F2C  0872               	movf	OneWire_reset@err,w
  2433  0F2D  0008               	return
  2434  0F2E                     __end_of_OneWire_reset:	
  2435                           
  2436                           	psect	text6
  2437  0E6C                     __ptext6:	
  2438 ;; *************** function _Usart_PrintString *****************
  2439 ;; Defined at:
  2440 ;;		line 58 in file "USART.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  Text            2    1[COMMON] PTR unsigned char 
  2443 ;;		 -> STR_15(1), read_meas@s(30), STR_11(5), STR_10(18), 
  2444 ;;		 -> STR_8(12), STR_6(18), STR_4(18), STR_2(18), 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  i               1    4[COMMON] unsigned char 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  1    wreg      void 
  2449 ;; Registers used:
  2450 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2456 ;;      Params:         2       0       0       0       0
  2457 ;;      Locals:         1       0       0       0       0
  2458 ;;      Temps:          1       0       0       0       0
  2459 ;;      Totals:         4       0       0       0       0
  2460 ;;Total ram usage:        4 bytes
  2461 ;; Hardware stack levels used:    1
  2462 ;; Hardware stack levels required when called:    1
  2463 ;; This function calls:
  2464 ;;		_Transmit_char
  2465 ;; This function is called by:
  2466 ;;		_start_meas
  2467 ;;		_read_meas
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           
  2472                           ;psect for function _Usart_PrintString
  2473  0E6C                     _Usart_PrintString:	
  2474                           
  2475                           ;USART.c: 60: char i=0;
  2476                           
  2477                           ;incstack = 0
  2478                           ; Regs used in _Usart_PrintString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2479  0E6C  01F4               	clrf	Usart_PrintString@i
  2480                           
  2481                           ;USART.c: 61: for(i=0;Text[i]!='\0';i++)
  2482  0E6D  01F4               	clrf	Usart_PrintString@i
  2483  0E6E                     l1892:	
  2484  0E6E  0874               	movf	Usart_PrintString@i,w
  2485  0E6F  0771               	addwf	Usart_PrintString@Text,w
  2486  0E70  0084               	movwf	4
  2487  0E71  0872               	movf	Usart_PrintString@Text+1,w
  2488  0E72  1803               	skipnc
  2489  0E73  0A72               	incf	Usart_PrintString@Text+1,w
  2490  0E74  1283               	bcf	3,5	;RP0=0, select bank0
  2491  0E75  1303               	bcf	3,6	;RP1=0, select bank0
  2492  0E76  00FF               	movwf	127
  2493  0E77  120A  158A  2000  120A  158A  	fcall	stringtab
  2494  0E7C  3A00               	xorlw	0
  2495  0E7D  1903               	btfsc	3,2
  2496  0E7E  0008               	return
  2497                           
  2498                           ;USART.c: 62: {
  2499                           ;USART.c: 63: Transmit_char(Text[i]);
  2500  0E7F  0874               	movf	Usart_PrintString@i,w
  2501  0E80  0771               	addwf	Usart_PrintString@Text,w
  2502  0E81  0084               	movwf	4
  2503  0E82  0872               	movf	Usart_PrintString@Text+1,w
  2504  0E83  1803               	skipnc
  2505  0E84  0A72               	incf	Usart_PrintString@Text+1,w
  2506  0E85  1283               	bcf	3,5	;RP0=0, select bank0
  2507  0E86  1303               	bcf	3,6	;RP1=0, select bank0
  2508  0E87  00FF               	movwf	127
  2509  0E88  120A  158A  2000  120A  158A  	fcall	stringtab
  2510  0E8D  120A  158A  254F  120A  158A  	fcall	_Transmit_char
  2511  0E92  3001               	movlw	1
  2512  0E93  00F3               	movwf	??_Usart_PrintString
  2513  0E94  0873               	movf	??_Usart_PrintString,w
  2514  0E95  07F4               	addwf	Usart_PrintString@i,f
  2515  0E96  2E6E               	goto	l1892
  2516  0E97                     __end_of_Usart_PrintString:	
  2517                           
  2518                           	psect	text7
  2519  0D4F                     __ptext7:	
  2520 ;; *************** function _Transmit_char *****************
  2521 ;; Defined at:
  2522 ;;		line 37 in file "USART.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;  data            1    wreg     unsigned char 
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;  data            1    0[COMMON] unsigned char 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      void 
  2529 ;; Registers used:
  2530 ;;		wreg
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2536 ;;      Params:         0       0       0       0       0
  2537 ;;      Locals:         1       0       0       0       0
  2538 ;;      Temps:          0       0       0       0       0
  2539 ;;      Totals:         1       0       0       0       0
  2540 ;;Total ram usage:        1 bytes
  2541 ;; Hardware stack levels used:    1
  2542 ;; This function calls:
  2543 ;;		Nothing
  2544 ;; This function is called by:
  2545 ;;		_Usart_PrintString
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           
  2550                           ;psect for function _Transmit_char
  2551  0D4F                     _Transmit_char:	
  2552                           
  2553                           ;incstack = 0
  2554                           ; Regs used in _Transmit_char: [wreg]
  2555                           ;Transmit_char@data stored from wreg
  2556  0D4F  00F0               	movwf	Transmit_char@data
  2557  0D50                     l244:	
  2558                           ;USART.c: 39: while(!TRMT);
  2559                           
  2560  0D50  1683               	bsf	3,5	;RP0=1, select bank1
  2561  0D51  1303               	bcf	3,6	;RP1=0, select bank1
  2562  0D52  1C98               	btfss	24,1	;volatile
  2563  0D53  2D50               	goto	l244
  2564                           
  2565                           ;USART.c: 40: TXREG=data;
  2566  0D54  0870               	movf	Transmit_char@data,w
  2567  0D55  1283               	bcf	3,5	;RP0=0, select bank0
  2568  0D56  1303               	bcf	3,6	;RP1=0, select bank0
  2569  0D57  0099               	movwf	25	;volatile
  2570  0D58  0008               	return
  2571  0D59                     __end_of_Transmit_char:	
  2572                           
  2573                           	psect	text8
  2574  0D46                     __ptext8:	
  2575 ;; *************** function _OneWire_Byte_Read *****************
  2576 ;; Defined at:
  2577 ;;		line 60 in file "OneWire.c"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;		None
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;		None
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  2    9[COMMON] unsigned int 
  2584 ;; Registers used:
  2585 ;;		wreg, status,2, status,0, pclath, cstack
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2591 ;;      Params:         2       0       0       0       0
  2592 ;;      Locals:         0       0       0       0       0
  2593 ;;      Temps:          0       0       0       0       0
  2594 ;;      Totals:         2       0       0       0       0
  2595 ;;Total ram usage:        2 bytes
  2596 ;; Hardware stack levels used:    1
  2597 ;; Hardware stack levels required when called:    2
  2598 ;; This function calls:
  2599 ;;		_OneWire_Byte_Write
  2600 ;; This function is called by:
  2601 ;;		_read_meas
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           
  2606                           ;psect for function _OneWire_Byte_Read
  2607  0D46                     _OneWire_Byte_Read:	
  2608                           
  2609                           ;OneWire.c: 62: return OneWire_Byte_Write(0xFF);
  2610                           
  2611                           ;incstack = 0
  2612                           ; Regs used in _OneWire_Byte_Read: [wreg+status,2+status,0+pclath+cstack]
  2613  0D46  30FF               	movlw	255
  2614  0D47  120A  158A  25DD   	fcall	_OneWire_Byte_Write
  2615  0D4A  0873               	movf	?_OneWire_Byte_Write+1,w
  2616  0D4B  00FA               	movwf	?_OneWire_Byte_Read+1
  2617  0D4C  0872               	movf	?_OneWire_Byte_Write,w
  2618  0D4D  00F9               	movwf	?_OneWire_Byte_Read
  2619  0D4E  0008               	return
  2620  0D4F                     __end_of_OneWire_Byte_Read:	
  2621                           
  2622                           	psect	text9
  2623  0DDD                     __ptext9:	
  2624 ;; *************** function _OneWire_Byte_Write *****************
  2625 ;; Defined at:
  2626 ;;		line 45 in file "OneWire.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  b               1    wreg     unsigned char 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  b               1    8[COMMON] unsigned char 
  2631 ;;  j               1    7[COMMON] unsigned char 
  2632 ;;  i               1    6[COMMON] unsigned char 
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  2    2[COMMON] unsigned int 
  2635 ;; Registers used:
  2636 ;;		wreg, status,2, status,0, pclath, cstack
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2642 ;;      Params:         2       0       0       0       0
  2643 ;;      Locals:         3       0       0       0       0
  2644 ;;      Temps:          2       0       0       0       0
  2645 ;;      Totals:         7       0       0       0       0
  2646 ;;Total ram usage:        7 bytes
  2647 ;; Hardware stack levels used:    1
  2648 ;; Hardware stack levels required when called:    1
  2649 ;; This function calls:
  2650 ;;		_OneWire_Bit_IO
  2651 ;; This function is called by:
  2652 ;;		_read_meas
  2653 ;;		_OneWire_Byte_Read
  2654 ;;		_w1_rom_search
  2655 ;;		_OneWire_command
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           
  2660                           ;psect for function _OneWire_Byte_Write
  2661  0DDD                     _OneWire_Byte_Write:	
  2662                           
  2663                           ;incstack = 0
  2664                           ; Regs used in _OneWire_Byte_Write: [wreg+status,2+status,0+pclath+cstack]
  2665                           ;OneWire_Byte_Write@b stored from wreg
  2666  0DDD  00F8               	movwf	OneWire_Byte_Write@b
  2667                           
  2668                           ;OneWire.c: 47: uint8_t i=8,j;
  2669  0DDE  3008               	movlw	8
  2670  0DDF  00F4               	movwf	??_OneWire_Byte_Write
  2671  0DE0  0874               	movf	??_OneWire_Byte_Write,w
  2672  0DE1  00F6               	movwf	OneWire_Byte_Write@i
  2673  0DE2                     l1834:	
  2674                           ;OneWire.c: 49: do{
  2675                           
  2676                           
  2677                           ;OneWire.c: 50: j=OneWire_Bit_IO(b&1);
  2678  0DE2  0878               	movf	OneWire_Byte_Write@b,w
  2679  0DE3  3901               	andlw	1
  2680  0DE4  120A  158A  25C0  120A  158A  	fcall	_OneWire_Bit_IO
  2681  0DE9  00F4               	movwf	??_OneWire_Byte_Write
  2682  0DEA  0874               	movf	??_OneWire_Byte_Write,w
  2683  0DEB  00F7               	movwf	OneWire_Byte_Write@j
  2684                           
  2685                           ;OneWire.c: 51: b>>=1;
  2686  0DEC  1003               	clrc
  2687  0DED  0CF8               	rrf	OneWire_Byte_Write@b,f
  2688                           
  2689                           ;OneWire.c: 52: if(j)
  2690  0DEE  0877               	movf	OneWire_Byte_Write@j,w
  2691  0DEF  1D03               	btfss	3,2
  2692                           
  2693                           ;OneWire.c: 53: {
  2694                           ;OneWire.c: 54: b|=0x80;
  2695  0DF0  17F8               	bsf	OneWire_Byte_Write@b,7
  2696                           
  2697                           ;OneWire.c: 55: }
  2698                           ;OneWire.c: 56: }while(--i);
  2699  0DF1  3001               	movlw	1
  2700  0DF2  02F6               	subwf	OneWire_Byte_Write@i,f
  2701  0DF3  1D03               	btfss	3,2
  2702  0DF4  2DE2               	goto	l1834
  2703                           
  2704                           ;OneWire.c: 57: return b;
  2705  0DF5  0878               	movf	OneWire_Byte_Write@b,w
  2706  0DF6  00F4               	movwf	??_OneWire_Byte_Write
  2707  0DF7  01F5               	clrf	??_OneWire_Byte_Write+1
  2708  0DF8  0874               	movf	??_OneWire_Byte_Write,w
  2709  0DF9  00F2               	movwf	?_OneWire_Byte_Write
  2710  0DFA  0875               	movf	??_OneWire_Byte_Write+1,w
  2711  0DFB  00F3               	movwf	?_OneWire_Byte_Write+1
  2712  0DFC  0008               	return
  2713  0DFD                     __end_of_OneWire_Byte_Write:	
  2714                           
  2715                           	psect	text10
  2716  0DC0                     __ptext10:	
  2717 ;; *************** function _OneWire_Bit_IO *****************
  2718 ;; Defined at:
  2719 ;;		line 24 in file "OneWire.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;  b               1    wreg     unsigned char 
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;  b               1    1[COMMON] unsigned char 
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      unsigned char 
  2726 ;; Registers used:
  2727 ;;		wreg, status,2, status,0
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2733 ;;      Params:         0       0       0       0       0
  2734 ;;      Locals:         1       0       0       0       0
  2735 ;;      Temps:          1       0       0       0       0
  2736 ;;      Totals:         2       0       0       0       0
  2737 ;;Total ram usage:        2 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; This function calls:
  2740 ;;		Nothing
  2741 ;; This function is called by:
  2742 ;;		_OneWire_Byte_Write
  2743 ;;		_w1_rom_search
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           
  2748                           ;psect for function _OneWire_Bit_IO
  2749  0DC0                     _OneWire_Bit_IO:	
  2750                           
  2751                           ;incstack = 0
  2752                           ; Regs used in _OneWire_Bit_IO: [wreg+status,2+status,0]
  2753                           ;OneWire_Bit_IO@b stored from wreg
  2754  0DC0  00F1               	movwf	OneWire_Bit_IO@b
  2755                           
  2756                           ;OneWire.c: 26: TRISC0=0;
  2757  0DC1  1683               	bsf	3,5	;RP0=1, select bank1
  2758  0DC2  1303               	bcf	3,6	;RP1=0, select bank1
  2759  0DC3  1007               	bcf	7,0	;volatile
  2760                           
  2761                           ;OneWire.c: 27: _delay((unsigned long)((1)*(8000000/4000000.0)));
  2762  0DC4  2DC5               	nop2	;2 cycle nop
  2763                           
  2764                           ;OneWire.c: 28: if(b)
  2765  0DC5  0871               	movf	OneWire_Bit_IO@b,w
  2766  0DC6  1903               	btfsc	3,2
  2767  0DC7  2DCB               	goto	l1608
  2768                           
  2769                           ;OneWire.c: 29: {
  2770                           ;OneWire.c: 30: TRISC0=1;
  2771  0DC8  1683               	bsf	3,5	;RP0=1, select bank1
  2772  0DC9  1303               	bcf	3,6	;RP1=0, select bank1
  2773  0DCA  1407               	bsf	7,0	;volatile
  2774  0DCB                     l1608:	
  2775                           
  2776                           ;OneWire.c: 32: }
  2777                           ;OneWire.c: 33: _delay((unsigned long)((14)*(8000000/4000000.0)));
  2778  0DCB  3009               	movlw	9
  2779  0DCC  00F0               	movwf	??_OneWire_Bit_IO
  2780  0DCD                     u2377:	
  2781  0DCD  0BF0               	decfsz	??_OneWire_Bit_IO,f
  2782  0DCE  2DCD               	goto	u2377
  2783                           
  2784                           ;OneWire.c: 34: if(RC0==0)
  2785  0DCF  1283               	bcf	3,5	;RP0=0, select bank0
  2786  0DD0  1303               	bcf	3,6	;RP1=0, select bank0
  2787  0DD1  1C07               	btfss	7,0	;volatile
  2788                           
  2789                           ;OneWire.c: 35: {
  2790                           ;OneWire.c: 36: b=0;
  2791  0DD2  01F1               	clrf	OneWire_Bit_IO@b
  2792                           
  2793                           ;OneWire.c: 37: }
  2794                           ;OneWire.c: 39: _delay((unsigned long)((45)*(8000000/4000000.0)));
  2795  0DD3  301D               	movlw	29
  2796  0DD4  00F0               	movwf	??_OneWire_Bit_IO
  2797  0DD5                     u2387:	
  2798  0DD5  0BF0               	decfsz	??_OneWire_Bit_IO,f
  2799  0DD6  2DD5               	goto	u2387
  2800  0DD7  2DD8               	nop2
  2801                           
  2802                           ;OneWire.c: 40: TRISC0=1;
  2803  0DD8  1683               	bsf	3,5	;RP0=1, select bank1
  2804  0DD9  1303               	bcf	3,6	;RP1=0, select bank1
  2805  0DDA  1407               	bsf	7,0	;volatile
  2806                           
  2807                           ;OneWire.c: 41: return b;
  2808  0DDB  0871               	movf	OneWire_Bit_IO@b,w
  2809  0DDC  0008               	return
  2810  0DDD                     __end_of_OneWire_Bit_IO:	
  2811                           
  2812                           	psect	text11
  2813  02E0                     __ptext11:	
  2814 ;; *************** function _Indicate_LCDTemp *****************
  2815 ;; Defined at:
  2816 ;;		line 149 in file "DS18B20.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;  flag            1    wreg     unsigned char 
  2819 ;;  znakflag        1   19[BANK0 ] unsigned char 
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;  flag            1   60[BANK1 ] unsigned char 
  2822 ;;  bufferVnyt     30   30[BANK1 ] unsigned char [30]
  2823 ;;  bufferVn       30    0[BANK1 ] unsigned char [30]
  2824 ;;  byte            2    0        unsigned char [2]
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  1    wreg      void 
  2827 ;; Registers used:
  2828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2834 ;;      Params:         0       1       0       0       0
  2835 ;;      Locals:         0       0      63       0       0
  2836 ;;      Temps:          0       2       0       0       0
  2837 ;;      Totals:         0       3      63       0       0
  2838 ;;Total ram usage:       66 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; Hardware stack levels required when called:    4
  2841 ;; This function calls:
  2842 ;;		_LCD_PrintStringXY
  2843 ;;		___lwdiv
  2844 ;;		_sprintf
  2845 ;; This function is called by:
  2846 ;;		_read_meas
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           
  2851                           ;psect for function _Indicate_LCDTemp
  2852  02E0                     _Indicate_LCDTemp:	
  2853                           
  2854                           ;incstack = 0
  2855                           ; Regs used in _Indicate_LCDTemp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2856                           ;Indicate_LCDTemp@flag stored from wreg
  2857  02E0  1683               	bsf	3,5	;RP0=1, select bank1
  2858  02E1  1303               	bcf	3,6	;RP1=0, select bank1
  2859  02E2  00DC               	movwf	Indicate_LCDTemp@flag^(0+128)
  2860                           
  2861                           ;DS18B20.c: 151: char bufferVn[30];
  2862                           ;DS18B20.c: 152: char bufferVnyt[30];
  2863                           ;DS18B20.c: 153: char byte[2];
  2864                           ;DS18B20.c: 154: switch(flag)
  2865  02E3  2BCC               	goto	l1982
  2866  02E4                     l1952:	
  2867                           ;DS18B20.c: 155: {
  2868                           ;DS18B20.c: 156: case 0:
  2869                           
  2870                           
  2871                           ;DS18B20.c: 157: {
  2872                           ;DS18B20.c: 158: if(znakflag==1)
  2873  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  2874  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  2875  02E6  0333               	decf	Indicate_LCDTemp@znakflag,w
  2876  02E7  1D03               	btfss	3,2
  2877  02E8  2B0A               	goto	l1958
  2878                           
  2879                           ;DS18B20.c: 159: {
  2880                           ;DS18B20.c: 160: sprintf(bufferVn,"Tvnesh=+%4d.%01d C",Tvnesh >> 4, (Tvnesh << 12) / 655
      +                          3);
  2881  02E9  3099               	movlw	153
  2882  02EA  00F0               	movwf	___lwdiv@divisor
  2883  02EB  3019               	movlw	25
  2884  02EC  00F1               	movwf	___lwdiv@divisor+1
  2885  02ED  086B               	movf	_Tvnesh+1,w
  2886  02EE  00B5               	movwf	??_Indicate_LCDTemp+1
  2887  02EF  086A               	movf	_Tvnesh,w
  2888  02F0  00B4               	movwf	??_Indicate_LCDTemp
  2889  02F1  0E34               	swapf	??_Indicate_LCDTemp,w
  2890  02F2  39F0               	andlw	240
  2891  02F3  00B5               	movwf	??_Indicate_LCDTemp+1
  2892  02F4  01B4               	clrf	??_Indicate_LCDTemp
  2893  02F5  0834               	movf	??_Indicate_LCDTemp,w
  2894  02F6  00F2               	movwf	___lwdiv@dividend
  2895  02F7  0835               	movf	??_Indicate_LCDTemp+1,w
  2896  02F8  00F3               	movwf	___lwdiv@dividend+1
  2897  02F9  120A  118A  2013  120A  118A  	fcall	___lwdiv
  2898  02FE  0871               	movf	?___lwdiv+1,w
  2899  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  2900  0300  1303               	bcf	3,6	;RP1=0, select bank1
  2901  0301  00DE               	movwf	(_Indicate_LCDTemp$738+1)^(0+128)
  2902  0302  0870               	movf	?___lwdiv,w
  2903  0303  00DD               	movwf	_Indicate_LCDTemp$738^(0+128)
  2904                           
  2905                           ;DS18B20.c: 159: {
  2906                           ;DS18B20.c: 160: sprintf(bufferVn,"Tvnesh=+%4d.%01d C",Tvnesh >> 4, (Tvnesh << 12) / 655
      +                          3);
  2907  0304  304B               	movlw	low (STR_16| (0+32768))
  2908  0305  1283               	bcf	3,5	;RP0=0, select bank0
  2909  0306  1303               	bcf	3,6	;RP1=0, select bank0
  2910  0307  00A0               	movwf	sprintf@f
  2911  0308  3088               	movlw	high (STR_16| (0+32768))
  2912  0309  2B2F               	goto	L2
  2913  030A                     l1958:	
  2914                           ;DS18B20.c: 162: }
  2915                           
  2916                           
  2917                           ;DS18B20.c: 163: else if(znakflag==0)
  2918  030A  1283               	bcf	3,5	;RP0=0, select bank0
  2919  030B  1303               	bcf	3,6	;RP1=0, select bank0
  2920  030C  0833               	movf	Indicate_LCDTemp@znakflag,w
  2921  030D  1D03               	btfss	3,2
  2922  030E  2B4B               	goto	l1964
  2923                           
  2924                           ;DS18B20.c: 164: {
  2925                           ;DS18B20.c: 165: sprintf(bufferVn,"Tvnesh=-%4d.%01d C",Tvnesh >> 4, (Tvnesh << 12) / 655
      +                          3);
  2926  030F  3099               	movlw	153
  2927  0310  00F0               	movwf	___lwdiv@divisor
  2928  0311  3019               	movlw	25
  2929  0312  00F1               	movwf	___lwdiv@divisor+1
  2930  0313  086B               	movf	_Tvnesh+1,w
  2931  0314  00B5               	movwf	??_Indicate_LCDTemp+1
  2932  0315  086A               	movf	_Tvnesh,w
  2933  0316  00B4               	movwf	??_Indicate_LCDTemp
  2934  0317  0E34               	swapf	??_Indicate_LCDTemp,w
  2935  0318  39F0               	andlw	240
  2936  0319  00B5               	movwf	??_Indicate_LCDTemp+1
  2937  031A  01B4               	clrf	??_Indicate_LCDTemp
  2938  031B  0834               	movf	??_Indicate_LCDTemp,w
  2939  031C  00F2               	movwf	___lwdiv@dividend
  2940  031D  0835               	movf	??_Indicate_LCDTemp+1,w
  2941  031E  00F3               	movwf	___lwdiv@dividend+1
  2942  031F  120A  118A  2013  120A  118A  	fcall	___lwdiv
  2943  0324  0871               	movf	?___lwdiv+1,w
  2944  0325  1683               	bsf	3,5	;RP0=1, select bank1
  2945  0326  1303               	bcf	3,6	;RP1=0, select bank1
  2946  0327  00DE               	movwf	(_Indicate_LCDTemp$738+1)^(0+128)
  2947  0328  0870               	movf	?___lwdiv,w
  2948  0329  00DD               	movwf	_Indicate_LCDTemp$738^(0+128)
  2949                           
  2950                           ;DS18B20.c: 164: {
  2951                           ;DS18B20.c: 165: sprintf(bufferVn,"Tvnesh=-%4d.%01d C",Tvnesh >> 4, (Tvnesh << 12) / 655
      +                          3);
  2952  032A  305E               	movlw	low (STR_17| (0+32768))
  2953  032B  1283               	bcf	3,5	;RP0=0, select bank0
  2954  032C  1303               	bcf	3,6	;RP1=0, select bank0
  2955  032D  00A0               	movwf	sprintf@f
  2956  032E  3088               	movlw	high (STR_17| (0+32768))
  2957  032F                     L2:	
  2958  032F  00A1               	movwf	sprintf@f+1
  2959  0330  0E6A               	swapf	_Tvnesh,w
  2960  0331  390F               	andlw	15
  2961  0332  00A2               	movwf	?_sprintf+2
  2962  0333  0E6B               	swapf	_Tvnesh+1,w
  2963  0334  39F0               	andlw	240
  2964  0335  04A2               	iorwf	?_sprintf+2,f
  2965  0336  0E6B               	swapf	_Tvnesh+1,w
  2966  0337  390F               	andlw	15
  2967  0338  00A3               	movwf	?_sprintf+3
  2968  0339  1683               	bsf	3,5	;RP0=1, select bank1
  2969  033A  1303               	bcf	3,6	;RP1=0, select bank1
  2970  033B  085E               	movf	(_Indicate_LCDTemp$738+1)^(0+128),w
  2971  033C  1283               	bcf	3,5	;RP0=0, select bank0
  2972  033D  1303               	bcf	3,6	;RP1=0, select bank0
  2973  033E  00A5               	movwf	?_sprintf+5
  2974  033F  1683               	bsf	3,5	;RP0=1, select bank1
  2975  0340  1303               	bcf	3,6	;RP1=0, select bank1
  2976  0341  085D               	movf	_Indicate_LCDTemp$738^(0+128),w
  2977  0342  1283               	bcf	3,5	;RP0=0, select bank0
  2978  0343  1303               	bcf	3,6	;RP1=0, select bank0
  2979  0344  00A4               	movwf	?_sprintf+4
  2980  0345  30A0               	movlw	(low (Indicate_LCDTemp@bufferVn| 0))& (0+255)
  2981  0346  120A  118A  25A5  120A  118A  	fcall	_sprintf
  2982  034B                     l1964:	
  2983                           
  2984                           ;DS18B20.c: 166: }
  2985                           ;DS18B20.c: 167: LCD_PrintStringXY(bufferVn,0,1);
  2986  034B  30A0               	movlw	(low (Indicate_LCDTemp@bufferVn| 0))& (0+255)
  2987  034C  00F8               	movwf	LCD_PrintStringXY@str
  2988  034D  3000               	movlw	0
  2989  034E  00F9               	movwf	LCD_PrintStringXY@str+1
  2990  034F  01FA               	clrf	LCD_PrintStringXY@x
  2991  0350  01FB               	clrf	LCD_PrintStringXY@y
  2992  0351  0AFB               	incf	LCD_PrintStringXY@y,f
  2993  0352  120A  158A  2564   	fcall	_LCD_PrintStringXY
  2994                           
  2995                           ;DS18B20.c: 168: break;
  2996  0355  0008               	return
  2997  0356                     l1966:	
  2998                           ;DS18B20.c: 169: }
  2999                           ;DS18B20.c: 170: case 1:
  3000                           
  3001                           
  3002                           ;DS18B20.c: 171: {
  3003                           ;DS18B20.c: 172: if(znakflag==1)
  3004  0356  1283               	bcf	3,5	;RP0=0, select bank0
  3005  0357  1303               	bcf	3,6	;RP1=0, select bank0
  3006  0358  0333               	decf	Indicate_LCDTemp@znakflag,w
  3007  0359  1D03               	btfss	3,2
  3008  035A  2B7C               	goto	l1972
  3009                           
  3010                           ;DS18B20.c: 173: {
  3011                           ;DS18B20.c: 174: sprintf(bufferVnyt,"Tvnyt=+%4d.%01d C",Tvnyt >> 4, (Tvnyt << 12) / 6553
      +                          );
  3012  035B  3099               	movlw	153
  3013  035C  00F0               	movwf	___lwdiv@divisor
  3014  035D  3019               	movlw	25
  3015  035E  00F1               	movwf	___lwdiv@divisor+1
  3016  035F  0869               	movf	_Tvnyt+1,w
  3017  0360  00B5               	movwf	??_Indicate_LCDTemp+1
  3018  0361  0868               	movf	_Tvnyt,w
  3019  0362  00B4               	movwf	??_Indicate_LCDTemp
  3020  0363  0E34               	swapf	??_Indicate_LCDTemp,w
  3021  0364  39F0               	andlw	240
  3022  0365  00B5               	movwf	??_Indicate_LCDTemp+1
  3023  0366  01B4               	clrf	??_Indicate_LCDTemp
  3024  0367  0834               	movf	??_Indicate_LCDTemp,w
  3025  0368  00F2               	movwf	___lwdiv@dividend
  3026  0369  0835               	movf	??_Indicate_LCDTemp+1,w
  3027  036A  00F3               	movwf	___lwdiv@dividend+1
  3028  036B  120A  118A  2013  120A  118A  	fcall	___lwdiv
  3029  0370  0871               	movf	?___lwdiv+1,w
  3030  0371  1683               	bsf	3,5	;RP0=1, select bank1
  3031  0372  1303               	bcf	3,6	;RP1=0, select bank1
  3032  0373  00DE               	movwf	(_Indicate_LCDTemp$738+1)^(0+128)
  3033  0374  0870               	movf	?___lwdiv,w
  3034  0375  00DD               	movwf	_Indicate_LCDTemp$738^(0+128)
  3035                           
  3036                           ;DS18B20.c: 173: {
  3037                           ;DS18B20.c: 174: sprintf(bufferVnyt,"Tvnyt=+%4d.%01d C",Tvnyt >> 4, (Tvnyt << 12) / 6553
      +                          );
  3038  0376  30A7               	movlw	low (STR_18| (0+32768))
  3039  0377  1283               	bcf	3,5	;RP0=0, select bank0
  3040  0378  1303               	bcf	3,6	;RP1=0, select bank0
  3041  0379  00A0               	movwf	sprintf@f
  3042  037A  3088               	movlw	high (STR_18| (0+32768))
  3043  037B  2BA1               	goto	L3
  3044  037C                     l1972:	
  3045                           ;DS18B20.c: 175: }
  3046                           
  3047                           
  3048                           ;DS18B20.c: 176: else if(znakflag==0)
  3049  037C  1283               	bcf	3,5	;RP0=0, select bank0
  3050  037D  1303               	bcf	3,6	;RP1=0, select bank0
  3051  037E  0833               	movf	Indicate_LCDTemp@znakflag,w
  3052  037F  1D03               	btfss	3,2
  3053  0380  2BBD               	goto	l1978
  3054                           
  3055                           ;DS18B20.c: 177: {
  3056                           ;DS18B20.c: 178: sprintf(bufferVnyt,"Tvnyt=-%4d.%01d C",Tvnyt >> 4, (Tvnyt << 12) / 6553
      +                          );
  3057  0381  3099               	movlw	153
  3058  0382  00F0               	movwf	___lwdiv@divisor
  3059  0383  3019               	movlw	25
  3060  0384  00F1               	movwf	___lwdiv@divisor+1
  3061  0385  0869               	movf	_Tvnyt+1,w
  3062  0386  00B5               	movwf	??_Indicate_LCDTemp+1
  3063  0387  0868               	movf	_Tvnyt,w
  3064  0388  00B4               	movwf	??_Indicate_LCDTemp
  3065  0389  0E34               	swapf	??_Indicate_LCDTemp,w
  3066  038A  39F0               	andlw	240
  3067  038B  00B5               	movwf	??_Indicate_LCDTemp+1
  3068  038C  01B4               	clrf	??_Indicate_LCDTemp
  3069  038D  0834               	movf	??_Indicate_LCDTemp,w
  3070  038E  00F2               	movwf	___lwdiv@dividend
  3071  038F  0835               	movf	??_Indicate_LCDTemp+1,w
  3072  0390  00F3               	movwf	___lwdiv@dividend+1
  3073  0391  120A  118A  2013  120A  118A  	fcall	___lwdiv
  3074  0396  0871               	movf	?___lwdiv+1,w
  3075  0397  1683               	bsf	3,5	;RP0=1, select bank1
  3076  0398  1303               	bcf	3,6	;RP1=0, select bank1
  3077  0399  00DE               	movwf	(_Indicate_LCDTemp$738+1)^(0+128)
  3078  039A  0870               	movf	?___lwdiv,w
  3079  039B  00DD               	movwf	_Indicate_LCDTemp$738^(0+128)
  3080                           
  3081                           ;DS18B20.c: 177: {
  3082                           ;DS18B20.c: 178: sprintf(bufferVnyt,"Tvnyt=-%4d.%01d C",Tvnyt >> 4, (Tvnyt << 12) / 6553
      +                          );
  3083  039C  30B9               	movlw	low (STR_19| (0+32768))
  3084  039D  1283               	bcf	3,5	;RP0=0, select bank0
  3085  039E  1303               	bcf	3,6	;RP1=0, select bank0
  3086  039F  00A0               	movwf	sprintf@f
  3087  03A0  3088               	movlw	high (STR_19| (0+32768))
  3088  03A1                     L3:	
  3089  03A1  00A1               	movwf	sprintf@f+1
  3090  03A2  0E68               	swapf	_Tvnyt,w
  3091  03A3  390F               	andlw	15
  3092  03A4  00A2               	movwf	?_sprintf+2
  3093  03A5  0E69               	swapf	_Tvnyt+1,w
  3094  03A6  39F0               	andlw	240
  3095  03A7  04A2               	iorwf	?_sprintf+2,f
  3096  03A8  0E69               	swapf	_Tvnyt+1,w
  3097  03A9  390F               	andlw	15
  3098  03AA  00A3               	movwf	?_sprintf+3
  3099  03AB  1683               	bsf	3,5	;RP0=1, select bank1
  3100  03AC  1303               	bcf	3,6	;RP1=0, select bank1
  3101  03AD  085E               	movf	(_Indicate_LCDTemp$738+1)^(0+128),w
  3102  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  3103  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  3104  03B0  00A5               	movwf	?_sprintf+5
  3105  03B1  1683               	bsf	3,5	;RP0=1, select bank1
  3106  03B2  1303               	bcf	3,6	;RP1=0, select bank1
  3107  03B3  085D               	movf	_Indicate_LCDTemp$738^(0+128),w
  3108  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  3109  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  3110  03B6  00A4               	movwf	?_sprintf+4
  3111  03B7  30BE               	movlw	(low (Indicate_LCDTemp@bufferVnyt| 0))& (0+255)
  3112  03B8  120A  118A  25A5  120A  118A  	fcall	_sprintf
  3113  03BD                     l1978:	
  3114                           
  3115                           ;DS18B20.c: 179: }
  3116                           ;DS18B20.c: 180: LCD_PrintStringXY(bufferVnyt,0,2);
  3117  03BD  30BE               	movlw	(low (Indicate_LCDTemp@bufferVnyt| 0))& (0+255)
  3118  03BE  00F8               	movwf	LCD_PrintStringXY@str
  3119  03BF  3000               	movlw	0
  3120  03C0  00F9               	movwf	LCD_PrintStringXY@str+1
  3121  03C1  01FA               	clrf	LCD_PrintStringXY@x
  3122  03C2  3002               	movlw	2
  3123  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  3124  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  3125  03C5  00B4               	movwf	??_Indicate_LCDTemp
  3126  03C6  0834               	movf	??_Indicate_LCDTemp,w
  3127  03C7  00FB               	movwf	LCD_PrintStringXY@y
  3128  03C8  120A  158A  2564   	fcall	_LCD_PrintStringXY
  3129                           
  3130                           ;DS18B20.c: 182: }
  3131                           ;DS18B20.c: 183: }
  3132                           
  3133                           ;DS18B20.c: 181: break;
  3134  03CB  0008               	return
  3135  03CC                     l1982:	
  3136  03CC  1683               	bsf	3,5	;RP0=1, select bank1
  3137  03CD  1303               	bcf	3,6	;RP1=0, select bank1
  3138  03CE  085C               	movf	Indicate_LCDTemp@flag^(0+128),w
  3139                           
  3140                           ; Switch size 1, requested type "space"
  3141                           ; Number of cases is 2, Range of values is 0 to 1
  3142                           ; switch strategies available:
  3143                           ; Name         Instructions Cycles
  3144                           ; simple_byte            7     4 (average)
  3145                           ; direct_byte           14     8 (fixed)
  3146                           ; jumptable            260     6 (fixed)
  3147                           ;	Chosen strategy is simple_byte
  3148  03CF  3A00               	xorlw	0	; case 0
  3149  03D0  1903               	skipnz
  3150  03D1  2AE4               	goto	l1952
  3151  03D2  3A01               	xorlw	1	; case 1
  3152  03D3  1903               	skipnz
  3153  03D4  2B56               	goto	l1966
  3154  03D5  2BD6               	goto	l161
  3155  03D6                     l161:	
  3156  03D6  0008               	return
  3157  03D7                     __end_of_Indicate_LCDTemp:	
  3158                           
  3159                           	psect	text12
  3160  05A5                     __ptext12:	
  3161 ;; *************** function _sprintf *****************
  3162 ;; Defined at:
  3163 ;;		line 492 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\doprnt.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;  sp              1    wreg     PTR unsigned char 
  3166 ;;		 -> Indicate_LCDTemp@bufferVnyt(30), Indicate_LCDTemp@bufferVn(30), read_meas@s(30), 
  3167 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  3168 ;;		 -> STR_19(18), STR_18(18), STR_17(19), STR_16(19), 
  3169 ;;		 -> STR_14(20), STR_13(19), STR_12(6), 
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;  sp              1   17[BANK0 ] PTR unsigned char 
  3172 ;;		 -> Indicate_LCDTemp@bufferVnyt(30), Indicate_LCDTemp@bufferVn(30), read_meas@s(30), 
  3173 ;;  idx             1    9[BANK0 ] unsigned char 
  3174 ;;  tmpval          4    0        struct .
  3175 ;;  width           2   15[BANK0 ] int 
  3176 ;;  val             2   12[BANK0 ] unsigned int 
  3177 ;;  cp              2    0        PTR const unsigned char 
  3178 ;;  len             2    0        unsigned int 
  3179 ;;  c               1   18[BANK0 ] char 
  3180 ;;  flag            1   14[BANK0 ] unsigned char 
  3181 ;;  prec            1   11[BANK0 ] char 
  3182 ;;  ap              1   10[BANK0 ] PTR void [1]
  3183 ;;		 -> ?_sprintf(2), 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  2    0[BANK0 ] int 
  3186 ;; Registers used:
  3187 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3193 ;;      Params:         0       6       0       0       0
  3194 ;;      Locals:         0      10       0       0       0
  3195 ;;      Temps:          0       3       0       0       0
  3196 ;;      Totals:         0      19       0       0       0
  3197 ;;Total ram usage:       19 bytes
  3198 ;; Hardware stack levels used:    1
  3199 ;; Hardware stack levels required when called:    1
  3200 ;; This function calls:
  3201 ;;		___lwdiv
  3202 ;;		___lwmod
  3203 ;;		___wmul
  3204 ;;		_isdigit
  3205 ;; This function is called by:
  3206 ;;		_read_meas
  3207 ;;		_Indicate_LCDTemp
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           
  3212                           ;psect for function _sprintf
  3213  05A5                     _sprintf:	
  3214                           
  3215                           ;incstack = 0
  3216                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3217                           ;sprintf@sp stored from wreg
  3218  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  3219  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  3220  05A7  00B1               	movwf	sprintf@sp
  3221                           
  3222                           ;doprnt.c: 494: va_list ap;
  3223                           ;doprnt.c: 499: signed char c;
  3224                           ;doprnt.c: 501: int width;
  3225                           ;doprnt.c: 506: signed char prec;
  3226                           ;doprnt.c: 508: unsigned char flag;
  3227                           ;doprnt.c: 523: union {
  3228                           ;doprnt.c: 524: unsigned long vd;
  3229                           ;doprnt.c: 525: double integ;
  3230                           ;doprnt.c: 526: } tmpval;
  3231                           ;doprnt.c: 528: unsigned int val;
  3232                           ;doprnt.c: 529: unsigned len;
  3233                           ;doprnt.c: 530: const char * cp;
  3234                           ;doprnt.c: 533: *ap = __va_start();
  3235  05A8  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3236  05A9  00A6               	movwf	??_sprintf
  3237  05AA  0826               	movf	??_sprintf,w
  3238  05AB  00AA               	movwf	sprintf@ap
  3239  05AC                     l1826:	
  3240                           ;doprnt.c: 536: while(c = *f++) {
  3241                           
  3242  05AC  0821               	movf	sprintf@f+1,w
  3243  05AD  00A7               	movwf	??_sprintf+1
  3244  05AE  0820               	movf	sprintf@f,w
  3245  05AF  00A6               	movwf	??_sprintf
  3246  05B0  0AA0               	incf	sprintf@f,f
  3247  05B1  1903               	skipnz
  3248  05B2  0AA1               	incf	sprintf@f+1,f
  3249  05B3  0827               	movf	??_sprintf+1,w
  3250  05B4  00FF               	movwf	127
  3251  05B5  0826               	movf	??_sprintf,w
  3252  05B6  0084               	movwf	4
  3253  05B7  120A  158A  2000  120A  118A  	fcall	stringtab
  3254  05BC  00A8               	movwf	??_sprintf+2
  3255  05BD  0828               	movf	??_sprintf+2,w
  3256  05BE  00B2               	movwf	sprintf@c
  3257  05BF  0832               	movf	sprintf@c,w
  3258  05C0  1903               	btfsc	3,2
  3259  05C1  2FEB               	goto	l1828
  3260                           
  3261                           ;doprnt.c: 538: if(c != '%')
  3262  05C2  3025               	movlw	37
  3263  05C3  0632               	xorwf	sprintf@c,w
  3264  05C4  1903               	btfsc	3,2
  3265  05C5  2DD2               	goto	l1708
  3266                           
  3267                           ;doprnt.c: 540: {
  3268                           ;doprnt.c: 541: ((*sp++ = (c)));
  3269  05C6  0832               	movf	sprintf@c,w
  3270  05C7  00A6               	movwf	??_sprintf
  3271  05C8  0831               	movf	sprintf@sp,w
  3272  05C9  0084               	movwf	4
  3273  05CA  0826               	movf	??_sprintf,w
  3274  05CB  1383               	bcf	3,7	;select IRP bank0
  3275  05CC  0080               	movwf	0
  3276  05CD  3001               	movlw	1
  3277  05CE  00A6               	movwf	??_sprintf
  3278  05CF  0826               	movf	??_sprintf,w
  3279  05D0  07B1               	addwf	sprintf@sp,f
  3280                           
  3281                           ;doprnt.c: 542: continue;
  3282  05D1  2DAC               	goto	l1826
  3283  05D2                     l1708:	
  3284                           
  3285                           ;doprnt.c: 543: }
  3286                           ;doprnt.c: 546: width = 0;
  3287  05D2  01AF               	clrf	sprintf@width
  3288  05D3  01B0               	clrf	sprintf@width+1
  3289                           
  3290                           ;doprnt.c: 548: flag = 0;
  3291  05D4  01AE               	clrf	sprintf@flag
  3292                           
  3293                           ;doprnt.c: 551: switch(*f) {
  3294                           
  3295                           ;doprnt.c: 550: for(;;) {
  3296  05D5  2DDB               	goto	l1712
  3297  05D6                     l289:	
  3298                           ;doprnt.c: 579: case '0':
  3299                           
  3300                           
  3301                           ;doprnt.c: 580: flag |= 0x04;
  3302  05D6  152E               	bsf	sprintf@flag,2
  3303                           
  3304                           ;doprnt.c: 581: f++;
  3305  05D7  3001               	movlw	1
  3306  05D8  07A0               	addwf	sprintf@f,f
  3307  05D9  1803               	skipnc
  3308  05DA  0AA1               	incf	sprintf@f+1,f
  3309  05DB                     l1712:	
  3310                           ;doprnt.c: 584: }
  3311                           
  3312                           ;doprnt.c: 582: continue;
  3313                           
  3314  05DB  0821               	movf	sprintf@f+1,w
  3315  05DC  00FF               	movwf	127
  3316  05DD  0820               	movf	sprintf@f,w
  3317  05DE  0084               	movwf	4
  3318  05DF  120A  158A  2000  120A  118A  	fcall	stringtab
  3319                           
  3320                           ; Switch size 1, requested type "space"
  3321                           ; Number of cases is 1, Range of values is 48 to 48
  3322                           ; switch strategies available:
  3323                           ; Name         Instructions Cycles
  3324                           ; simple_byte            4     3 (average)
  3325                           ; direct_byte           14    11 (fixed)
  3326                           ; jumptable            263     9 (fixed)
  3327                           ;	Chosen strategy is simple_byte
  3328  05E4  3A30               	xorlw	48	; case 48
  3329  05E5  1903               	skipnz
  3330  05E6  2DD6               	goto	l289
  3331  05E7  2DE8               	goto	l1714
  3332  05E8                     l1714:	
  3333                           ;doprnt.c: 586: }
  3334                           
  3335                           ;doprnt.c: 585: break;
  3336                           
  3337                           
  3338                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3339  05E8  0821               	movf	sprintf@f+1,w
  3340  05E9  00FF               	movwf	127
  3341  05EA  0820               	movf	sprintf@f,w
  3342  05EB  0084               	movwf	4
  3343  05EC  120A  158A  2000  120A  118A  	fcall	stringtab
  3344  05F1  120A  118A  2005  120A  118A  	fcall	_isdigit
  3345  05F6  1C03               	btfss	3,0
  3346  05F7  2E3F               	goto	l1728
  3347                           
  3348                           ;doprnt.c: 598: width = 0;
  3349  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  3350  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  3351  05FA  01AF               	clrf	sprintf@width
  3352  05FB  01B0               	clrf	sprintf@width+1
  3353  05FC                     l1718:	
  3354                           ;doprnt.c: 599: do {
  3355                           
  3356                           
  3357                           ;doprnt.c: 600: width *= 10;
  3358  05FC  300A               	movlw	10
  3359  05FD  00F0               	movwf	___wmul@multiplier
  3360  05FE  3000               	movlw	0
  3361  05FF  00F1               	movwf	___wmul@multiplier+1
  3362  0600  1283               	bcf	3,5	;RP0=0, select bank0
  3363  0601  1303               	bcf	3,6	;RP1=0, select bank0
  3364  0602  0830               	movf	sprintf@width+1,w
  3365  0603  00F3               	movwf	___wmul@multiplicand+1
  3366  0604  082F               	movf	sprintf@width,w
  3367  0605  00F2               	movwf	___wmul@multiplicand
  3368  0606  120A  158A  25FD  120A  118A  	fcall	___wmul
  3369  060B  0871               	movf	?___wmul+1,w
  3370  060C  1283               	bcf	3,5	;RP0=0, select bank0
  3371  060D  1303               	bcf	3,6	;RP1=0, select bank0
  3372  060E  00B0               	movwf	sprintf@width+1
  3373  060F  0870               	movf	?___wmul,w
  3374  0610  00AF               	movwf	sprintf@width
  3375                           
  3376                           ;doprnt.c: 601: width += *f++ - '0';
  3377  0611  0821               	movf	sprintf@f+1,w
  3378  0612  00FF               	movwf	127
  3379  0613  0820               	movf	sprintf@f,w
  3380  0614  0084               	movwf	4
  3381  0615  120A  158A  2000  120A  118A  	fcall	stringtab
  3382  061A  3ED0               	addlw	208
  3383  061B  00A6               	movwf	??_sprintf
  3384  061C  30FF               	movlw	255
  3385  061D  1803               	skipnc
  3386  061E  3000               	movlw	0
  3387  061F  00A7               	movwf	??_sprintf+1
  3388  0620  0826               	movf	??_sprintf,w
  3389  0621  07AF               	addwf	sprintf@width,f
  3390  0622  1803               	skipnc
  3391  0623  0AB0               	incf	sprintf@width+1,f
  3392  0624  0827               	movf	??_sprintf+1,w
  3393  0625  07B0               	addwf	sprintf@width+1,f
  3394  0626  3001               	movlw	1
  3395  0627  07A0               	addwf	sprintf@f,f
  3396  0628  1803               	skipnc
  3397  0629  0AA1               	incf	sprintf@f+1,f
  3398                           
  3399                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3400  062A  0821               	movf	sprintf@f+1,w
  3401  062B  00FF               	movwf	127
  3402  062C  0820               	movf	sprintf@f,w
  3403  062D  0084               	movwf	4
  3404  062E  120A  158A  2000  120A  118A  	fcall	stringtab
  3405  0633  120A  118A  2005  120A  118A  	fcall	_isdigit
  3406  0638  1C03               	btfss	3,0
  3407  0639  2E3F               	goto	l1728
  3408  063A  2DFC               	goto	l1718
  3409  063B                     l303:	
  3410                           ;doprnt.c: 712: case 'X':
  3411                           
  3412                           ;doprnt.c: 698: case 'i':
  3413                           ;doprnt.c: 699: break;
  3414                           
  3415                           ;doprnt.c: 697: case 'd':
  3416                           
  3417                           ;doprnt.c: 638: goto alldone;
  3418                           
  3419                           ;doprnt.c: 637: case 0:
  3420                           
  3421                           ;doprnt.c: 608: }
  3422                           ;doprnt.c: 635: switch(c = *f++) {
  3423                           
  3424                           
  3425                           ;doprnt.c: 718: case 'x':
  3426                           ;doprnt.c: 721: flag |= 0x80;
  3427  063B  1283               	bcf	3,5	;RP0=0, select bank0
  3428  063C  1303               	bcf	3,6	;RP1=0, select bank0
  3429  063D  17AE               	bsf	sprintf@flag,7
  3430                           
  3431                           ;doprnt.c: 723: break;
  3432  063E  2E62               	goto	l301
  3433  063F                     l1728:	
  3434                           ;doprnt.c: 822: }
  3435                           
  3436                           ;doprnt.c: 813: continue;
  3437                           
  3438                           ;doprnt.c: 802: default:
  3439                           
  3440  063F  1283               	bcf	3,5	;RP0=0, select bank0
  3441  0640  1303               	bcf	3,6	;RP1=0, select bank0
  3442  0641  0821               	movf	sprintf@f+1,w
  3443  0642  00A7               	movwf	??_sprintf+1
  3444  0643  0820               	movf	sprintf@f,w
  3445  0644  00A6               	movwf	??_sprintf
  3446  0645  0AA0               	incf	sprintf@f,f
  3447  0646  1903               	skipnz
  3448  0647  0AA1               	incf	sprintf@f+1,f
  3449  0648  0827               	movf	??_sprintf+1,w
  3450  0649  00FF               	movwf	127
  3451  064A  0826               	movf	??_sprintf,w
  3452  064B  0084               	movwf	4
  3453  064C  120A  158A  2000  120A  118A  	fcall	stringtab
  3454  0651  00B2               	movwf	sprintf@c
  3455                           
  3456                           ; Switch size 1, requested type "space"
  3457                           ; Number of cases is 5, Range of values is 0 to 120
  3458                           ; switch strategies available:
  3459                           ; Name         Instructions Cycles
  3460                           ; simple_byte           16     9 (average)
  3461                           ; jumptable            260     6 (fixed)
  3462                           ;	Chosen strategy is simple_byte
  3463  0652  3A00               	xorlw	0	; case 0
  3464  0653  1903               	skipnz
  3465  0654  2FEB               	goto	l1828
  3466  0655  3A58               	xorlw	88	; case 88
  3467  0656  1903               	skipnz
  3468  0657  2E3B               	goto	l303
  3469  0658  3A3C               	xorlw	60	; case 100
  3470  0659  1903               	skipnz
  3471  065A  2E62               	goto	l301
  3472  065B  3A0D               	xorlw	13	; case 105
  3473  065C  1903               	skipnz
  3474  065D  2E62               	goto	l301
  3475  065E  3A11               	xorlw	17	; case 120
  3476  065F  1903               	skipnz
  3477  0660  2E3B               	goto	l303
  3478  0661  2DAC               	goto	l1826
  3479  0662                     l301:	
  3480                           
  3481                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  3482  0662  1283               	bcf	3,5	;RP0=0, select bank0
  3483  0663  1303               	bcf	3,6	;RP1=0, select bank0
  3484  0664  1BAE               	btfsc	sprintf@flag,7
  3485  0665  2E7E               	goto	l1740
  3486                           
  3487                           ;doprnt.c: 1253: {
  3488                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3489  0666  082A               	movf	sprintf@ap,w
  3490  0667  0084               	movwf	4
  3491  0668  1383               	bcf	3,7	;select IRP bank0
  3492  0669  0800               	movf	0,w
  3493  066A  00AC               	movwf	sprintf@val
  3494  066B  0A84               	incf	4,f
  3495  066C  0800               	movf	0,w
  3496  066D  00AD               	movwf	sprintf@val+1
  3497  066E  3002               	movlw	2
  3498  066F  00A6               	movwf	??_sprintf
  3499  0670  0826               	movf	??_sprintf,w
  3500  0671  07AA               	addwf	sprintf@ap,f
  3501                           
  3502                           ;doprnt.c: 1261: if((int)val < 0) {
  3503  0672  1FAD               	btfss	sprintf@val+1,7
  3504  0673  2EDB               	goto	l1766
  3505                           
  3506                           ;doprnt.c: 1262: flag |= 0x03;
  3507  0674  3003               	movlw	3
  3508  0675  00A6               	movwf	??_sprintf
  3509  0676  0826               	movf	??_sprintf,w
  3510  0677  04AE               	iorwf	sprintf@flag,f
  3511                           
  3512                           ;doprnt.c: 1263: val = -val;
  3513  0678  09AC               	comf	sprintf@val,f
  3514  0679  09AD               	comf	sprintf@val+1,f
  3515  067A  0AAC               	incf	sprintf@val,f
  3516  067B  1903               	skipnz
  3517  067C  0AAD               	incf	sprintf@val+1,f
  3518                           
  3519                           ;doprnt.c: 1264: }
  3520                           ;doprnt.c: 1266: }
  3521  067D  2EDB               	goto	l1766
  3522  067E                     l1740:	
  3523                           
  3524                           ;doprnt.c: 1268: else
  3525                           ;doprnt.c: 1273: {
  3526                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3527  067E  082A               	movf	sprintf@ap,w
  3528  067F  0084               	movwf	4
  3529  0680  1383               	bcf	3,7	;select IRP bank0
  3530  0681  0800               	movf	0,w
  3531  0682  00AC               	movwf	sprintf@val
  3532  0683  0A84               	incf	4,f
  3533  0684  0800               	movf	0,w
  3534  0685  00AD               	movwf	sprintf@val+1
  3535  0686  3002               	movlw	2
  3536  0687  00A6               	movwf	??_sprintf
  3537  0688  0826               	movf	??_sprintf,w
  3538  0689  07AA               	addwf	sprintf@ap,f
  3539                           
  3540                           ;doprnt.c: 1287: }
  3541                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  3542  068A  2EDB               	goto	l1766
  3543  068B                     l309:	
  3544                           ;doprnt.c: 1299: case 0x00:
  3545                           
  3546                           
  3547                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3548  068B  01B2               	clrf	sprintf@c
  3549  068C  0AB2               	incf	sprintf@c,f
  3550  068D                     L6:	
  3551  068D  3005               	movlw	5
  3552  068E  0632               	xorwf	sprintf@c,w
  3553  068F  1903               	btfsc	3,2
  3554  0690  2EE4               	goto	l1768
  3555                           
  3556                           ;doprnt.c: 1306: if(val < dpowers[c])
  3557  0691  0832               	movf	sprintf@c,w
  3558  0692  00A6               	movwf	??_sprintf
  3559  0693  0726               	addwf	??_sprintf,w
  3560  0694  3E12               	addlw	low (_dpowers| (0+32768))
  3561  0695  0084               	movwf	4
  3562  0696  3088               	movlw	high (_dpowers| (0+32768))
  3563  0697  1803               	skipnc
  3564  0698  3E01               	addlw	1
  3565  0699  00FF               	movwf	127
  3566  069A  120A  158A  2000  120A  118A  	fcall	stringtab
  3567  069F  00A7               	movwf	??_sprintf+1
  3568  06A0  120A  158A  2000  120A  118A  	fcall	stringtab
  3569  06A5  00A8               	movwf	??_sprintf+2
  3570  06A6  0828               	movf	??_sprintf+2,w
  3571  06A7  022D               	subwf	sprintf@val+1,w
  3572  06A8  1D03               	skipz
  3573  06A9  2EAC               	goto	u1565
  3574  06AA  0827               	movf	??_sprintf+1,w
  3575  06AB  022C               	subwf	sprintf@val,w
  3576  06AC                     u1565:	
  3577  06AC  1C03               	btfss	3,0
  3578  06AD  2EE4               	goto	l1768
  3579                           
  3580                           ;doprnt.c: 1307: break;
  3581  06AE  3001               	movlw	1
  3582  06AF  00A6               	movwf	??_sprintf
  3583  06B0  0826               	movf	??_sprintf,w
  3584  06B1  07B2               	addwf	sprintf@c,f
  3585  06B2  2E8D               	goto	L6
  3586  06B3                     l314:	
  3587                           ;doprnt.c: 1314: case 0x80:
  3588                           
  3589                           ;doprnt.c: 1309: break;
  3590                           
  3591                           
  3592                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  3593  06B3  01B2               	clrf	sprintf@c
  3594  06B4  0AB2               	incf	sprintf@c,f
  3595  06B5                     L7:	
  3596  06B5  3004               	movlw	4
  3597  06B6  0632               	xorwf	sprintf@c,w
  3598  06B7  1903               	btfsc	3,2
  3599  06B8  2EE4               	goto	l1768
  3600                           
  3601                           ;doprnt.c: 1317: if(val < hexpowers[c])
  3602  06B9  0832               	movf	sprintf@c,w
  3603  06BA  00A6               	movwf	??_sprintf
  3604  06BB  0726               	addwf	??_sprintf,w
  3605  06BC  3E1C               	addlw	low (_hexpowers| (0+32768))
  3606  06BD  0084               	movwf	4
  3607  06BE  3088               	movlw	high (_hexpowers| (0+32768))
  3608  06BF  1803               	skipnc
  3609  06C0  3E01               	addlw	1
  3610  06C1  00FF               	movwf	127
  3611  06C2  120A  158A  2000  120A  118A  	fcall	stringtab
  3612  06C7  00A7               	movwf	??_sprintf+1
  3613  06C8  120A  158A  2000  120A  118A  	fcall	stringtab
  3614  06CD  00A8               	movwf	??_sprintf+2
  3615  06CE  0828               	movf	??_sprintf+2,w
  3616  06CF  022D               	subwf	sprintf@val+1,w
  3617  06D0  1D03               	skipz
  3618  06D1  2ED4               	goto	u1595
  3619  06D2  0827               	movf	??_sprintf+1,w
  3620  06D3  022C               	subwf	sprintf@val,w
  3621  06D4                     u1595:	
  3622  06D4  1C03               	btfss	3,0
  3623  06D5  2EE4               	goto	l1768
  3624                           
  3625                           ;doprnt.c: 1318: break;
  3626  06D6  3001               	movlw	1
  3627  06D7  00A6               	movwf	??_sprintf
  3628  06D8  0826               	movf	??_sprintf,w
  3629  06D9  07B2               	addwf	sprintf@c,f
  3630  06DA  2EB5               	goto	L7
  3631  06DB                     l1766:	
  3632                           ;doprnt.c: 1336: }
  3633                           
  3634                           ;doprnt.c: 1320: break;
  3635                           
  3636  06DB  082E               	movf	sprintf@flag,w
  3637  06DC  3980               	andlw	128
  3638                           
  3639                           ; Switch size 1, requested type "space"
  3640                           ; Number of cases is 2, Range of values is 0 to 128
  3641                           ; switch strategies available:
  3642                           ; Name         Instructions Cycles
  3643                           ; simple_byte            7     4 (average)
  3644                           ; jumptable            260     6 (fixed)
  3645                           ;	Chosen strategy is simple_byte
  3646  06DD  3A00               	xorlw	0	; case 0
  3647  06DE  1903               	skipnz
  3648  06DF  2E8B               	goto	l309
  3649  06E0  3A80               	xorlw	128	; case 128
  3650  06E1  1903               	skipnz
  3651  06E2  2EB3               	goto	l314
  3652  06E3  2EE4               	goto	l1768
  3653  06E4                     l1768:	
  3654                           
  3655                           ;doprnt.c: 1345: if(width && flag & 0x03)
  3656  06E4  082F               	movf	sprintf@width,w
  3657  06E5  0430               	iorwf	sprintf@width+1,w
  3658  06E6  1903               	btfsc	3,2
  3659  06E7  2EF2               	goto	l318
  3660  06E8  082E               	movf	sprintf@flag,w
  3661  06E9  3903               	andlw	3
  3662  06EA  1903               	btfsc	3,2
  3663  06EB  2EF2               	goto	l318
  3664                           
  3665                           ;doprnt.c: 1346: width--;
  3666  06EC  30FF               	movlw	255
  3667  06ED  07AF               	addwf	sprintf@width,f
  3668  06EE  1803               	skipnc
  3669  06EF  0AB0               	incf	sprintf@width+1,f
  3670  06F0  30FF               	movlw	255
  3671  06F1  07B0               	addwf	sprintf@width+1,f
  3672  06F2                     l318:	
  3673                           
  3674                           ;doprnt.c: 1381: if(width > c)
  3675  06F2  0832               	movf	sprintf@c,w
  3676  06F3  00A6               	movwf	??_sprintf
  3677  06F4  01A7               	clrf	??_sprintf+1
  3678  06F5  1BA6               	btfsc	??_sprintf,7
  3679  06F6  03A7               	decf	??_sprintf+1,f
  3680  06F7  0827               	movf	??_sprintf+1,w
  3681  06F8  3A80               	xorlw	128
  3682  06F9  00A8               	movwf	??_sprintf+2
  3683  06FA  0830               	movf	sprintf@width+1,w
  3684  06FB  3A80               	xorlw	128
  3685  06FC  0228               	subwf	??_sprintf+2,w
  3686  06FD  1D03               	skipz
  3687  06FE  2F01               	goto	u1635
  3688  06FF  082F               	movf	sprintf@width,w
  3689  0700  0226               	subwf	??_sprintf,w
  3690  0701                     u1635:	
  3691  0701  1803               	skipnc
  3692  0702  2F11               	goto	l1776
  3693                           
  3694                           ;doprnt.c: 1382: width -= c;
  3695  0703  1283               	bcf	3,5	;RP0=0, select bank0
  3696  0704  1303               	bcf	3,6	;RP1=0, select bank0
  3697  0705  0832               	movf	sprintf@c,w
  3698  0706  00A6               	movwf	??_sprintf
  3699  0707  01A7               	clrf	??_sprintf+1
  3700  0708  1BA6               	btfsc	??_sprintf,7
  3701  0709  03A7               	decf	??_sprintf+1,f
  3702  070A  0826               	movf	??_sprintf,w
  3703  070B  02AF               	subwf	sprintf@width,f
  3704  070C  0827               	movf	??_sprintf+1,w
  3705  070D  1C03               	skipc
  3706  070E  03B0               	decf	sprintf@width+1,f
  3707  070F  02B0               	subwf	sprintf@width+1,f
  3708  0710  2F15               	goto	l1778
  3709  0711                     l1776:	
  3710                           
  3711                           ;doprnt.c: 1383: else
  3712                           ;doprnt.c: 1384: width = 0;
  3713  0711  1283               	bcf	3,5	;RP0=0, select bank0
  3714  0712  1303               	bcf	3,6	;RP1=0, select bank0
  3715  0713  01AF               	clrf	sprintf@width
  3716  0714  01B0               	clrf	sprintf@width+1
  3717  0715                     l1778:	
  3718                           
  3719                           ;doprnt.c: 1387: if(flag & 0x04) {
  3720  0715  1D2E               	btfss	sprintf@flag,2
  3721  0716  2F3C               	goto	l1794
  3722                           
  3723                           ;doprnt.c: 1392: if(flag & 0x03)
  3724  0717  082E               	movf	sprintf@flag,w
  3725  0718  3903               	andlw	3
  3726  0719  1903               	btfsc	3,2
  3727  071A  2F26               	goto	l1786
  3728                           
  3729                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  3730  071B  302D               	movlw	45
  3731  071C  00A6               	movwf	??_sprintf
  3732  071D  0831               	movf	sprintf@sp,w
  3733  071E  0084               	movwf	4
  3734  071F  0826               	movf	??_sprintf,w
  3735  0720  1383               	bcf	3,7	;select IRP bank0
  3736  0721  0080               	movwf	0
  3737  0722  3001               	movlw	1
  3738  0723  00A6               	movwf	??_sprintf
  3739  0724  0826               	movf	??_sprintf,w
  3740  0725  07B1               	addwf	sprintf@sp,f
  3741  0726                     l1786:	
  3742                           
  3743                           ;doprnt.c: 1415: if(width)
  3744  0726  082F               	movf	sprintf@width,w
  3745  0727  0430               	iorwf	sprintf@width+1,w
  3746  0728  1903               	btfsc	3,2
  3747  0729  2F64               	goto	l1808
  3748                           
  3749                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  3750                           
  3751                           ;doprnt.c: 1416: do
  3752  072A  3030               	movlw	48
  3753  072B  00A6               	movwf	??_sprintf
  3754  072C  0831               	movf	sprintf@sp,w
  3755  072D  0084               	movwf	4
  3756  072E  0826               	movf	??_sprintf,w
  3757  072F  1383               	bcf	3,7	;select IRP bank0
  3758  0730  0080               	movwf	0
  3759  0731  3001               	movlw	1
  3760  0732  00A6               	movwf	??_sprintf
  3761  0733  0826               	movf	??_sprintf,w
  3762  0734  07B1               	addwf	sprintf@sp,f
  3763                           
  3764                           ;doprnt.c: 1418: while(--width);
  3765  0735  30FF               	movlw	255
  3766  0736  07AF               	addwf	sprintf@width,f
  3767  0737  1803               	skipnc
  3768  0738  0AB0               	incf	sprintf@width+1,f
  3769  0739  30FF               	movlw	255
  3770  073A  07B0               	addwf	sprintf@width+1,f
  3771  073B  2F26               	goto	l1786
  3772  073C                     l1794:	
  3773                           ;doprnt.c: 1420: } else
  3774                           
  3775                           
  3776                           ;doprnt.c: 1422: {
  3777                           ;doprnt.c: 1424: if(width
  3778                           ;doprnt.c: 1428: )
  3779  073C  082F               	movf	sprintf@width,w
  3780  073D  0430               	iorwf	sprintf@width+1,w
  3781  073E  1903               	btfsc	3,2
  3782  073F  2F55               	goto	l1802
  3783  0740                     l1796:	
  3784                           ;doprnt.c: 1429: do
  3785                           
  3786                           
  3787                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  3788  0740  3020               	movlw	32
  3789  0741  00A6               	movwf	??_sprintf
  3790  0742  0831               	movf	sprintf@sp,w
  3791  0743  0084               	movwf	4
  3792  0744  0826               	movf	??_sprintf,w
  3793  0745  1383               	bcf	3,7	;select IRP bank0
  3794  0746  0080               	movwf	0
  3795  0747  3001               	movlw	1
  3796  0748  00A6               	movwf	??_sprintf
  3797  0749  0826               	movf	??_sprintf,w
  3798  074A  07B1               	addwf	sprintf@sp,f
  3799                           
  3800                           ;doprnt.c: 1431: while(--width);
  3801  074B  30FF               	movlw	255
  3802  074C  07AF               	addwf	sprintf@width,f
  3803  074D  1803               	skipnc
  3804  074E  0AB0               	incf	sprintf@width+1,f
  3805  074F  30FF               	movlw	255
  3806  0750  07B0               	addwf	sprintf@width+1,f
  3807  0751  082F               	movf	sprintf@width,w
  3808  0752  0430               	iorwf	sprintf@width+1,w
  3809  0753  1D03               	btfss	3,2
  3810  0754  2F40               	goto	l1796
  3811  0755                     l1802:	
  3812                           
  3813                           ;doprnt.c: 1438: if(flag & 0x03)
  3814  0755  082E               	movf	sprintf@flag,w
  3815  0756  3903               	andlw	3
  3816  0757  1903               	btfsc	3,2
  3817  0758  2F64               	goto	l1808
  3818                           
  3819                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3820  0759  302D               	movlw	45
  3821  075A  00A6               	movwf	??_sprintf
  3822  075B  0831               	movf	sprintf@sp,w
  3823  075C  0084               	movwf	4
  3824  075D  0826               	movf	??_sprintf,w
  3825  075E  1383               	bcf	3,7	;select IRP bank0
  3826  075F  0080               	movwf	0
  3827  0760  3001               	movlw	1
  3828  0761  00A6               	movwf	??_sprintf
  3829  0762  0826               	movf	??_sprintf,w
  3830  0763  07B1               	addwf	sprintf@sp,f
  3831  0764                     l1808:	
  3832                           
  3833                           ;doprnt.c: 1469: }
  3834                           ;doprnt.c: 1472: prec = c;
  3835  0764  0832               	movf	sprintf@c,w
  3836  0765  00A6               	movwf	??_sprintf
  3837  0766  0826               	movf	??_sprintf,w
  3838  0767  00AB               	movwf	sprintf@prec
  3839                           
  3840                           ;doprnt.c: 1474: while(prec--) {
  3841  0768  2FDA               	goto	l1824
  3842  0769                     l1810:	
  3843                           ;doprnt.c: 1478: {
  3844                           ;doprnt.c: 1483: case 0x00:
  3845                           
  3846                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
  3847                           
  3848                           
  3849                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3850  0769  300A               	movlw	10
  3851  076A  00F8               	movwf	___lwmod@divisor
  3852  076B  3000               	movlw	0
  3853  076C  00F9               	movwf	___lwmod@divisor+1
  3854  076D  082B               	movf	sprintf@prec,w
  3855  076E  00A6               	movwf	??_sprintf
  3856  076F  0726               	addwf	??_sprintf,w
  3857  0770  3E12               	addlw	low (_dpowers| (0+32768))
  3858  0771  0084               	movwf	4
  3859  0772  3088               	movlw	high (_dpowers| (0+32768))
  3860  0773  1803               	skipnc
  3861  0774  3E01               	addlw	1
  3862  0775  00FF               	movwf	127
  3863  0776  120A  158A  2000  120A  118A  	fcall	stringtab
  3864  077B  00F0               	movwf	___lwdiv@divisor
  3865  077C  120A  158A  2000  120A  118A  	fcall	stringtab
  3866  0781  00F1               	movwf	___lwdiv@divisor+1
  3867  0782  082D               	movf	sprintf@val+1,w
  3868  0783  00F3               	movwf	___lwdiv@dividend+1
  3869  0784  082C               	movf	sprintf@val,w
  3870  0785  00F2               	movwf	___lwdiv@dividend
  3871  0786  120A  118A  2013  120A  118A  	fcall	___lwdiv
  3872  078B  0871               	movf	?___lwdiv+1,w
  3873  078C  00FB               	movwf	___lwmod@dividend+1
  3874  078D  0870               	movf	?___lwdiv,w
  3875  078E  00FA               	movwf	___lwmod@dividend
  3876  078F  120A  158A  26C7  120A  118A  	fcall	___lwmod
  3877  0794  0878               	movf	?___lwmod,w
  3878  0795  3E30               	addlw	48
  3879  0796  1283               	bcf	3,5	;RP0=0, select bank0
  3880  0797  1303               	bcf	3,6	;RP1=0, select bank0
  3881  0798  00A7               	movwf	??_sprintf+1
  3882  0799  0827               	movf	??_sprintf+1,w
  3883  079A  2FCE               	goto	L5
  3884  079B                     l1812:	
  3885                           ;doprnt.c: 1497: case 0x80:
  3886                           
  3887                           ;doprnt.c: 1491: break;
  3888                           
  3889                           
  3890                           ;doprnt.c: 1499: {
  3891                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  3892  079B  082B               	movf	sprintf@prec,w
  3893  079C  00A6               	movwf	??_sprintf
  3894  079D  0726               	addwf	??_sprintf,w
  3895  079E  3E1C               	addlw	low (_hexpowers| (0+32768))
  3896  079F  0084               	movwf	4
  3897  07A0  3088               	movlw	high (_hexpowers| (0+32768))
  3898  07A1  1803               	skipnc
  3899  07A2  3E01               	addlw	1
  3900  07A3  00FF               	movwf	127
  3901  07A4  120A  158A  2000  120A  118A  	fcall	stringtab
  3902  07A9  00F0               	movwf	___lwdiv@divisor
  3903  07AA  120A  158A  2000  120A  118A  	fcall	stringtab
  3904  07AF  00F1               	movwf	___lwdiv@divisor+1
  3905  07B0  082D               	movf	sprintf@val+1,w
  3906  07B1  00F3               	movwf	___lwdiv@dividend+1
  3907  07B2  082C               	movf	sprintf@val,w
  3908  07B3  00F2               	movwf	___lwdiv@dividend
  3909  07B4  120A  118A  2013  120A  118A  	fcall	___lwdiv
  3910  07B9  0870               	movf	?___lwdiv,w
  3911  07BA  390F               	andlw	15
  3912  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  3913  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  3914  07BD  00A7               	movwf	??_sprintf+1
  3915  07BE  0827               	movf	??_sprintf+1,w
  3916  07BF  00A9               	movwf	sprintf@idx
  3917                           
  3918                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  3919  07C0  0829               	movf	sprintf@idx,w
  3920  07C1  3ECB               	addlw	low (STR_20| (0+32768))
  3921  07C2  0084               	movwf	4
  3922  07C3  3088               	movlw	high (STR_20| (0+32768))
  3923  07C4  1803               	skipnc
  3924  07C5  3E01               	addlw	1
  3925  07C6  00FF               	movwf	127
  3926  07C7  120A  158A  2000  120A  118A  	fcall	stringtab
  3927  07CC  00A6               	movwf	??_sprintf
  3928  07CD  0826               	movf	??_sprintf,w
  3929  07CE                     L5:	
  3930  07CE  00B2               	movwf	sprintf@c
  3931  07CF                     l1820:	
  3932                           ;doprnt.c: 1523: }
  3933                           
  3934                           ;doprnt.c: 1508: }
  3935                           ;doprnt.c: 1510: break;
  3936                           
  3937                           
  3938                           ;doprnt.c: 1524: ((*sp++ = (c)));
  3939  07CF  0832               	movf	sprintf@c,w
  3940  07D0  00A6               	movwf	??_sprintf
  3941  07D1  0831               	movf	sprintf@sp,w
  3942  07D2  0084               	movwf	4
  3943  07D3  0826               	movf	??_sprintf,w
  3944  07D4  1383               	bcf	3,7	;select IRP bank0
  3945  07D5  0080               	movwf	0
  3946  07D6  3001               	movlw	1
  3947  07D7  00A6               	movwf	??_sprintf
  3948  07D8  0826               	movf	??_sprintf,w
  3949  07D9  07B1               	addwf	sprintf@sp,f
  3950  07DA                     l1824:	
  3951  07DA  30FF               	movlw	255
  3952  07DB  00A6               	movwf	??_sprintf
  3953  07DC  0826               	movf	??_sprintf,w
  3954  07DD  07AB               	addwf	sprintf@prec,f
  3955  07DE  0A2B               	incf	sprintf@prec,w
  3956  07DF  1903               	btfsc	3,2
  3957  07E0  2DAC               	goto	l1826
  3958  07E1  082E               	movf	sprintf@flag,w
  3959  07E2  3980               	andlw	128
  3960                           
  3961                           ; Switch size 1, requested type "space"
  3962                           ; Number of cases is 2, Range of values is 0 to 128
  3963                           ; switch strategies available:
  3964                           ; Name         Instructions Cycles
  3965                           ; simple_byte            7     4 (average)
  3966                           ; jumptable            260     6 (fixed)
  3967                           ;	Chosen strategy is simple_byte
  3968  07E3  3A00               	xorlw	0	; case 0
  3969  07E4  1903               	skipnz
  3970  07E5  2F69               	goto	l1810
  3971  07E6  3A80               	xorlw	128	; case 128
  3972  07E7  1903               	skipnz
  3973  07E8  2F9B               	goto	l1812
  3974  07E9  2FCF               	goto	l1820
  3975  07EA  2FCF               	goto	l1820
  3976  07EB                     l1828:	
  3977                           ;doprnt.c: 1525: }
  3978                           ;doprnt.c: 1533: }
  3979                           ;doprnt.c: 1535: alldone:
  3980                           
  3981                           
  3982                           ;doprnt.c: 1538: *sp = 0;
  3983  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  3984  07EC  1303               	bcf	3,6	;RP1=0, select bank0
  3985  07ED  0831               	movf	sprintf@sp,w
  3986  07EE  0084               	movwf	4
  3987  07EF  1383               	bcf	3,7	;select IRP bank0
  3988  07F0  0180               	clrf	0
  3989  07F1  0008               	return
  3990  07F2                     __end_of_sprintf:	
  3991                           ;doprnt.c: 1540: return 0;
  3992                           ;	Return value of _sprintf is never used
  3993                           
  3994                           
  3995                           	psect	text13
  3996  0005                     __ptext13:	
  3997 ;; *************** function _isdigit *****************
  3998 ;; Defined at:
  3999 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\isdigit.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  c               1    wreg     unsigned char 
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;  c               1    1[COMMON] unsigned char 
  4004 ;; Return value:  Size  Location     Type
  4005 ;;		None               void
  4006 ;; Registers used:
  4007 ;;		wreg, status,2, status,0
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4013 ;;      Params:         0       0       0       0       0
  4014 ;;      Locals:         2       0       0       0       0
  4015 ;;      Temps:          0       0       0       0       0
  4016 ;;      Totals:         2       0       0       0       0
  4017 ;;Total ram usage:        2 bytes
  4018 ;; Hardware stack levels used:    1
  4019 ;; This function calls:
  4020 ;;		Nothing
  4021 ;; This function is called by:
  4022 ;;		_sprintf
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           
  4026                           
  4027                           ;psect for function _isdigit
  4028  0005                     _isdigit:	
  4029                           
  4030                           ;incstack = 0
  4031                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4032                           ;isdigit@c stored from wreg
  4033  0005  00F1               	movwf	isdigit@c
  4034  0006  01F0               	clrf	_isdigit$506
  4035  0007  303A               	movlw	58
  4036  0008  0271               	subwf	isdigit@c,w
  4037  0009  1803               	skipnc
  4038  000A  2811               	goto	l1630
  4039  000B  3030               	movlw	48
  4040  000C  0271               	subwf	isdigit@c,w
  4041  000D  1C03               	skipc
  4042  000E  2811               	goto	l1630
  4043  000F  01F0               	clrf	_isdigit$506
  4044  0010  0AF0               	incf	_isdigit$506,f
  4045  0011                     l1630:	
  4046  0011  0C70               	rrf	_isdigit$506,w
  4047  0012  0008               	return
  4048  0013                     __end_of_isdigit:	
  4049                           
  4050                           	psect	text14
  4051  0DFD                     __ptext14:	
  4052 ;; *************** function ___wmul *****************
  4053 ;; Defined at:
  4054 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\Umul16.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;  multiplier      2    0[COMMON] unsigned int 
  4057 ;;  multiplicand    2    2[COMMON] unsigned int 
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;  product         2    4[COMMON] unsigned int 
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  2    0[COMMON] unsigned int 
  4062 ;; Registers used:
  4063 ;;		wreg, status,2, status,0
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4069 ;;      Params:         4       0       0       0       0
  4070 ;;      Locals:         2       0       0       0       0
  4071 ;;      Temps:          0       0       0       0       0
  4072 ;;      Totals:         6       0       0       0       0
  4073 ;;Total ram usage:        6 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; This function calls:
  4076 ;;		Nothing
  4077 ;; This function is called by:
  4078 ;;		_sprintf
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082                           
  4083                           ;psect for function ___wmul
  4084  0DFD                     ___wmul:	
  4085                           
  4086                           ;incstack = 0
  4087                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4088  0DFD  01F4               	clrf	___wmul@product
  4089  0DFE  01F5               	clrf	___wmul@product+1
  4090  0DFF                     l1636:	
  4091  0DFF  1C70               	btfss	___wmul@multiplier,0
  4092  0E00  2E07               	goto	l423
  4093  0E01  0872               	movf	___wmul@multiplicand,w
  4094  0E02  07F4               	addwf	___wmul@product,f
  4095  0E03  1803               	skipnc
  4096  0E04  0AF5               	incf	___wmul@product+1,f
  4097  0E05  0873               	movf	___wmul@multiplicand+1,w
  4098  0E06  07F5               	addwf	___wmul@product+1,f
  4099  0E07                     l423:	
  4100  0E07  3001               	movlw	1
  4101  0E08                     u1345:	
  4102  0E08  1003               	clrc
  4103  0E09  0DF2               	rlf	___wmul@multiplicand,f
  4104  0E0A  0DF3               	rlf	___wmul@multiplicand+1,f
  4105  0E0B  3EFF               	addlw	-1
  4106  0E0C  1D03               	skipz
  4107  0E0D  2E08               	goto	u1345
  4108  0E0E  3001               	movlw	1
  4109  0E0F                     u1355:	
  4110  0E0F  1003               	clrc
  4111  0E10  0CF1               	rrf	___wmul@multiplier+1,f
  4112  0E11  0CF0               	rrf	___wmul@multiplier,f
  4113  0E12  3EFF               	addlw	-1
  4114  0E13  1D03               	skipz
  4115  0E14  2E0F               	goto	u1355
  4116  0E15  0870               	movf	___wmul@multiplier,w
  4117  0E16  0471               	iorwf	___wmul@multiplier+1,w
  4118  0E17  1D03               	btfss	3,2
  4119  0E18  2DFF               	goto	l1636
  4120  0E19  0875               	movf	___wmul@product+1,w
  4121  0E1A  00F1               	movwf	?___wmul+1
  4122  0E1B  0874               	movf	___wmul@product,w
  4123  0E1C  00F0               	movwf	?___wmul
  4124  0E1D  0008               	return
  4125  0E1E                     __end_of___wmul:	
  4126                           
  4127                           	psect	text15
  4128  0EC7                     __ptext15:	
  4129 ;; *************** function ___lwmod *****************
  4130 ;; Defined at:
  4131 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\lwmod.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;  divisor         2    8[COMMON] unsigned int 
  4134 ;;  dividend        2   10[COMMON] unsigned int 
  4135 ;; Auto vars:     Size  Location     Type
  4136 ;;  counter         1   13[COMMON] unsigned char 
  4137 ;; Return value:  Size  Location     Type
  4138 ;;                  2    8[COMMON] unsigned int 
  4139 ;; Registers used:
  4140 ;;		wreg, status,2, status,0
  4141 ;; Tracked objects:
  4142 ;;		On entry : 0/0
  4143 ;;		On exit  : 0/0
  4144 ;;		Unchanged: 0/0
  4145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4146 ;;      Params:         4       0       0       0       0
  4147 ;;      Locals:         1       0       0       0       0
  4148 ;;      Temps:          1       0       0       0       0
  4149 ;;      Totals:         6       0       0       0       0
  4150 ;;Total ram usage:        6 bytes
  4151 ;; Hardware stack levels used:    1
  4152 ;; This function calls:
  4153 ;;		Nothing
  4154 ;; This function is called by:
  4155 ;;		_sprintf
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           
  4160                           ;psect for function ___lwmod
  4161  0EC7                     ___lwmod:	
  4162                           
  4163                           ;incstack = 0
  4164                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4165  0EC7  0878               	movf	___lwmod@divisor,w
  4166  0EC8  0479               	iorwf	___lwmod@divisor+1,w
  4167  0EC9  1903               	btfsc	3,2
  4168  0ECA  2EF4               	goto	l1692
  4169  0ECB  01FD               	clrf	___lwmod@counter
  4170  0ECC  0AFD               	incf	___lwmod@counter,f
  4171  0ECD                     l1682:	
  4172  0ECD  1BF9               	btfsc	___lwmod@divisor+1,7
  4173  0ECE  2EDB               	goto	l1684
  4174  0ECF  3001               	movlw	1
  4175  0ED0                     u1455:	
  4176  0ED0  1003               	clrc
  4177  0ED1  0DF8               	rlf	___lwmod@divisor,f
  4178  0ED2  0DF9               	rlf	___lwmod@divisor+1,f
  4179  0ED3  3EFF               	addlw	-1
  4180  0ED4  1D03               	skipz
  4181  0ED5  2ED0               	goto	u1455
  4182  0ED6  3001               	movlw	1
  4183  0ED7  00FC               	movwf	??___lwmod
  4184  0ED8  087C               	movf	??___lwmod,w
  4185  0ED9  07FD               	addwf	___lwmod@counter,f
  4186  0EDA  2ECD               	goto	l1682
  4187  0EDB                     l1684:	
  4188  0EDB  0879               	movf	___lwmod@divisor+1,w
  4189  0EDC  027B               	subwf	___lwmod@dividend+1,w
  4190  0EDD  1D03               	skipz
  4191  0EDE  2EE1               	goto	u1475
  4192  0EDF  0878               	movf	___lwmod@divisor,w
  4193  0EE0  027A               	subwf	___lwmod@dividend,w
  4194  0EE1                     u1475:	
  4195  0EE1  1C03               	skipc
  4196  0EE2  2EE9               	goto	l1688
  4197  0EE3  0878               	movf	___lwmod@divisor,w
  4198  0EE4  02FA               	subwf	___lwmod@dividend,f
  4199  0EE5  0879               	movf	___lwmod@divisor+1,w
  4200  0EE6  1C03               	skipc
  4201  0EE7  03FB               	decf	___lwmod@dividend+1,f
  4202  0EE8  02FB               	subwf	___lwmod@dividend+1,f
  4203  0EE9                     l1688:	
  4204  0EE9  3001               	movlw	1
  4205  0EEA                     u1485:	
  4206  0EEA  1003               	clrc
  4207  0EEB  0CF9               	rrf	___lwmod@divisor+1,f
  4208  0EEC  0CF8               	rrf	___lwmod@divisor,f
  4209  0EED  3EFF               	addlw	-1
  4210  0EEE  1D03               	skipz
  4211  0EEF  2EEA               	goto	u1485
  4212  0EF0  3001               	movlw	1
  4213  0EF1  02FD               	subwf	___lwmod@counter,f
  4214  0EF2  1D03               	btfss	3,2
  4215  0EF3  2EDB               	goto	l1684
  4216  0EF4                     l1692:	
  4217  0EF4  087B               	movf	___lwmod@dividend+1,w
  4218  0EF5  00F9               	movwf	?___lwmod+1
  4219  0EF6  087A               	movf	___lwmod@dividend,w
  4220  0EF7  00F8               	movwf	?___lwmod
  4221  0EF8  0008               	return
  4222  0EF9                     __end_of___lwmod:	
  4223                           
  4224                           	psect	text16
  4225  0013                     __ptext16:	
  4226 ;; *************** function ___lwdiv *****************
  4227 ;; Defined at:
  4228 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;  divisor         2    0[COMMON] unsigned int 
  4231 ;;  dividend        2    2[COMMON] unsigned int 
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;  quotient        2    5[COMMON] unsigned int 
  4234 ;;  counter         1    7[COMMON] unsigned char 
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  2    0[COMMON] unsigned int 
  4237 ;; Registers used:
  4238 ;;		wreg, status,2, status,0
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4244 ;;      Params:         4       0       0       0       0
  4245 ;;      Locals:         3       0       0       0       0
  4246 ;;      Temps:          1       0       0       0       0
  4247 ;;      Totals:         8       0       0       0       0
  4248 ;;Total ram usage:        8 bytes
  4249 ;; Hardware stack levels used:    1
  4250 ;; This function calls:
  4251 ;;		Nothing
  4252 ;; This function is called by:
  4253 ;;		_read_meas
  4254 ;;		_Indicate_LCDTemp
  4255 ;;		_sprintf
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           
  4260                           ;psect for function ___lwdiv
  4261  0013                     ___lwdiv:	
  4262                           
  4263                           ;incstack = 0
  4264                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4265  0013  01F5               	clrf	___lwdiv@quotient
  4266  0014  01F6               	clrf	___lwdiv@quotient+1
  4267  0015  0870               	movf	___lwdiv@divisor,w
  4268  0016  0471               	iorwf	___lwdiv@divisor+1,w
  4269  0017  1903               	btfsc	3,2
  4270  0018  284A               	goto	l1670
  4271  0019  01F7               	clrf	___lwdiv@counter
  4272  001A  0AF7               	incf	___lwdiv@counter,f
  4273  001B                     l1658:	
  4274  001B  1BF1               	btfsc	___lwdiv@divisor+1,7
  4275  001C  2829               	goto	l1660
  4276  001D  3001               	movlw	1
  4277  001E                     u1385:	
  4278  001E  1003               	clrc
  4279  001F  0DF0               	rlf	___lwdiv@divisor,f
  4280  0020  0DF1               	rlf	___lwdiv@divisor+1,f
  4281  0021  3EFF               	addlw	-1
  4282  0022  1D03               	skipz
  4283  0023  281E               	goto	u1385
  4284  0024  3001               	movlw	1
  4285  0025  00F4               	movwf	??___lwdiv
  4286  0026  0874               	movf	??___lwdiv,w
  4287  0027  07F7               	addwf	___lwdiv@counter,f
  4288  0028  281B               	goto	l1658
  4289  0029                     l1660:	
  4290  0029  3001               	movlw	1
  4291  002A                     u1405:	
  4292  002A  1003               	clrc
  4293  002B  0DF5               	rlf	___lwdiv@quotient,f
  4294  002C  0DF6               	rlf	___lwdiv@quotient+1,f
  4295  002D  3EFF               	addlw	-1
  4296  002E  1D03               	skipz
  4297  002F  282A               	goto	u1405
  4298  0030  0871               	movf	___lwdiv@divisor+1,w
  4299  0031  0273               	subwf	___lwdiv@dividend+1,w
  4300  0032  1D03               	skipz
  4301  0033  2836               	goto	u1415
  4302  0034  0870               	movf	___lwdiv@divisor,w
  4303  0035  0272               	subwf	___lwdiv@dividend,w
  4304  0036                     u1415:	
  4305  0036  1C03               	skipc
  4306  0037  283F               	goto	l1666
  4307  0038  0870               	movf	___lwdiv@divisor,w
  4308  0039  02F2               	subwf	___lwdiv@dividend,f
  4309  003A  0871               	movf	___lwdiv@divisor+1,w
  4310  003B  1C03               	skipc
  4311  003C  03F3               	decf	___lwdiv@dividend+1,f
  4312  003D  02F3               	subwf	___lwdiv@dividend+1,f
  4313  003E  1475               	bsf	___lwdiv@quotient,0
  4314  003F                     l1666:	
  4315  003F  3001               	movlw	1
  4316  0040                     u1425:	
  4317  0040  1003               	clrc
  4318  0041  0CF1               	rrf	___lwdiv@divisor+1,f
  4319  0042  0CF0               	rrf	___lwdiv@divisor,f
  4320  0043  3EFF               	addlw	-1
  4321  0044  1D03               	skipz
  4322  0045  2840               	goto	u1425
  4323  0046  3001               	movlw	1
  4324  0047  02F7               	subwf	___lwdiv@counter,f
  4325  0048  1D03               	btfss	3,2
  4326  0049  2829               	goto	l1660
  4327  004A                     l1670:	
  4328  004A  0876               	movf	___lwdiv@quotient+1,w
  4329  004B  00F1               	movwf	?___lwdiv+1
  4330  004C  0875               	movf	___lwdiv@quotient,w
  4331  004D  00F0               	movwf	?___lwdiv
  4332  004E  0008               	return
  4333  004F                     __end_of___lwdiv:	
  4334                           
  4335                           	psect	text17
  4336  0D64                     __ptext17:	
  4337 ;; *************** function _LCD_PrintStringXY *****************
  4338 ;; Defined at:
  4339 ;;		line 179 in file "LCDlib.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  str             2    8[COMMON] PTR unsigned char 
  4342 ;;		 -> Indicate_LCDTemp@bufferVnyt(30), Indicate_LCDTemp@bufferVn(30), STR_9(16), STR_7(16), 
  4343 ;;		 -> STR_5(16), STR_3(16), STR_1(12), 
  4344 ;;  x               1   10[COMMON] unsigned char 
  4345 ;;  y               1   11[COMMON] unsigned char 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;		None
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  1    wreg      void 
  4350 ;; Registers used:
  4351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4357 ;;      Params:         4       0       0       0       0
  4358 ;;      Locals:         0       0       0       0       0
  4359 ;;      Temps:          1       0       0       0       0
  4360 ;;      Totals:         5       0       0       0       0
  4361 ;;Total ram usage:        5 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:    3
  4364 ;; This function calls:
  4365 ;;		_LCD_GoToXY
  4366 ;;		_LCD_PrintString
  4367 ;; This function is called by:
  4368 ;;		_main
  4369 ;;		_read_meas
  4370 ;;		_Indicate_LCDTemp
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374                           
  4375                           ;psect for function _LCD_PrintStringXY
  4376  0D64                     _LCD_PrintStringXY:	
  4377                           
  4378                           ;LCDlib.c: 181: LCD_GoToXY(x,y);
  4379                           
  4380                           ;incstack = 0
  4381                           ; Regs used in _LCD_PrintStringXY: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4382  0D64  087B               	movf	LCD_PrintStringXY@y,w
  4383  0D65  00FC               	movwf	??_LCD_PrintStringXY
  4384  0D66  087C               	movf	??_LCD_PrintStringXY,w
  4385  0D67  00F4               	movwf	LCD_GoToXY@y
  4386  0D68  087A               	movf	LCD_PrintStringXY@x,w
  4387  0D69  120A  118A  204F  120A  158A  	fcall	_LCD_GoToXY
  4388                           
  4389                           ;LCDlib.c: 182: LCD_PrintString(str);
  4390  0D6E  0878               	movf	LCD_PrintStringXY@str,w
  4391  0D6F  00F4               	movwf	LCD_PrintString@str
  4392  0D70  0879               	movf	LCD_PrintStringXY@str+1,w
  4393  0D71  00F5               	movwf	LCD_PrintString@str+1
  4394  0D72  120A  158A  261E   	fcall	_LCD_PrintString
  4395  0D75  0008               	return
  4396  0D76                     __end_of_LCD_PrintStringXY:	
  4397                           
  4398                           	psect	text18
  4399  0E1E                     __ptext18:	
  4400 ;; *************** function _LCD_PrintString *****************
  4401 ;; Defined at:
  4402 ;;		line 120 in file "LCDlib.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;  str             2    4[COMMON] PTR unsigned char 
  4405 ;;		 -> Indicate_LCDTemp@bufferVnyt(30), Indicate_LCDTemp@bufferVn(30), STR_9(16), STR_7(16), 
  4406 ;;		 -> STR_5(16), STR_3(16), STR_1(12), 
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;		None
  4409 ;; Return value:  Size  Location     Type
  4410 ;;                  1    wreg      void 
  4411 ;; Registers used:
  4412 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4413 ;; Tracked objects:
  4414 ;;		On entry : 0/0
  4415 ;;		On exit  : 0/0
  4416 ;;		Unchanged: 0/0
  4417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4418 ;;      Params:         2       0       0       0       0
  4419 ;;      Locals:         0       0       0       0       0
  4420 ;;      Temps:          0       0       0       0       0
  4421 ;;      Totals:         2       0       0       0       0
  4422 ;;Total ram usage:        2 bytes
  4423 ;; Hardware stack levels used:    1
  4424 ;; Hardware stack levels required when called:    2
  4425 ;; This function calls:
  4426 ;;		_LCD_PrintChar
  4427 ;; This function is called by:
  4428 ;;		_LCD_PrintStringXY
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432                           
  4433                           ;psect for function _LCD_PrintString
  4434  0E1E                     _LCD_PrintString:	
  4435  0E1E                     l1558:	
  4436                           ;LCDlib.c: 122: while((*str)!='\0')
  4437                           
  4438                           ;incstack = 0
  4439                           ; Regs used in _LCD_PrintString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4440                           
  4441  0E1E  0875               	movf	LCD_PrintString@str+1,w
  4442  0E1F  1283               	bcf	3,5	;RP0=0, select bank0
  4443  0E20  1303               	bcf	3,6	;RP1=0, select bank0
  4444  0E21  00FF               	movwf	127
  4445  0E22  0874               	movf	LCD_PrintString@str,w
  4446  0E23  0084               	movwf	4
  4447  0E24  120A  158A  2000  120A  158A  	fcall	stringtab
  4448  0E29  3A00               	xorlw	0
  4449  0E2A  1903               	btfsc	3,2
  4450  0E2B  0008               	return
  4451                           
  4452                           ;LCDlib.c: 123: {
  4453                           ;LCDlib.c: 124: LCD_PrintChar(*str);
  4454  0E2C  0875               	movf	LCD_PrintString@str+1,w
  4455  0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  4456  0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  4457  0E2F  00FF               	movwf	127
  4458  0E30  0874               	movf	LCD_PrintString@str,w
  4459  0E31  0084               	movwf	4
  4460  0E32  120A  158A  2000  120A  158A  	fcall	stringtab
  4461  0E37  120A  158A  2641  120A  158A  	fcall	_LCD_PrintChar
  4462                           
  4463                           ;LCDlib.c: 125: str++;
  4464  0E3C  3001               	movlw	1
  4465  0E3D  07F4               	addwf	LCD_PrintString@str,f
  4466  0E3E  1803               	skipnc
  4467  0E3F  0AF5               	incf	LCD_PrintString@str+1,f
  4468  0E40  2E1E               	goto	l1558
  4469  0E41                     __end_of_LCD_PrintString:	
  4470                           
  4471                           	psect	text19
  4472  0E41                     __ptext19:	
  4473 ;; *************** function _LCD_PrintChar *****************
  4474 ;; Defined at:
  4475 ;;		line 102 in file "LCDlib.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;  c               1    wreg     unsigned char 
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;  c               1    3[COMMON] unsigned char 
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  1    wreg      void 
  4482 ;; Registers used:
  4483 ;;		wreg, status,2, status,0, pclath, cstack
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4489 ;;      Params:         0       0       0       0       0
  4490 ;;      Locals:         1       0       0       0       0
  4491 ;;      Temps:          2       0       0       0       0
  4492 ;;      Totals:         3       0       0       0       0
  4493 ;;Total ram usage:        3 bytes
  4494 ;; Hardware stack levels used:    1
  4495 ;; Hardware stack levels required when called:    1
  4496 ;; This function calls:
  4497 ;;		_LCD_SendData
  4498 ;; This function is called by:
  4499 ;;		_LCD_PrintString
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503                           
  4504                           ;psect for function _LCD_PrintChar
  4505  0E41                     _LCD_PrintChar:	
  4506                           
  4507                           ;incstack = 0
  4508                           ; Regs used in _LCD_PrintChar: [wreg+status,2+status,0+pclath+cstack]
  4509                           ;LCD_PrintChar@c stored from wreg
  4510  0E41  00F3               	movwf	LCD_PrintChar@c
  4511                           
  4512                           ;LCDlib.c: 104: (PORTBbits.RB0=1);
  4513  0E42  1283               	bcf	3,5	;RP0=0, select bank0
  4514  0E43  1303               	bcf	3,6	;RP1=0, select bank0
  4515  0E44  1406               	bsf	6,0	;volatile
  4516                           
  4517                           ;LCDlib.c: 105: LCD_SendData(c>>4);
  4518  0E45  0873               	movf	LCD_PrintChar@c,w
  4519  0E46  00F1               	movwf	??_LCD_PrintChar
  4520  0E47  3004               	movlw	4
  4521  0E48                     u1215:	
  4522  0E48  1003               	clrc
  4523  0E49  0CF1               	rrf	??_LCD_PrintChar,f
  4524  0E4A  3EFF               	addlw	-1
  4525  0E4B  1D03               	skipz
  4526  0E4C  2E48               	goto	u1215
  4527  0E4D  0871               	movf	??_LCD_PrintChar,w
  4528  0E4E  120A  158A  25A6  120A  158A  	fcall	_LCD_SendData
  4529                           
  4530                           ;LCDlib.c: 106: (PORTBbits.RB2=1);
  4531  0E53  1283               	bcf	3,5	;RP0=0, select bank0
  4532  0E54  1303               	bcf	3,6	;RP1=0, select bank0
  4533  0E55  1506               	bsf	6,2	;volatile
  4534                           
  4535                           ;LCDlib.c: 107: (PORTBbits.RB2=0);
  4536  0E56  1106               	bcf	6,2	;volatile
  4537                           
  4538                           ;LCDlib.c: 108: LCD_SendData(c&0x0F);
  4539  0E57  0873               	movf	LCD_PrintChar@c,w
  4540  0E58  390F               	andlw	15
  4541  0E59  120A  158A  25A6  120A  158A  	fcall	_LCD_SendData
  4542                           
  4543                           ;LCDlib.c: 109: (PORTBbits.RB2=1);
  4544  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  4545  0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  4546  0E60  1506               	bsf	6,2	;volatile
  4547                           
  4548                           ;LCDlib.c: 110: (PORTBbits.RB2=0);
  4549  0E61  1106               	bcf	6,2	;volatile
  4550                           
  4551                           ;LCDlib.c: 111: _delay((unsigned long)((4)*(8000000/4000.0)));
  4552  0E62  300B               	movlw	11
  4553  0E63  00F2               	movwf	??_LCD_PrintChar+1
  4554  0E64  3062               	movlw	98
  4555  0E65  00F1               	movwf	??_LCD_PrintChar
  4556  0E66                     u2397:	
  4557  0E66  0BF1               	decfsz	??_LCD_PrintChar,f
  4558  0E67  2E66               	goto	u2397
  4559  0E68  0BF2               	decfsz	??_LCD_PrintChar+1,f
  4560  0E69  2E66               	goto	u2397
  4561  0E6A  0000               	nop
  4562  0E6B  0008               	return
  4563  0E6C                     __end_of_LCD_PrintChar:	
  4564                           
  4565                           	psect	text20
  4566  004F                     __ptext20:	
  4567 ;; *************** function _LCD_GoToXY *****************
  4568 ;; Defined at:
  4569 ;;		line 132 in file "LCDlib.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;  x               1    wreg     unsigned char 
  4572 ;;  y               1    4[COMMON] unsigned char 
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;  x               1    6[COMMON] unsigned char 
  4575 ;;  temp            1    7[COMMON] unsigned char 
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  1    wreg      void 
  4578 ;; Registers used:
  4579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4585 ;;      Params:         1       0       0       0       0
  4586 ;;      Locals:         2       0       0       0       0
  4587 ;;      Temps:          1       0       0       0       0
  4588 ;;      Totals:         4       0       0       0       0
  4589 ;;Total ram usage:        4 bytes
  4590 ;; Hardware stack levels used:    1
  4591 ;; Hardware stack levels required when called:    2
  4592 ;; This function calls:
  4593 ;;		_LCD_SendCommand
  4594 ;; This function is called by:
  4595 ;;		_LCD_PrintStringXY
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598                           
  4599                           
  4600                           ;psect for function _LCD_GoToXY
  4601  004F                     _LCD_GoToXY:	
  4602                           
  4603                           ;incstack = 0
  4604                           ; Regs used in _LCD_GoToXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4605                           ;LCD_GoToXY@x stored from wreg
  4606  004F  00F6               	movwf	LCD_GoToXY@x
  4607                           
  4608                           ;LCDlib.c: 134: if(x > 39) x = 39;
  4609  0050  3028               	movlw	40
  4610  0051  0276               	subwf	LCD_GoToXY@x,w
  4611  0052  1C03               	skipc
  4612  0053  2858               	goto	l1566
  4613  0054  3027               	movlw	39
  4614  0055  00F5               	movwf	??_LCD_GoToXY
  4615  0056  0875               	movf	??_LCD_GoToXY,w
  4616  0057  00F6               	movwf	LCD_GoToXY@x
  4617  0058                     l1566:	
  4618                           ;LCDlib.c: 135: if(x < 0) x = 0;
  4619                           
  4620                           
  4621                           ;LCDlib.c: 136: if(y > 3) y = 3;
  4622  0058  3004               	movlw	4
  4623  0059  0274               	subwf	LCD_GoToXY@y,w
  4624  005A  1C03               	skipc
  4625  005B  2860               	goto	l50
  4626  005C  3003               	movlw	3
  4627  005D  00F5               	movwf	??_LCD_GoToXY
  4628  005E  0875               	movf	??_LCD_GoToXY,w
  4629  005F  00F4               	movwf	LCD_GoToXY@y
  4630  0060                     l50:	
  4631                           ;LCDlib.c: 137: if(y < 0) y = 0;
  4632                           
  4633                           
  4634                           ;LCDlib.c: 138: char temp = 0x00;
  4635  0060  01F7               	clrf	LCD_GoToXY@temp
  4636                           
  4637                           ;LCDlib.c: 139: (PORTBbits.RB0=0);
  4638  0061  1283               	bcf	3,5	;RP0=0, select bank0
  4639  0062  1303               	bcf	3,6	;RP1=0, select bank0
  4640  0063  1006               	bcf	6,0	;volatile
  4641                           
  4642                           ;LCDlib.c: 141: switch(y)
  4643  0064  28C9               	goto	l1600
  4644  0065                     l1574:	
  4645                           ;LCDlib.c: 142: {
  4646                           ;LCDlib.c: 143: case 0:
  4647                           
  4648                           
  4649                           ;LCDlib.c: 144: {
  4650                           ;LCDlib.c: 145: temp|=(0x80+x);
  4651  0065  0876               	movf	LCD_GoToXY@x,w
  4652  0066  3E80               	addlw	128
  4653  0067  00F5               	movwf	??_LCD_GoToXY
  4654  0068  0875               	movf	??_LCD_GoToXY,w
  4655  0069  04F7               	iorwf	LCD_GoToXY@temp,f
  4656                           
  4657                           ;LCDlib.c: 146: LCD_SendCommand(temp>>4);
  4658  006A  0877               	movf	LCD_GoToXY@temp,w
  4659  006B  00F5               	movwf	??_LCD_GoToXY
  4660  006C  3004               	movlw	4
  4661  006D                     u1255:	
  4662  006D  1003               	clrc
  4663  006E  0CF5               	rrf	??_LCD_GoToXY,f
  4664  006F  3EFF               	addlw	-1
  4665  0070  1D03               	skipz
  4666  0071  286D               	goto	u1255
  4667  0072  0875               	movf	??_LCD_GoToXY,w
  4668  0073  120A  158A  2576  120A  118A  	fcall	_LCD_SendCommand
  4669                           
  4670                           ;LCDlib.c: 147: LCD_SendCommand(temp&0x0F);
  4671  0078  0877               	movf	LCD_GoToXY@temp,w
  4672  0079  390F               	andlw	15
  4673  007A  120A  158A  2576   	fcall	_LCD_SendCommand
  4674                           
  4675                           ;LCDlib.c: 148: break;
  4676  007D  0008               	return
  4677  007E                     l1580:	
  4678                           ;LCDlib.c: 149: }
  4679                           ;LCDlib.c: 150: case 1:
  4680                           
  4681                           
  4682                           ;LCDlib.c: 151: {
  4683                           ;LCDlib.c: 152: temp|=(0xC0+x);
  4684  007E  0876               	movf	LCD_GoToXY@x,w
  4685  007F  3EC0               	addlw	192
  4686  0080  00F5               	movwf	??_LCD_GoToXY
  4687  0081  0875               	movf	??_LCD_GoToXY,w
  4688  0082  04F7               	iorwf	LCD_GoToXY@temp,f
  4689                           
  4690                           ;LCDlib.c: 153: LCD_SendCommand(temp>>4);
  4691  0083  0877               	movf	LCD_GoToXY@temp,w
  4692  0084  00F5               	movwf	??_LCD_GoToXY
  4693  0085  3004               	movlw	4
  4694  0086                     u1265:	
  4695  0086  1003               	clrc
  4696  0087  0CF5               	rrf	??_LCD_GoToXY,f
  4697  0088  3EFF               	addlw	-1
  4698  0089  1D03               	skipz
  4699  008A  2886               	goto	u1265
  4700  008B  0875               	movf	??_LCD_GoToXY,w
  4701  008C  120A  158A  2576  120A  118A  	fcall	_LCD_SendCommand
  4702                           
  4703                           ;LCDlib.c: 154: LCD_SendCommand(temp&0x0F);
  4704  0091  0877               	movf	LCD_GoToXY@temp,w
  4705  0092  390F               	andlw	15
  4706  0093  120A  158A  2576   	fcall	_LCD_SendCommand
  4707                           
  4708                           ;LCDlib.c: 155: break;
  4709  0096  0008               	return
  4710  0097                     l1586:	
  4711                           ;LCDlib.c: 156: }
  4712                           ;LCDlib.c: 157: case 2:
  4713                           
  4714                           
  4715                           ;LCDlib.c: 158: {
  4716                           ;LCDlib.c: 159: temp|=(0x94+x);
  4717  0097  0876               	movf	LCD_GoToXY@x,w
  4718  0098  3E94               	addlw	148
  4719  0099  00F5               	movwf	??_LCD_GoToXY
  4720  009A  0875               	movf	??_LCD_GoToXY,w
  4721  009B  04F7               	iorwf	LCD_GoToXY@temp,f
  4722                           
  4723                           ;LCDlib.c: 160: LCD_SendCommand(temp>>4);
  4724  009C  0877               	movf	LCD_GoToXY@temp,w
  4725  009D  00F5               	movwf	??_LCD_GoToXY
  4726  009E  3004               	movlw	4
  4727  009F                     u1275:	
  4728  009F  1003               	clrc
  4729  00A0  0CF5               	rrf	??_LCD_GoToXY,f
  4730  00A1  3EFF               	addlw	-1
  4731  00A2  1D03               	skipz
  4732  00A3  289F               	goto	u1275
  4733  00A4  0875               	movf	??_LCD_GoToXY,w
  4734  00A5  120A  158A  2576  120A  118A  	fcall	_LCD_SendCommand
  4735                           
  4736                           ;LCDlib.c: 161: LCD_SendCommand(temp&0x0F);
  4737  00AA  0877               	movf	LCD_GoToXY@temp,w
  4738  00AB  390F               	andlw	15
  4739  00AC  120A  158A  2576   	fcall	_LCD_SendCommand
  4740                           
  4741                           ;LCDlib.c: 162: break;
  4742  00AF  0008               	return
  4743  00B0                     l1592:	
  4744                           ;LCDlib.c: 163: }
  4745                           ;LCDlib.c: 165: case 3:
  4746                           
  4747                           
  4748                           ;LCDlib.c: 166: {
  4749                           ;LCDlib.c: 167: temp|=(0xD4+x);
  4750  00B0  0876               	movf	LCD_GoToXY@x,w
  4751  00B1  3ED4               	addlw	212
  4752  00B2  00F5               	movwf	??_LCD_GoToXY
  4753  00B3  0875               	movf	??_LCD_GoToXY,w
  4754  00B4  04F7               	iorwf	LCD_GoToXY@temp,f
  4755                           
  4756                           ;LCDlib.c: 168: LCD_SendCommand(temp>>4);
  4757  00B5  0877               	movf	LCD_GoToXY@temp,w
  4758  00B6  00F5               	movwf	??_LCD_GoToXY
  4759  00B7  3004               	movlw	4
  4760  00B8                     u1285:	
  4761  00B8  1003               	clrc
  4762  00B9  0CF5               	rrf	??_LCD_GoToXY,f
  4763  00BA  3EFF               	addlw	-1
  4764  00BB  1D03               	skipz
  4765  00BC  28B8               	goto	u1285
  4766  00BD  0875               	movf	??_LCD_GoToXY,w
  4767  00BE  120A  158A  2576  120A  118A  	fcall	_LCD_SendCommand
  4768                           
  4769                           ;LCDlib.c: 169: LCD_SendCommand(temp&0x0F);
  4770  00C3  0877               	movf	LCD_GoToXY@temp,w
  4771  00C4  390F               	andlw	15
  4772  00C5  120A  158A  2576   	fcall	_LCD_SendCommand
  4773                           
  4774                           ;LCDlib.c: 171: }
  4775                           ;LCDlib.c: 172: }
  4776                           
  4777                           ;LCDlib.c: 170: break;
  4778  00C8  0008               	return
  4779  00C9                     l1600:	
  4780  00C9  0874               	movf	LCD_GoToXY@y,w
  4781                           
  4782                           ; Switch size 1, requested type "space"
  4783                           ; Number of cases is 4, Range of values is 0 to 3
  4784                           ; switch strategies available:
  4785                           ; Name         Instructions Cycles
  4786                           ; simple_byte           13     7 (average)
  4787                           ; direct_byte           20     8 (fixed)
  4788                           ; jumptable            260     6 (fixed)
  4789                           ;	Chosen strategy is simple_byte
  4790  00CA  3A00               	xorlw	0	; case 0
  4791  00CB  1903               	skipnz
  4792  00CC  2865               	goto	l1574
  4793  00CD  3A01               	xorlw	1	; case 1
  4794  00CE  1903               	skipnz
  4795  00CF  287E               	goto	l1580
  4796  00D0  3A03               	xorlw	3	; case 2
  4797  00D1  1903               	skipnz
  4798  00D2  2897               	goto	l1586
  4799  00D3  3A01               	xorlw	1	; case 3
  4800  00D4  1903               	skipnz
  4801  00D5  28B0               	goto	l1592
  4802  00D6  28D7               	goto	l57
  4803  00D7                     l57:	
  4804  00D7  0008               	return
  4805  00D8                     __end_of_LCD_GoToXY:	
  4806                           
  4807                           	psect	text21
  4808  01F8                     __ptext21:	
  4809 ;; *************** function _USART_Init *****************
  4810 ;; Defined at:
  4811 ;;		line 8 in file "USART.c"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;  baud            4    6[BANK0 ] long 
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;  x               2    9[COMMON] unsigned int 
  4816 ;; Return value:  Size  Location     Type
  4817 ;;                  1    wreg      unsigned char 
  4818 ;; Registers used:
  4819 ;;		wreg, status,2, status,0, pclath, cstack
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4825 ;;      Params:         0       4       0       0       0
  4826 ;;      Locals:         2       0       0       0       0
  4827 ;;      Temps:          0      12       0       0       0
  4828 ;;      Totals:         2      16       0       0       0
  4829 ;;Total ram usage:       18 bytes
  4830 ;; Hardware stack levels used:    1
  4831 ;; Hardware stack levels required when called:    1
  4832 ;; This function calls:
  4833 ;;		___aldiv
  4834 ;; This function is called by:
  4835 ;;		_main
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           
  4840                           ;psect for function _USART_Init
  4841  01F8                     _USART_Init:	
  4842                           
  4843                           ;USART.c: 10: unsigned int x;
  4844                           ;USART.c: 11: x=((8000000 - baud*64)/(baud*64));
  4845                           
  4846                           ;incstack = 0
  4847                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  4848  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  4849  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  4850  01FA  0826               	movf	USART_Init@baud,w
  4851  01FB  00AA               	movwf	??_USART_Init
  4852  01FC  0827               	movf	USART_Init@baud+1,w
  4853  01FD  00AB               	movwf	??_USART_Init+1
  4854  01FE  0828               	movf	USART_Init@baud+2,w
  4855  01FF  00AC               	movwf	??_USART_Init+2
  4856  0200  0829               	movf	USART_Init@baud+3,w
  4857  0201  00AD               	movwf	??_USART_Init+3
  4858  0202  3006               	movlw	6
  4859  0203                     u2055:	
  4860  0203  1003               	clrc
  4861  0204  0DAA               	rlf	??_USART_Init,f
  4862  0205  0DAB               	rlf	??_USART_Init+1,f
  4863  0206  0DAC               	rlf	??_USART_Init+2,f
  4864  0207  0DAD               	rlf	??_USART_Init+3,f
  4865  0208  3EFF               	addlw	-1
  4866  0209  1D03               	skipz
  4867  020A  2A03               	goto	u2055
  4868  020B  082D               	movf	??_USART_Init+3,w
  4869  020C  00F3               	movwf	___aldiv@divisor+3
  4870  020D  082C               	movf	??_USART_Init+2,w
  4871  020E  00F2               	movwf	___aldiv@divisor+2
  4872  020F  082B               	movf	??_USART_Init+1,w
  4873  0210  00F1               	movwf	___aldiv@divisor+1
  4874  0211  082A               	movf	??_USART_Init,w
  4875  0212  00F0               	movwf	___aldiv@divisor
  4876  0213  3000               	movlw	0
  4877  0214  00AE               	movwf	??_USART_Init+4
  4878  0215  3012               	movlw	18
  4879  0216  00AF               	movwf	??_USART_Init+5
  4880  0217  307A               	movlw	122
  4881  0218  00B0               	movwf	??_USART_Init+6
  4882  0219  3000               	movlw	0
  4883  021A  00B1               	movwf	??_USART_Init+7
  4884  021B  0826               	movf	USART_Init@baud,w
  4885  021C  00B2               	movwf	??_USART_Init+8
  4886  021D  0827               	movf	USART_Init@baud+1,w
  4887  021E  00B3               	movwf	??_USART_Init+9
  4888  021F  0828               	movf	USART_Init@baud+2,w
  4889  0220  00B4               	movwf	??_USART_Init+10
  4890  0221  0829               	movf	USART_Init@baud+3,w
  4891  0222  00B5               	movwf	??_USART_Init+11
  4892  0223  3006               	movlw	6
  4893  0224                     u2065:	
  4894  0224  1003               	clrc
  4895  0225  0DB2               	rlf	??_USART_Init+8,f
  4896  0226  0DB3               	rlf	??_USART_Init+9,f
  4897  0227  0DB4               	rlf	??_USART_Init+10,f
  4898  0228  0DB5               	rlf	??_USART_Init+11,f
  4899  0229  3EFF               	addlw	-1
  4900  022A  1D03               	skipz
  4901  022B  2A24               	goto	u2065
  4902  022C  09B2               	comf	??_USART_Init+8,f
  4903  022D  09B3               	comf	??_USART_Init+9,f
  4904  022E  09B4               	comf	??_USART_Init+10,f
  4905  022F  09B5               	comf	??_USART_Init+11,f
  4906  0230  0AB2               	incf	??_USART_Init+8,f
  4907  0231  1903               	skipnz
  4908  0232  0AB3               	incf	??_USART_Init+9,f
  4909  0233  1903               	skipnz
  4910  0234  0AB4               	incf	??_USART_Init+10,f
  4911  0235  1903               	skipnz
  4912  0236  0AB5               	incf	??_USART_Init+11,f
  4913  0237  0832               	movf	??_USART_Init+8,w
  4914  0238  07AE               	addwf	??_USART_Init+4,f
  4915  0239  0833               	movf	??_USART_Init+9,w
  4916  023A  1803               	skipnc
  4917  023B  0F33               	incfsz	??_USART_Init+9,w
  4918  023C  2A3E               	goto	u2070
  4919  023D  2A3F               	goto	u2071
  4920  023E                     u2070:	
  4921  023E  07AF               	addwf	??_USART_Init+5,f
  4922  023F                     u2071:	
  4923  023F  0834               	movf	??_USART_Init+10,w
  4924  0240  1803               	skipnc
  4925  0241  0F34               	incfsz	??_USART_Init+10,w
  4926  0242  2A44               	goto	u2072
  4927  0243  2A45               	goto	u2073
  4928  0244                     u2072:	
  4929  0244  07B0               	addwf	??_USART_Init+6,f
  4930  0245                     u2073:	
  4931  0245  0835               	movf	??_USART_Init+11,w
  4932  0246  1803               	skipnc
  4933  0247  0A35               	incf	??_USART_Init+11,w
  4934  0248  07B1               	addwf	??_USART_Init+7,f
  4935  0249  0831               	movf	??_USART_Init+7,w
  4936  024A  00F7               	movwf	___aldiv@dividend+3
  4937  024B  0830               	movf	??_USART_Init+6,w
  4938  024C  00F6               	movwf	___aldiv@dividend+2
  4939  024D  082F               	movf	??_USART_Init+5,w
  4940  024E  00F5               	movwf	___aldiv@dividend+1
  4941  024F  082E               	movf	??_USART_Init+4,w
  4942  0250  00F4               	movwf	___aldiv@dividend
  4943  0251  120A  118A  20D8  120A  118A  	fcall	___aldiv
  4944  0256  0871               	movf	?___aldiv+1,w
  4945  0257  00FA               	movwf	USART_Init@x+1
  4946  0258  0870               	movf	?___aldiv,w
  4947  0259  00F9               	movwf	USART_Init@x
  4948                           
  4949                           ;USART.c: 12: if(x>255)
  4950  025A  3001               	movlw	1
  4951  025B  027A               	subwf	USART_Init@x+1,w
  4952  025C  3000               	movlw	0
  4953  025D  1903               	skipnz
  4954  025E  0279               	subwf	USART_Init@x,w
  4955  025F  1C03               	skipc
  4956  0260  2AC6               	goto	l2064
  4957                           
  4958                           ;USART.c: 13: {
  4959                           ;USART.c: 14: x = (8000000 - baud*16)/(baud*16);
  4960  0261  1283               	bcf	3,5	;RP0=0, select bank0
  4961  0262  1303               	bcf	3,6	;RP1=0, select bank0
  4962  0263  0826               	movf	USART_Init@baud,w
  4963  0264  00AA               	movwf	??_USART_Init
  4964  0265  0827               	movf	USART_Init@baud+1,w
  4965  0266  00AB               	movwf	??_USART_Init+1
  4966  0267  0828               	movf	USART_Init@baud+2,w
  4967  0268  00AC               	movwf	??_USART_Init+2
  4968  0269  0829               	movf	USART_Init@baud+3,w
  4969  026A  00AD               	movwf	??_USART_Init+3
  4970  026B  3004               	movlw	4
  4971  026C                     u2095:	
  4972  026C  1003               	clrc
  4973  026D  0DAA               	rlf	??_USART_Init,f
  4974  026E  0DAB               	rlf	??_USART_Init+1,f
  4975  026F  0DAC               	rlf	??_USART_Init+2,f
  4976  0270  0DAD               	rlf	??_USART_Init+3,f
  4977  0271  3EFF               	addlw	-1
  4978  0272  1D03               	skipz
  4979  0273  2A6C               	goto	u2095
  4980  0274  082D               	movf	??_USART_Init+3,w
  4981  0275  00F3               	movwf	___aldiv@divisor+3
  4982  0276  082C               	movf	??_USART_Init+2,w
  4983  0277  00F2               	movwf	___aldiv@divisor+2
  4984  0278  082B               	movf	??_USART_Init+1,w
  4985  0279  00F1               	movwf	___aldiv@divisor+1
  4986  027A  082A               	movf	??_USART_Init,w
  4987  027B  00F0               	movwf	___aldiv@divisor
  4988  027C  3000               	movlw	0
  4989  027D  00AE               	movwf	??_USART_Init+4
  4990  027E  3012               	movlw	18
  4991  027F  00AF               	movwf	??_USART_Init+5
  4992  0280  307A               	movlw	122
  4993  0281  00B0               	movwf	??_USART_Init+6
  4994  0282  3000               	movlw	0
  4995  0283  00B1               	movwf	??_USART_Init+7
  4996  0284  0826               	movf	USART_Init@baud,w
  4997  0285  00B2               	movwf	??_USART_Init+8
  4998  0286  0827               	movf	USART_Init@baud+1,w
  4999  0287  00B3               	movwf	??_USART_Init+9
  5000  0288  0828               	movf	USART_Init@baud+2,w
  5001  0289  00B4               	movwf	??_USART_Init+10
  5002  028A  0829               	movf	USART_Init@baud+3,w
  5003  028B  00B5               	movwf	??_USART_Init+11
  5004  028C  3004               	movlw	4
  5005  028D                     u2105:	
  5006  028D  1003               	clrc
  5007  028E  0DB2               	rlf	??_USART_Init+8,f
  5008  028F  0DB3               	rlf	??_USART_Init+9,f
  5009  0290  0DB4               	rlf	??_USART_Init+10,f
  5010  0291  0DB5               	rlf	??_USART_Init+11,f
  5011  0292  3EFF               	addlw	-1
  5012  0293  1D03               	skipz
  5013  0294  2A8D               	goto	u2105
  5014  0295  09B2               	comf	??_USART_Init+8,f
  5015  0296  09B3               	comf	??_USART_Init+9,f
  5016  0297  09B4               	comf	??_USART_Init+10,f
  5017  0298  09B5               	comf	??_USART_Init+11,f
  5018  0299  0AB2               	incf	??_USART_Init+8,f
  5019  029A  1903               	skipnz
  5020  029B  0AB3               	incf	??_USART_Init+9,f
  5021  029C  1903               	skipnz
  5022  029D  0AB4               	incf	??_USART_Init+10,f
  5023  029E  1903               	skipnz
  5024  029F  0AB5               	incf	??_USART_Init+11,f
  5025  02A0  0832               	movf	??_USART_Init+8,w
  5026  02A1  07AE               	addwf	??_USART_Init+4,f
  5027  02A2  0833               	movf	??_USART_Init+9,w
  5028  02A3  1803               	skipnc
  5029  02A4  0F33               	incfsz	??_USART_Init+9,w
  5030  02A5  2AA7               	goto	u2110
  5031  02A6  2AA8               	goto	u2111
  5032  02A7                     u2110:	
  5033  02A7  07AF               	addwf	??_USART_Init+5,f
  5034  02A8                     u2111:	
  5035  02A8  0834               	movf	??_USART_Init+10,w
  5036  02A9  1803               	skipnc
  5037  02AA  0F34               	incfsz	??_USART_Init+10,w
  5038  02AB  2AAD               	goto	u2112
  5039  02AC  2AAE               	goto	u2113
  5040  02AD                     u2112:	
  5041  02AD  07B0               	addwf	??_USART_Init+6,f
  5042  02AE                     u2113:	
  5043  02AE  0835               	movf	??_USART_Init+11,w
  5044  02AF  1803               	skipnc
  5045  02B0  0A35               	incf	??_USART_Init+11,w
  5046  02B1  07B1               	addwf	??_USART_Init+7,f
  5047  02B2  0831               	movf	??_USART_Init+7,w
  5048  02B3  00F7               	movwf	___aldiv@dividend+3
  5049  02B4  0830               	movf	??_USART_Init+6,w
  5050  02B5  00F6               	movwf	___aldiv@dividend+2
  5051  02B6  082F               	movf	??_USART_Init+5,w
  5052  02B7  00F5               	movwf	___aldiv@dividend+1
  5053  02B8  082E               	movf	??_USART_Init+4,w
  5054  02B9  00F4               	movwf	___aldiv@dividend
  5055  02BA  120A  118A  20D8  120A  118A  	fcall	___aldiv
  5056  02BF  0871               	movf	?___aldiv+1,w
  5057  02C0  00FA               	movwf	USART_Init@x+1
  5058  02C1  0870               	movf	?___aldiv,w
  5059  02C2  00F9               	movwf	USART_Init@x
  5060                           
  5061                           ;USART.c: 15: BRGH = 1;
  5062  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  5063  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  5064  02C5  1518               	bsf	24,2	;volatile
  5065  02C6                     l2064:	
  5066                           
  5067                           ;USART.c: 16: }
  5068                           ;USART.c: 17: if(x<256)
  5069  02C6  3001               	movlw	1
  5070  02C7  027A               	subwf	USART_Init@x+1,w
  5071  02C8  3000               	movlw	0
  5072  02C9  1903               	skipnz
  5073  02CA  0279               	subwf	USART_Init@x,w
  5074  02CB  1803               	skipnc
  5075  02CC  0008               	return
  5076                           
  5077                           ;USART.c: 18: {
  5078                           ;USART.c: 19: SPBRG = x;
  5079  02CD  0879               	movf	USART_Init@x,w
  5080  02CE  1683               	bsf	3,5	;RP0=1, select bank1
  5081  02CF  1303               	bcf	3,6	;RP1=0, select bank1
  5082  02D0  0099               	movwf	25	;volatile
  5083                           
  5084                           ;USART.c: 20: SYNC=0;
  5085  02D1  1218               	bcf	24,4	;volatile
  5086                           
  5087                           ;USART.c: 21: SPEN=1;
  5088  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  5089  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  5090  02D4  1798               	bsf	24,7	;volatile
  5091                           
  5092                           ;USART.c: 22: TRISC7=1;
  5093  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  5094  02D6  1303               	bcf	3,6	;RP1=0, select bank1
  5095  02D7  1787               	bsf	7,7	;volatile
  5096                           
  5097                           ;USART.c: 23: TRISC6=0;
  5098  02D8  1307               	bcf	7,6	;volatile
  5099                           
  5100                           ;USART.c: 24: CREN=1;
  5101  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  5102  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  5103  02DB  1618               	bsf	24,4	;volatile
  5104                           
  5105                           ;USART.c: 25: TXEN = 1;
  5106  02DC  1683               	bsf	3,5	;RP0=1, select bank1
  5107  02DD  1303               	bcf	3,6	;RP1=0, select bank1
  5108  02DE  1698               	bsf	24,5	;volatile
  5109                           
  5110                           ;USART.c: 26: return 1;
  5111                           ;	Return value of _USART_Init is never used
  5112  02DF  0008               	return
  5113  02E0                     __end_of_USART_Init:	
  5114                           ;USART.c: 27: }
  5115                           ;USART.c: 28: return 0;
  5116                           ;	Return value of _USART_Init is never used
  5117                           
  5118                           
  5119                           	psect	text22
  5120  00D8                     __ptext22:	
  5121 ;; *************** function ___aldiv *****************
  5122 ;; Defined at:
  5123 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\aldiv.c"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;  divisor         4    0[COMMON] long 
  5126 ;;  dividend        4    4[COMMON] long 
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;  quotient        4    2[BANK0 ] long 
  5129 ;;  sign            1    1[BANK0 ] unsigned char 
  5130 ;;  counter         1    0[BANK0 ] unsigned char 
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  4    0[COMMON] long 
  5133 ;; Registers used:
  5134 ;;		wreg, status,2, status,0
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5140 ;;      Params:         8       0       0       0       0
  5141 ;;      Locals:         0       6       0       0       0
  5142 ;;      Temps:          1       0       0       0       0
  5143 ;;      Totals:         9       6       0       0       0
  5144 ;;Total ram usage:       15 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; This function calls:
  5147 ;;		Nothing
  5148 ;; This function is called by:
  5149 ;;		_USART_Init
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           
  5154                           ;psect for function ___aldiv
  5155  00D8                     ___aldiv:	
  5156                           
  5157                           ;incstack = 0
  5158                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  5159  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  5160  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  5161  00DA  01A1               	clrf	___aldiv@sign
  5162  00DB  1FF3               	btfss	___aldiv@divisor+3,7
  5163  00DC  28EA               	goto	l478
  5164  00DD  09F0               	comf	___aldiv@divisor,f
  5165  00DE  09F1               	comf	___aldiv@divisor+1,f
  5166  00DF  09F2               	comf	___aldiv@divisor+2,f
  5167  00E0  09F3               	comf	___aldiv@divisor+3,f
  5168  00E1  0AF0               	incf	___aldiv@divisor,f
  5169  00E2  1903               	skipnz
  5170  00E3  0AF1               	incf	___aldiv@divisor+1,f
  5171  00E4  1903               	skipnz
  5172  00E5  0AF2               	incf	___aldiv@divisor+2,f
  5173  00E6  1903               	skipnz
  5174  00E7  0AF3               	incf	___aldiv@divisor+3,f
  5175  00E8  01A1               	clrf	___aldiv@sign
  5176  00E9  0AA1               	incf	___aldiv@sign,f
  5177  00EA                     l478:	
  5178  00EA  1FF7               	btfss	___aldiv@dividend+3,7
  5179  00EB  28FB               	goto	l1994
  5180  00EC  09F4               	comf	___aldiv@dividend,f
  5181  00ED  09F5               	comf	___aldiv@dividend+1,f
  5182  00EE  09F6               	comf	___aldiv@dividend+2,f
  5183  00EF  09F7               	comf	___aldiv@dividend+3,f
  5184  00F0  0AF4               	incf	___aldiv@dividend,f
  5185  00F1  1903               	skipnz
  5186  00F2  0AF5               	incf	___aldiv@dividend+1,f
  5187  00F3  1903               	skipnz
  5188  00F4  0AF6               	incf	___aldiv@dividend+2,f
  5189  00F5  1903               	skipnz
  5190  00F6  0AF7               	incf	___aldiv@dividend+3,f
  5191  00F7  3001               	movlw	1
  5192  00F8  00F8               	movwf	??___aldiv
  5193  00F9  0878               	movf	??___aldiv,w
  5194  00FA  06A1               	xorwf	___aldiv@sign,f
  5195  00FB                     l1994:	
  5196  00FB  3000               	movlw	0
  5197  00FC  00A5               	movwf	___aldiv@quotient+3
  5198  00FD  3000               	movlw	0
  5199  00FE  00A4               	movwf	___aldiv@quotient+2
  5200  00FF  3000               	movlw	0
  5201  0100  00A3               	movwf	___aldiv@quotient+1
  5202  0101  3000               	movlw	0
  5203  0102  00A2               	movwf	___aldiv@quotient
  5204  0103  0873               	movf	___aldiv@divisor+3,w
  5205  0104  0472               	iorwf	___aldiv@divisor+2,w
  5206  0105  0471               	iorwf	___aldiv@divisor+1,w
  5207  0106  0470               	iorwf	___aldiv@divisor,w
  5208  0107  1903               	skipnz
  5209  0108  2950               	goto	l2016
  5210  0109  01A0               	clrf	___aldiv@counter
  5211  010A  0AA0               	incf	___aldiv@counter,f
  5212  010B                     l2002:	
  5213  010B  1BF3               	btfsc	___aldiv@divisor+3,7
  5214  010C  291B               	goto	l2004
  5215  010D  3001               	movlw	1
  5216  010E  00F8               	movwf	??___aldiv
  5217  010F                     u1985:	
  5218  010F  1003               	clrc
  5219  0110  0DF0               	rlf	___aldiv@divisor,f
  5220  0111  0DF1               	rlf	___aldiv@divisor+1,f
  5221  0112  0DF2               	rlf	___aldiv@divisor+2,f
  5222  0113  0DF3               	rlf	___aldiv@divisor+3,f
  5223  0114  0BF8               	decfsz	??___aldiv,f
  5224  0115  290F               	goto	u1985
  5225  0116  3001               	movlw	1
  5226  0117  00F8               	movwf	??___aldiv
  5227  0118  0878               	movf	??___aldiv,w
  5228  0119  07A0               	addwf	___aldiv@counter,f
  5229  011A  290B               	goto	l2002
  5230  011B                     l2004:	
  5231  011B  3001               	movlw	1
  5232  011C  00F8               	movwf	??___aldiv
  5233  011D                     u2005:	
  5234  011D  1003               	clrc
  5235  011E  0DA2               	rlf	___aldiv@quotient,f
  5236  011F  0DA3               	rlf	___aldiv@quotient+1,f
  5237  0120  0DA4               	rlf	___aldiv@quotient+2,f
  5238  0121  0DA5               	rlf	___aldiv@quotient+3,f
  5239  0122  0BF8               	decfsz	??___aldiv,f
  5240  0123  291D               	goto	u2005
  5241  0124  0873               	movf	___aldiv@divisor+3,w
  5242  0125  0277               	subwf	___aldiv@dividend+3,w
  5243  0126  1D03               	skipz
  5244  0127  2932               	goto	u2015
  5245  0128  0872               	movf	___aldiv@divisor+2,w
  5246  0129  0276               	subwf	___aldiv@dividend+2,w
  5247  012A  1D03               	skipz
  5248  012B  2932               	goto	u2015
  5249  012C  0871               	movf	___aldiv@divisor+1,w
  5250  012D  0275               	subwf	___aldiv@dividend+1,w
  5251  012E  1D03               	skipz
  5252  012F  2932               	goto	u2015
  5253  0130  0870               	movf	___aldiv@divisor,w
  5254  0131  0274               	subwf	___aldiv@dividend,w
  5255  0132                     u2015:	
  5256  0132  1C03               	skipc
  5257  0133  2943               	goto	l2012
  5258  0134  0870               	movf	___aldiv@divisor,w
  5259  0135  02F4               	subwf	___aldiv@dividend,f
  5260  0136  0871               	movf	___aldiv@divisor+1,w
  5261  0137  1C03               	skipc
  5262  0138  0F71               	incfsz	___aldiv@divisor+1,w
  5263  0139  02F5               	subwf	___aldiv@dividend+1,f
  5264  013A  0872               	movf	___aldiv@divisor+2,w
  5265  013B  1C03               	skipc
  5266  013C  0F72               	incfsz	___aldiv@divisor+2,w
  5267  013D  02F6               	subwf	___aldiv@dividend+2,f
  5268  013E  0873               	movf	___aldiv@divisor+3,w
  5269  013F  1C03               	skipc
  5270  0140  0F73               	incfsz	___aldiv@divisor+3,w
  5271  0141  02F7               	subwf	___aldiv@dividend+3,f
  5272  0142  1422               	bsf	___aldiv@quotient,0
  5273  0143                     l2012:	
  5274  0143  3001               	movlw	1
  5275  0144                     u2025:	
  5276  0144  1003               	clrc
  5277  0145  0CF3               	rrf	___aldiv@divisor+3,f
  5278  0146  0CF2               	rrf	___aldiv@divisor+2,f
  5279  0147  0CF1               	rrf	___aldiv@divisor+1,f
  5280  0148  0CF0               	rrf	___aldiv@divisor,f
  5281  0149  3EFF               	addlw	-1
  5282  014A  1D03               	skipz
  5283  014B  2944               	goto	u2025
  5284  014C  3001               	movlw	1
  5285  014D  02A0               	subwf	___aldiv@counter,f
  5286  014E  1D03               	btfss	3,2
  5287  014F  291B               	goto	l2004
  5288  0150                     l2016:	
  5289  0150  0821               	movf	___aldiv@sign,w
  5290  0151  1903               	btfsc	3,2
  5291  0152  295E               	goto	l2020
  5292  0153  09A2               	comf	___aldiv@quotient,f
  5293  0154  09A3               	comf	___aldiv@quotient+1,f
  5294  0155  09A4               	comf	___aldiv@quotient+2,f
  5295  0156  09A5               	comf	___aldiv@quotient+3,f
  5296  0157  0AA2               	incf	___aldiv@quotient,f
  5297  0158  1903               	skipnz
  5298  0159  0AA3               	incf	___aldiv@quotient+1,f
  5299  015A  1903               	skipnz
  5300  015B  0AA4               	incf	___aldiv@quotient+2,f
  5301  015C  1903               	skipnz
  5302  015D  0AA5               	incf	___aldiv@quotient+3,f
  5303  015E                     l2020:	
  5304  015E  0825               	movf	___aldiv@quotient+3,w
  5305  015F  00F3               	movwf	?___aldiv+3
  5306  0160  0824               	movf	___aldiv@quotient+2,w
  5307  0161  00F2               	movwf	?___aldiv+2
  5308  0162  0823               	movf	___aldiv@quotient+1,w
  5309  0163  00F1               	movwf	?___aldiv+1
  5310  0164  0822               	movf	___aldiv@quotient,w
  5311  0165  00F0               	movwf	?___aldiv
  5312  0166  0008               	return
  5313  0167                     __end_of___aldiv:	
  5314                           
  5315                           	psect	text23
  5316  0167                     __ptext23:	
  5317 ;; *************** function _LCD_Init *****************
  5318 ;; Defined at:
  5319 ;;		line 62 in file "LCDlib.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;  lcd             1    wreg     unsigned char 
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;  lcd             1    6[COMMON] unsigned char 
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  1    wreg      void 
  5326 ;; Registers used:
  5327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5333 ;;      Params:         0       0       0       0       0
  5334 ;;      Locals:         1       0       0       0       0
  5335 ;;      Temps:          2       0       0       0       0
  5336 ;;      Totals:         3       0       0       0       0
  5337 ;;Total ram usage:        3 bytes
  5338 ;; Hardware stack levels used:    1
  5339 ;; Hardware stack levels required when called:    2
  5340 ;; This function calls:
  5341 ;;		_LCD_SendCommand
  5342 ;; This function is called by:
  5343 ;;		_main
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347                           
  5348                           ;psect for function _LCD_Init
  5349  0167                     _LCD_Init:	
  5350                           
  5351                           ;incstack = 0
  5352                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5353                           ;LCD_Init@lcd stored from wreg
  5354  0167  00F6               	movwf	LCD_Init@lcd
  5355                           
  5356                           ;LCDlib.c: 64: TRISB0=0;
  5357  0168  1683               	bsf	3,5	;RP0=1, select bank1
  5358  0169  1303               	bcf	3,6	;RP1=0, select bank1
  5359  016A  1006               	bcf	6,0	;volatile
  5360                           
  5361                           ;LCDlib.c: 65: TRISB1=0;
  5362  016B  1086               	bcf	6,1	;volatile
  5363                           
  5364                           ;LCDlib.c: 66: TRISB2=0;
  5365  016C  1106               	bcf	6,2	;volatile
  5366                           
  5367                           ;LCDlib.c: 67: TRISB=0x00;
  5368  016D  0186               	clrf	6	;volatile
  5369                           
  5370                           ;LCDlib.c: 69: switch (lcd)
  5371  016E  297A               	goto	l2038
  5372  016F                     l2028:	
  5373                           ;LCDlib.c: 70: {
  5374                           ;LCDlib.c: 71: case 0: lcd = 0x0C; break;
  5375                           
  5376  016F  300C               	movlw	12
  5377  0170  2976               	goto	L10
  5378  0171                     l2030:	
  5379                           ;LCDlib.c: 72: case 1: lcd = 0x0D; break;
  5380                           
  5381  0171  300D               	movlw	13
  5382  0172  2976               	goto	L10
  5383  0173                     l2032:	
  5384                           ;LCDlib.c: 73: case 2: lcd = 0x0E; break;
  5385                           
  5386  0173  300E               	movlw	14
  5387  0174  2976               	goto	L10
  5388  0175                     l2034:	
  5389                           ;LCDlib.c: 74: case 3: lcd = 0x0F; break;
  5390                           
  5391  0175  300F               	movlw	15
  5392  0176                     L10:	
  5393  0176  00F4               	movwf	??_LCD_Init
  5394  0177  0874               	movf	??_LCD_Init,w
  5395  0178  00F6               	movwf	LCD_Init@lcd
  5396                           
  5397                           ;LCDlib.c: 75: }
  5398  0179  2988               	goto	l2040
  5399  017A                     l2038:	
  5400  017A  0876               	movf	LCD_Init@lcd,w
  5401                           
  5402                           ; Switch size 1, requested type "space"
  5403                           ; Number of cases is 4, Range of values is 0 to 3
  5404                           ; switch strategies available:
  5405                           ; Name         Instructions Cycles
  5406                           ; simple_byte           13     7 (average)
  5407                           ; direct_byte           20     8 (fixed)
  5408                           ; jumptable            260     6 (fixed)
  5409                           ;	Chosen strategy is simple_byte
  5410  017B  3A00               	xorlw	0	; case 0
  5411  017C  1903               	skipnz
  5412  017D  296F               	goto	l2028
  5413  017E  3A01               	xorlw	1	; case 1
  5414  017F  1903               	skipnz
  5415  0180  2971               	goto	l2030
  5416  0181  3A03               	xorlw	3	; case 2
  5417  0182  1903               	skipnz
  5418  0183  2973               	goto	l2032
  5419  0184  3A01               	xorlw	1	; case 3
  5420  0185  1903               	skipnz
  5421  0186  2975               	goto	l2034
  5422  0187  2988               	goto	l2040
  5423  0188                     l2040:	
  5424                           
  5425                           ;LCDlib.c: 77: _delay((unsigned long)((20)*(8000000/4000.0)));
  5426  0188  3034               	movlw	52
  5427  0189  00F5               	movwf	??_LCD_Init+1
  5428  018A  30F1               	movlw	241
  5429  018B  00F4               	movwf	??_LCD_Init
  5430  018C                     u2407:	
  5431  018C  0BF4               	decfsz	??_LCD_Init,f
  5432  018D  298C               	goto	u2407
  5433  018E  0BF5               	decfsz	??_LCD_Init+1,f
  5434  018F  298C               	goto	u2407
  5435  0190  2991               	nop2
  5436                           
  5437                           ;LCDlib.c: 78: LCD_SendCommand(0x03);
  5438  0191  3003               	movlw	3
  5439  0192  120A  158A  2576  120A  118A  	fcall	_LCD_SendCommand
  5440                           
  5441                           ;LCDlib.c: 79: _delay((unsigned long)((40)*(8000000/4000000.0)));
  5442  0197  301A               	movlw	26
  5443  0198  00F4               	movwf	??_LCD_Init
  5444  0199                     u2417:	
  5445  0199  0BF4               	decfsz	??_LCD_Init,f
  5446  019A  2999               	goto	u2417
  5447  019B  0000               	nop
  5448                           
  5449                           ;LCDlib.c: 80: LCD_SendCommand(0x03);
  5450  019C  3003               	movlw	3
  5451  019D  120A  158A  2576  120A  118A  	fcall	_LCD_SendCommand
  5452                           
  5453                           ;LCDlib.c: 81: _delay((unsigned long)((40)*(8000000/4000000.0)));
  5454  01A2  301A               	movlw	26
  5455  01A3  00F4               	movwf	??_LCD_Init
  5456  01A4                     u2427:	
  5457  01A4  0BF4               	decfsz	??_LCD_Init,f
  5458  01A5  29A4               	goto	u2427
  5459  01A6  0000               	nop
  5460                           
  5461                           ;LCDlib.c: 82: LCD_SendCommand(0x03);
  5462  01A7  3003               	movlw	3
  5463  01A8  120A  158A  2576  120A  118A  	fcall	_LCD_SendCommand
  5464                           
  5465                           ;LCDlib.c: 83: _delay((unsigned long)((40)*(8000000/4000000.0)));
  5466  01AD  301A               	movlw	26
  5467  01AE  00F4               	movwf	??_LCD_Init
  5468  01AF                     u2437:	
  5469  01AF  0BF4               	decfsz	??_LCD_Init,f
  5470  01B0  29AF               	goto	u2437
  5471  01B1  0000               	nop
  5472                           
  5473                           ;LCDlib.c: 84: LCD_SendCommand(0x02);
  5474  01B2  3002               	movlw	2
  5475  01B3  120A  158A  2576  120A  118A  	fcall	_LCD_SendCommand
  5476                           
  5477                           ;LCDlib.c: 85: _delay((unsigned long)((40)*(8000000/4000000.0)));
  5478  01B8  301A               	movlw	26
  5479  01B9  00F4               	movwf	??_LCD_Init
  5480  01BA                     u2447:	
  5481  01BA  0BF4               	decfsz	??_LCD_Init,f
  5482  01BB  29BA               	goto	u2447
  5483  01BC  0000               	nop
  5484                           
  5485                           ;LCDlib.c: 86: LCD_SendCommand(0x02);
  5486  01BD  3002               	movlw	2
  5487  01BE  120A  158A  2576  120A  118A  	fcall	_LCD_SendCommand
  5488                           
  5489                           ;LCDlib.c: 87: LCD_SendCommand(0x08);
  5490  01C3  3008               	movlw	8
  5491  01C4  120A  158A  2576  120A  118A  	fcall	_LCD_SendCommand
  5492                           
  5493                           ;LCDlib.c: 88: LCD_SendCommand(0x00);
  5494  01C9  3000               	movlw	0
  5495  01CA  120A  158A  2576  120A  118A  	fcall	_LCD_SendCommand
  5496                           
  5497                           ;LCDlib.c: 89: LCD_SendCommand(0x08);
  5498  01CF  3008               	movlw	8
  5499  01D0  120A  158A  2576  120A  118A  	fcall	_LCD_SendCommand
  5500                           
  5501                           ;LCDlib.c: 90: LCD_SendCommand(0x00);
  5502  01D5  3000               	movlw	0
  5503  01D6  120A  158A  2576  120A  118A  	fcall	_LCD_SendCommand
  5504                           
  5505                           ;LCDlib.c: 91: LCD_SendCommand(0x01);
  5506  01DB  3001               	movlw	1
  5507  01DC  120A  158A  2576  120A  118A  	fcall	_LCD_SendCommand
  5508                           
  5509                           ;LCDlib.c: 92: LCD_SendCommand(0x00);
  5510  01E1  3000               	movlw	0
  5511  01E2  120A  158A  2576  120A  118A  	fcall	_LCD_SendCommand
  5512                           
  5513                           ;LCDlib.c: 93: LCD_SendCommand(0x06);
  5514  01E7  3006               	movlw	6
  5515  01E8  120A  158A  2576  120A  118A  	fcall	_LCD_SendCommand
  5516                           
  5517                           ;LCDlib.c: 94: LCD_SendCommand(0x00);
  5518  01ED  3000               	movlw	0
  5519  01EE  120A  158A  2576  120A  118A  	fcall	_LCD_SendCommand
  5520                           
  5521                           ;LCDlib.c: 95: LCD_SendCommand(lcd);
  5522  01F3  0876               	movf	LCD_Init@lcd,w
  5523  01F4  120A  158A  2576   	fcall	_LCD_SendCommand
  5524  01F7  0008               	return
  5525  01F8                     __end_of_LCD_Init:	
  5526                           
  5527                           	psect	text24
  5528  0D59                     __ptext24:	
  5529 ;; *************** function _LCD_Clear *****************
  5530 ;; Defined at:
  5531 ;;		line 190 in file "LCDlib.c"
  5532 ;; Parameters:    Size  Location     Type
  5533 ;;		None
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;		None
  5536 ;; Return value:  Size  Location     Type
  5537 ;;                  1    wreg      void 
  5538 ;; Registers used:
  5539 ;;		wreg, status,2, status,0, pclath, cstack
  5540 ;; Tracked objects:
  5541 ;;		On entry : 0/0
  5542 ;;		On exit  : 0/0
  5543 ;;		Unchanged: 0/0
  5544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5545 ;;      Params:         0       0       0       0       0
  5546 ;;      Locals:         0       0       0       0       0
  5547 ;;      Temps:          0       0       0       0       0
  5548 ;;      Totals:         0       0       0       0       0
  5549 ;;Total ram usage:        0 bytes
  5550 ;; Hardware stack levels used:    1
  5551 ;; Hardware stack levels required when called:    2
  5552 ;; This function calls:
  5553 ;;		_LCD_SendCommand
  5554 ;; This function is called by:
  5555 ;;		_main
  5556 ;; This function uses a non-reentrant model
  5557 ;;
  5558                           
  5559                           
  5560                           ;psect for function _LCD_Clear
  5561  0D59                     _LCD_Clear:	
  5562                           
  5563                           ;LCDlib.c: 192: LCD_SendCommand(0x00);
  5564                           
  5565                           ;incstack = 0
  5566                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  5567  0D59  3000               	movlw	0
  5568  0D5A  120A  158A  2576  120A  158A  	fcall	_LCD_SendCommand
  5569                           
  5570                           ;LCDlib.c: 193: LCD_SendCommand(0x01);
  5571  0D5F  3001               	movlw	1
  5572  0D60  120A  158A  2576   	fcall	_LCD_SendCommand
  5573  0D63  0008               	return
  5574  0D64                     __end_of_LCD_Clear:	
  5575                           
  5576                           	psect	text25
  5577  0D76                     __ptext25:	
  5578 ;; *************** function _LCD_SendCommand *****************
  5579 ;; Defined at:
  5580 ;;		line 48 in file "LCDlib.c"
  5581 ;; Parameters:    Size  Location     Type
  5582 ;;  com             1    wreg     unsigned char 
  5583 ;; Auto vars:     Size  Location     Type
  5584 ;;  com             1    3[COMMON] unsigned char 
  5585 ;; Return value:  Size  Location     Type
  5586 ;;                  1    wreg      void 
  5587 ;; Registers used:
  5588 ;;		wreg, status,2, status,0, pclath, cstack
  5589 ;; Tracked objects:
  5590 ;;		On entry : 0/0
  5591 ;;		On exit  : 0/0
  5592 ;;		Unchanged: 0/0
  5593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5594 ;;      Params:         0       0       0       0       0
  5595 ;;      Locals:         1       0       0       0       0
  5596 ;;      Temps:          2       0       0       0       0
  5597 ;;      Totals:         3       0       0       0       0
  5598 ;;Total ram usage:        3 bytes
  5599 ;; Hardware stack levels used:    1
  5600 ;; Hardware stack levels required when called:    1
  5601 ;; This function calls:
  5602 ;;		_LCD_SendData
  5603 ;; This function is called by:
  5604 ;;		_LCD_Init
  5605 ;;		_LCD_GoToXY
  5606 ;;		_LCD_Clear
  5607 ;; This function uses a non-reentrant model
  5608 ;;
  5609                           
  5610                           
  5611                           ;psect for function _LCD_SendCommand
  5612  0D76                     _LCD_SendCommand:	
  5613                           
  5614                           ;incstack = 0
  5615                           ; Regs used in _LCD_SendCommand: [wreg+status,2+status,0+pclath+cstack]
  5616                           ;LCD_SendCommand@com stored from wreg
  5617  0D76  00F3               	movwf	LCD_SendCommand@com
  5618                           
  5619                           ;LCDlib.c: 50: (PORTBbits.RB0=0);
  5620  0D77  1283               	bcf	3,5	;RP0=0, select bank0
  5621  0D78  1303               	bcf	3,6	;RP1=0, select bank0
  5622  0D79  1006               	bcf	6,0	;volatile
  5623                           
  5624                           ;LCDlib.c: 51: LCD_SendData(com);
  5625  0D7A  0873               	movf	LCD_SendCommand@com,w
  5626  0D7B  120A  158A  25A6  120A  158A  	fcall	_LCD_SendData
  5627                           
  5628                           ;LCDlib.c: 52: (PORTBbits.RB2=1);
  5629  0D80  1283               	bcf	3,5	;RP0=0, select bank0
  5630  0D81  1303               	bcf	3,6	;RP1=0, select bank0
  5631  0D82  1506               	bsf	6,2	;volatile
  5632                           
  5633                           ;LCDlib.c: 53: (PORTBbits.RB2=0);
  5634  0D83  1106               	bcf	6,2	;volatile
  5635                           
  5636                           ;LCDlib.c: 54: _delay((unsigned long)((4)*(8000000/4000.0)));
  5637  0D84  300B               	movlw	11
  5638  0D85  00F2               	movwf	??_LCD_SendCommand+1
  5639  0D86  3062               	movlw	98
  5640  0D87  00F1               	movwf	??_LCD_SendCommand
  5641  0D88                     u2457:	
  5642  0D88  0BF1               	decfsz	??_LCD_SendCommand,f
  5643  0D89  2D88               	goto	u2457
  5644  0D8A  0BF2               	decfsz	??_LCD_SendCommand+1,f
  5645  0D8B  2D88               	goto	u2457
  5646  0D8C  0000               	nop
  5647  0D8D  0008               	return
  5648  0D8E                     __end_of_LCD_SendCommand:	
  5649                           
  5650                           	psect	text26
  5651  0DA6                     __ptext26:	
  5652 ;; *************** function _LCD_SendData *****************
  5653 ;; Defined at:
  5654 ;;		line 8 in file "LCDlib.c"
  5655 ;; Parameters:    Size  Location     Type
  5656 ;;  data            1    wreg     unsigned char 
  5657 ;; Auto vars:     Size  Location     Type
  5658 ;;  data            1    0[COMMON] unsigned char 
  5659 ;; Return value:  Size  Location     Type
  5660 ;;                  1    wreg      void 
  5661 ;; Registers used:
  5662 ;;		wreg
  5663 ;; Tracked objects:
  5664 ;;		On entry : 0/0
  5665 ;;		On exit  : 0/0
  5666 ;;		Unchanged: 0/0
  5667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5668 ;;      Params:         0       0       0       0       0
  5669 ;;      Locals:         1       0       0       0       0
  5670 ;;      Temps:          0       0       0       0       0
  5671 ;;      Totals:         1       0       0       0       0
  5672 ;;Total ram usage:        1 bytes
  5673 ;; Hardware stack levels used:    1
  5674 ;; This function calls:
  5675 ;;		Nothing
  5676 ;; This function is called by:
  5677 ;;		_LCD_SendCommand
  5678 ;;		_LCD_PrintChar
  5679 ;; This function uses a non-reentrant model
  5680 ;;
  5681                           
  5682                           
  5683                           ;psect for function _LCD_SendData
  5684  0DA6                     _LCD_SendData:	
  5685                           
  5686                           ;incstack = 0
  5687                           ; Regs used in _LCD_SendData: [wreg]
  5688                           ;LCD_SendData@data stored from wreg
  5689  0DA6  00F0               	movwf	LCD_SendData@data
  5690                           
  5691                           ;LCDlib.c: 10: if(data&0x01)
  5692  0DA7  1C70               	btfss	LCD_SendData@data,0
  5693  0DA8  2DAD               	goto	l15
  5694                           
  5695                           ;LCDlib.c: 11: {
  5696                           ;LCDlib.c: 12: PORTBbits.RB4=1;
  5697  0DA9  1283               	bcf	3,5	;RP0=0, select bank0
  5698  0DAA  1303               	bcf	3,6	;RP1=0, select bank0
  5699  0DAB  1606               	bsf	6,4	;volatile
  5700                           
  5701                           ;LCDlib.c: 13: }
  5702  0DAC  2DB0               	goto	l16
  5703  0DAD                     l15:	
  5704                           
  5705                           ;LCDlib.c: 14: else
  5706                           ;LCDlib.c: 15: {
  5707                           ;LCDlib.c: 16: PORTBbits.RB4=0;
  5708  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  5709  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  5710  0DAF  1206               	bcf	6,4	;volatile
  5711  0DB0                     l16:	
  5712                           
  5713                           ;LCDlib.c: 17: }
  5714                           ;LCDlib.c: 18: if(data&0x02)
  5715  0DB0  1CF0               	btfss	LCD_SendData@data,1
  5716  0DB1  2DB4               	goto	l17
  5717                           
  5718                           ;LCDlib.c: 19: {
  5719                           ;LCDlib.c: 20: PORTBbits.RB5=1;
  5720  0DB2  1686               	bsf	6,5	;volatile
  5721                           
  5722                           ;LCDlib.c: 21: }
  5723  0DB3  2DB5               	goto	l18
  5724  0DB4                     l17:	
  5725                           
  5726                           ;LCDlib.c: 22: else
  5727                           ;LCDlib.c: 23: {
  5728                           ;LCDlib.c: 24: PORTBbits.RB5=0;
  5729  0DB4  1286               	bcf	6,5	;volatile
  5730  0DB5                     l18:	
  5731                           
  5732                           ;LCDlib.c: 25: }
  5733                           ;LCDlib.c: 26: if(data&0x04)
  5734  0DB5  1D70               	btfss	LCD_SendData@data,2
  5735  0DB6  2DB9               	goto	l19
  5736                           
  5737                           ;LCDlib.c: 27: {
  5738                           ;LCDlib.c: 28: PORTBbits.RB6=1;
  5739  0DB7  1706               	bsf	6,6	;volatile
  5740                           
  5741                           ;LCDlib.c: 29: }
  5742  0DB8  2DBA               	goto	l20
  5743  0DB9                     l19:	
  5744                           
  5745                           ;LCDlib.c: 30: else
  5746                           ;LCDlib.c: 31: {
  5747                           ;LCDlib.c: 32: PORTBbits.RB6=0;
  5748  0DB9  1306               	bcf	6,6	;volatile
  5749  0DBA                     l20:	
  5750                           
  5751                           ;LCDlib.c: 33: }
  5752                           ;LCDlib.c: 34: if(data&0x08)
  5753  0DBA  1DF0               	btfss	LCD_SendData@data,3
  5754  0DBB  2DBE               	goto	l21
  5755                           
  5756                           ;LCDlib.c: 35: {
  5757                           ;LCDlib.c: 36: PORTBbits.RB7=1;
  5758  0DBC  1786               	bsf	6,7	;volatile
  5759                           
  5760                           ;LCDlib.c: 37: }
  5761  0DBD  0008               	return
  5762  0DBE                     l21:	
  5763                           
  5764                           ;LCDlib.c: 38: else
  5765                           ;LCDlib.c: 39: {
  5766                           ;LCDlib.c: 40: PORTBbits.RB7=0;
  5767  0DBE  1386               	bcf	6,7	;volatile
  5768  0DBF  0008               	return
  5769  0DC0                     __end_of_LCD_SendData:	
  5770  007E                     btemp	set	126	;btemp
  5771  007E                     wtemp0	set	126


Data Sizes:
    Strings     267
    Constant    18
    Data        1
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     72      79
    BANK1            80     63      63
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_19(CODE[18]), STR_18(CODE[18]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_14(CODE[20]), STR_13(CODE[19]), STR_12(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 30
		 -> Indicate_LCDTemp@bufferVnyt(BANK1[30]), Indicate_LCDTemp@bufferVn(BANK1[30]), read_meas@s(BANK0[30]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Usart_PrintString@Text	PTR unsigned char  size(2) Largest target is 30
		 -> STR_15(CODE[1]), read_meas@s(BANK0[30]), STR_11(CODE[5]), STR_10(CODE[18]), 
		 -> STR_8(CODE[12]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[18]), 

    OneWire_command@id	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    w1_rom_search@id	PTR unsigned char  size(1) Largest target is 8
		 -> read_meas@id(BANK0[8]), 

    LCD_PrintStringXY@str	PTR unsigned char  size(2) Largest target is 30
		 -> Indicate_LCDTemp@bufferVnyt(BANK1[30]), Indicate_LCDTemp@bufferVn(BANK1[30]), STR_9(CODE[16]), STR_7(CODE[16]), 
		 -> STR_5(CODE[16]), STR_3(CODE[16]), STR_1(CODE[12]), 

    LCD_PrintString@str	PTR unsigned char  size(2) Largest target is 30
		 -> Indicate_LCDTemp@bufferVnyt(BANK1[30]), Indicate_LCDTemp@bufferVn(BANK1[30]), STR_9(CODE[16]), STR_7(CODE[16]), 
		 -> STR_5(CODE[16]), STR_3(CODE[16]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _start_meas->_OneWire_command
    _OneWire_command->_OneWire_Byte_Write
    _w1_rom_search->_OneWire_Byte_Write
    _Usart_PrintString->_Transmit_char
    _OneWire_Byte_Read->_OneWire_Byte_Write
    _OneWire_Byte_Write->_OneWire_Bit_IO
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_PrintStringXY->_LCD_GoToXY
    _LCD_PrintString->_LCD_PrintChar
    _LCD_PrintChar->_LCD_SendData
    _LCD_GoToXY->_LCD_SendCommand
    _USART_Init->___aldiv
    _LCD_Init->_LCD_SendCommand
    _LCD_Clear->_LCD_SendCommand
    _LCD_SendCommand->_LCD_SendData

Critical Paths under _main in BANK0

    _main->_read_meas
    _read_meas->_Indicate_LCDTemp
    _Indicate_LCDTemp->_sprintf
    _USART_Init->___aldiv

Critical Paths under _main in BANK1

    _read_meas->_Indicate_LCDTemp

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   18860
                                             69 BANK0      3     3      0
                          _LCD_Clear
                           _LCD_Init
                  _LCD_PrintStringXY
                         _USART_Init
                          _read_meas
                         _start_meas
 ---------------------------------------------------------------------------------
 (1) _start_meas                                           0     0      0     947
                    _OneWire_command
                  _Usart_PrintString
 ---------------------------------------------------------------------------------
 (2) _OneWire_command                                      4     3      1     304
                                              9 COMMON     4     3      1
                 _OneWire_Byte_Write
                      _OneWire_reset
 ---------------------------------------------------------------------------------
 (1) _read_meas                                           77    77      0   15013
                                             22 BANK0     47    47      0
                   _Indicate_LCDTemp
                  _LCD_PrintStringXY
                  _OneWire_Byte_Read
                 _OneWire_Byte_Write
                  _Usart_PrintString
                            ___lwdiv
                            _sprintf
                      _w1_rom_search
 ---------------------------------------------------------------------------------
 (2) _w1_rom_search                                        7     6      1     597
                                              9 COMMON     2     1      1
                                              0 BANK0      5     5      0
                     _OneWire_Bit_IO
                 _OneWire_Byte_Write
                      _OneWire_reset
 ---------------------------------------------------------------------------------
 (3) _OneWire_reset                                        3     3      0      24
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Usart_PrintString                                    4     2      2     643
                                              1 COMMON     4     2      2
                      _Transmit_char
 ---------------------------------------------------------------------------------
 (3) _Transmit_char                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OneWire_Byte_Read                                    2     0      2     137
                                              9 COMMON     2     0      2
                 _OneWire_Byte_Write
 ---------------------------------------------------------------------------------
 (3) _OneWire_Byte_Write                                   7     5      2     137
                                              2 COMMON     7     5      2
                     _OneWire_Bit_IO
 ---------------------------------------------------------------------------------
 (4) _OneWire_Bit_IO                                       2     2      0      45
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Indicate_LCDTemp                                    68    67      1    6651
                                             19 BANK0      3     2      1
                                              0 BANK1     63    63      0
                  _LCD_PrintStringXY
                            ___lwdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    21      6    3258
                                              0 BANK0     19    13      6
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     198
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     265
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4    1010
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_PrintStringXY                                    5     1      4    1911
                                              8 COMMON     5     1      4
                         _LCD_GoToXY
                    _LCD_PrintString
 ---------------------------------------------------------------------------------
 (3) _LCD_PrintString                                      2     0      2     230
                                              4 COMMON     2     0      2
                      _LCD_PrintChar
 ---------------------------------------------------------------------------------
 (4) _LCD_PrintChar                                        3     3      0     132
                                              1 COMMON     3     3      0
                       _LCD_SendData
 ---------------------------------------------------------------------------------
 (3) _LCD_GoToXY                                           4     3      1     502
                                              4 COMMON     4     3      1
                    _LCD_SendCommand
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                          18    14      4     721
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     3      0     158
                                              4 COMMON     3     3      0
                    _LCD_SendCommand
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     110
                    _LCD_SendCommand
 ---------------------------------------------------------------------------------
 (4) _LCD_SendCommand                                      3     3      0     110
                                              1 COMMON     3     3      0
                       _LCD_SendData
 ---------------------------------------------------------------------------------
 (5) _LCD_SendData                                         1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_SendCommand
       _LCD_SendData
   _LCD_Init
     _LCD_SendCommand
       _LCD_SendData
   _LCD_PrintStringXY
     _LCD_GoToXY
       _LCD_SendCommand
         _LCD_SendData
     _LCD_PrintString
       _LCD_PrintChar
         _LCD_SendData
   _USART_Init
     ___aldiv
   _read_meas
     _Indicate_LCDTemp
       _LCD_PrintStringXY
         _LCD_GoToXY
           _LCD_SendCommand
             _LCD_SendData
         _LCD_PrintString
           _LCD_PrintChar
             _LCD_SendData
       ___lwdiv
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _LCD_PrintStringXY
       _LCD_GoToXY
         _LCD_SendCommand
           _LCD_SendData
       _LCD_PrintString
         _LCD_PrintChar
           _LCD_SendData
     _OneWire_Byte_Read
       _OneWire_Byte_Write
         _OneWire_Bit_IO
     _OneWire_Byte_Write
       _OneWire_Bit_IO
     _Usart_PrintString
       _Transmit_char
     ___lwdiv
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
     _w1_rom_search
       _OneWire_Bit_IO
       _OneWire_Byte_Write
         _OneWire_Bit_IO
       _OneWire_reset
   _start_meas
     _OneWire_command
       _OneWire_Byte_Write
         _OneWire_Bit_IO
       _OneWire_reset
     _Usart_PrintString
       _Transmit_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     3F      3F       7       78.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     48      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      9C      12        0.0%
ABS                  0      0      9C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Apr 26 14:22:25 2018

                ?_LCD_GoToXY 0074                            pc 0002                           l20 0DBA  
                         l21 0DBE                           l15 0DAD                           l16 0DB0  
                         l17 0DB4                           l18 0DB5                           l50 0060  
                         l19 0DB9                           l57 00D7                           fsr 0004  
        ___wmul@multiplicand 0072                          l202 0FD8                          l211 0EC2  
                        l301 0662                          l134 04C6                          l303 063B  
                        l161 03D6                          l314 06B3                          l244 0D50  
                        l309 068B                          l318 06F2                          l423 0E07  
                        l289 05D6                          l478 00EA                          _RC0 0038  
                        fsr0 0004                          indf 0000                _LCD_PrintChar 0E41  
              ?_LCD_SendData 0070                         l2002 010B                         l2020 015E  
                       l2012 0143                         l2004 011B                         l2100 03E1  
                       l2030 0171                         l2032 0173                         l2040 0188  
                       l2016 0150                         l2120 045F                         l2034 0175  
                       l2114 043C                         l2028 016F                         l2108 040B  
                       l2038 017A                         l2150 04D4                         l2134 0497  
                       l2206 0F66                         l2064 02C6                         l1600 00C9  
                       l2128 046F                         l2170 0536                         l2154 04DC  
                       l2146 04C9                         l2090 0D9E                         l1630 0011  
                       l2174 053E                         l2166 0529                         l2158 04E3  
                       l2190 0594                         l1712 05DB                         l1608 0DCB  
                       l2192 059D                         l1810 0769                         l1802 0755  
                       l1714 05E8                         l2178 0545                         l1580 007E  
                       l1660 0029                         l1636 0DFF                         l1812 079B  
                       l1820 07CF                         l1740 067E                         l1708 05D2  
                       l1900 0F9A                         l2188 058A                         l1574 0065  
                       l1566 0058                         l1558 0E1E                         l1670 004A  
                       l1718 05FC                         l1592 00B0                         l1824 07DA  
                       l1808 0764                         l1728 063F                         l1586 0097  
                       l1666 003F                         l1658 001B                         l1682 0ECD  
                       l1826 05AC                         l1834 0DE2                         l1906 0FA7  
                       l1684 0EDB                         l1692 0EF4                         l1828 07EB  
                       l1908 0FAB                         l1766 06DB                         l1862 0F2C  
                       l1918 0FC6                         l1688 0EE9                         l1776 0711  
                       l1768 06E4                         l1952 02E4                         l1936 0FF1  
                       l1928 0FDE                         l1786 0726                         l1794 073C  
                       l1778 0715                         l1796 0740                         l1972 037C  
                       l1964 034B                         l1892 0E6E                         l1884 0EBC  
                       l1966 0356                         l1958 030A                         l1982 03CC  
                       l1878 0EAA                         l1994 00FB                         l1978 03BD  
                       STR_1 0918                         STR_2 0883                         STR_3 08FC  
                       STR_4 0895                         STR_5 08EC                         STR_6 0871  
                       STR_7 08DC                         STR_8 090C                         STR_9 08EC  
                       _BRGH 04C2                         _CREN 00C4                         u2005 011D  
                       u2110 02A7                         u2015 0132                         u2111 02A8  
                       u1215 0E48                         u2112 02AD                         u2025 0144  
                       u2113 02AE                         u2105 028D                         u1405 002A  
                       u2070 023E                         u2071 023F                         u2055 0203  
                       u1255 006D                         u1415 0036                         u2072 0244  
                       u2073 0245                         u2065 0224                         u1265 0086  
                       u1425 0040                         u1345 0E08                         u1275 009F  
                       u1355 0E0F                         u2235 04CE                         u1285 00B8  
                       u2317 0F5B                         u2407 018C                         u2095 026C  
                       u1455 0ED0                         u2327 0F73                         u2417 0199  
                       u1385 001E                         u2337 0F86                         u2427 01A4  
                       u1475 0EE1                         u1635 0701                         u2347 0F01  
                       u2275 0530                         u2437 01AF                         u1485 0EEA  
                       u1565 06AC                         u2357 0F0B                         u2447 01BA  
                       u2367 0F22                         u2457 0D88                         u2377 0DCD  
                       u1754 0F18                         u1595 06D4                         u2387 0DD5  
                       u1755 0F16                         u2397 0E66                         u1985 010F  
                       _RCIF 0065                         _SPEN 00C7                         _ZNAK 006E  
                       _TRMT 04C1                         _TXEN 04C5                         _SYNC 04C4  
                LCD_GoToXY@x 0076                  LCD_GoToXY@y 0074                         _main 0F2E  
         __size_of_LCD_Clear 000B                         _temp 006C                         btemp 007E  
                       start 0000              _LCD_SendCommand 0D76                  LCD_Init@lcd 0076  
              _w1_rom_search 0F8D             __end_of_LCD_Init 01F8              __end_of___aldiv 0167  
                      ?_main 0070                        STR_10 0871                        STR_11 092A  
                      STR_12 0924                        STR_20 08CB                        STR_13 0838  
                      STR_14 0824                        STR_15 0882                        STR_16 084B  
                      STR_17 085E                        STR_18 08A7                        STR_19 08B9  
            __end_of___lwdiv 004F              __end_of___lwmod 0EF9                        _RCREG 001A  
                      _SPBRG 0099                        _PORTC 0007                        _TRISB 0086  
                      _TXREG 0019               ?_LCD_PrintChar 0070               ??_LCD_SendData 0070  
                      _Tvnyt 0068              __end_of_dpowers 081C              __end_of_isdigit 0013  
        __size_of_LCD_GoToXY 0089                        pclath 000A              ??_Transmit_char 0070  
                      status 0003                        wtemp0 007E              __end_of_sprintf 07F2  
            _OneWire_command 0E97                  ?_USART_Init 0026               ?_w1_rom_search 0079  
            __initialization 07F2                 __end_of_main 0F8D                       ??_main 0065  
          __end_of_LCD_Clear 0D64              _LCD_PrintString 0E1E  __size_of_OneWire_Byte_Write 0020  
          ?_Indicate_LCDTemp 0033      __end_of_LCD_SendCommand 0D8E           ??_Indicate_LCDTemp 0034  
     __size_of_OneWire_reset 0035                       _TRISB0 0430                       _TRISB1 0431  
                     _TRISB2 0432                       _TRISC0 0438                       _TRISC6 043E  
                     _TRISC7 043F           LCD_PrintStringXY@x 007A           LCD_PrintStringXY@y 007B  
         LCD_PrintString@str 0074                       _Tvnesh 006A                    ??___aldiv 0078  
                     ___wmul 0DFD                    ??___lwdiv 0074                    ??___lwmod 007C  
      Usart_PrintString@Text 0071            _Usart_PrintString 0E6C              ??_LCD_PrintChar 0071  
                  ??_isdigit 0070           ?_Usart_PrintString 0071          __size_of_USART_Init 00E8  
                read_meas@id 0058                    ??_sprintf 0026      __end_of_OneWire_command 0EC7  
        ??_Usart_PrintString 0073      __end_of__initialization 07FC                    ?_LCD_Init 0070  
            OneWire_Bit_IO@b 0071              ??_w1_rom_search 007A               __pcstackCOMMON 0070  
               ??_LCD_GoToXY 0075         __end_of_LCD_SendData 0DC0                 __pidataBANK0 0004  
    __end_of_LCD_PrintString 0E41    __end_of_Usart_PrintString 0E97                _OneWire_reset 0EF9  
               sprintf@width 002F           __end_of_LCD_GoToXY 00D8                   __pbssBANK0 0068  
           ?_LCD_SendCommand 0070                   ??_LCD_Init 0074                _read_meas$737 0060  
         __size_of_read_meas 01CE                   __pmaintext 0F2E            OneWire_command@id 0079  
                    ?___wmul 0070      __size_of_OneWire_Bit_IO 001D               ?_OneWire_reset 0070  
           LCD_SendData@data 0070                   __stringtab 0800             ?_OneWire_command 0079  
          _OneWire_Byte_Read 0D46                 ??_USART_Init 002A               LCD_GoToXY@temp 0077  
         ?_OneWire_Byte_Read 0079                      ___aldiv 00D8              __size_of___wmul 0021  
                    ___lwdiv 0013                      ___lwmod 0EC7             ?_LCD_PrintString 0074  
 __size_of_Usart_PrintString 002B          ??_OneWire_Byte_Read 007B                      __ptext1 0D8E  
                    __ptext2 0E97                      __ptext3 03D7                      __ptext4 0F8D  
                    __ptext5 0EF9                      __ptext6 0E6C                      __ptext7 0D4F  
                    __ptext8 0D46                      __ptext9 0DDD               USART_Init@baud 0026  
        OneWire_Byte_Write@b 0078          OneWire_Byte_Write@i 0076          OneWire_Byte_Write@j 0077  
          __end_of_hexpowers 0824                      _dpowers 0812                      _isdigit 0005  
          __end_of_read_meas 05A5             ___aldiv@dividend 0074                    _LCD_Clear 0D59  
         __end_of_USART_Init 02E0                      _sprintf 05A5         end_of_initialization 07FC  
  __end_of_OneWire_Byte_Read 0D4F        __end_of_Transmit_char 0D59        __size_of_LCD_SendData 001A  
  __size_of_Indicate_LCDTemp 00F7             ___aldiv@quotient 0022              ??_OneWire_reset 0070  
               __pstringtext 0800                    _PORTBbits 0006                    _PORTCbits 0007  
 __end_of_OneWire_Byte_Write 0DFD                   ?_LCD_Clear 0070                 _LCD_SendData 0DA6  
                 _start_meas 0D8E           Usart_PrintString@i 0074            __size_of_LCD_Init 0091  
             _OneWire_Bit_IO 0DC0               __end_of___wmul 0E1E            w1_rom_search@diff 0022  
     w1_rom_search@next_diff 0021                  USART_Init@x 0079          start_initialization 07F2  
      __end_of_LCD_PrintChar 0E6C   __size_of_OneWire_Byte_Read 0009        __end_of_w1_rom_search 1000  
     __end_of_OneWire_Bit_IO 0DDD                     ??___wmul 0074           LCD_SendCommand@com 0073  
                __pdataBANK0 006E                   read_meas@i 0062                   read_meas@s 0038  
                  ___latbits 0002                __pcstackBANK0 0020                __pcstackBANK1 00A0  
                ??_LCD_Clear 0074              w1_rom_search@id 0079            _LCD_PrintStringXY 0D64  
                ?_start_meas 0070           ?_LCD_PrintStringXY 0078                  sprintf@flag 002E  
                sprintf@prec 002B     Indicate_LCDTemp@bufferVn 00A0          ??_LCD_PrintStringXY 007C  
           ___lwdiv@dividend 0072     __size_of_LCD_SendCommand 0018             _Indicate_LCDTemp 02E0  
            ?_OneWire_Bit_IO 0070             OneWire_command@i 007C                     ?___aldiv 0070  
                   ?___lwdiv 0070                     ?___lwmod 0078               LCD_PrintChar@c 0073  
                   ?_isdigit 0070         _Indicate_LCDTemp$738 00DD    __end_of_LCD_PrintStringXY 0D76  
                  _hexpowers 081C     Indicate_LCDTemp@znakflag 0033             ___lwdiv@quotient 0075  
                   ?_sprintf 0020                    _read_meas 03D7             OneWire_reset@err 0072  
            ___aldiv@divisor 0070              ___aldiv@counter 0020                     _LCD_Init 0167  
             ___wmul@product 0074     __size_of_OneWire_command 0030          __size_of_start_meas 0018  
                __stringbase 0812            ___wmul@multiplier 0070     __size_of_LCD_PrintString 0023  
                 ?_read_meas 0070           _OneWire_Byte_Write 0DDD         LCD_PrintStringXY@str 0078  
        ?_OneWire_Byte_Write 0072             __size_of___aldiv 008F        __end_of_OneWire_reset 0F2E  
           __size_of___lwdiv 003C             __size_of___lwmod 0032            ??_LCD_SendCommand 0071  
             w1_rom_search@b 0024               w1_rom_search@i 0023               w1_rom_search@j 0020  
         __end_of__stringtab 0812                  _isdigit$506 0070                   sprintf@idx 0029  
                 sprintf@val 002C       __size_of_Transmit_char 000A   __size_of_LCD_PrintStringXY 0012  
           __size_of_isdigit 000E   Indicate_LCDTemp@bufferVnyt 00BE         ??_OneWire_Byte_Write 0074  
            ___lwdiv@divisor 0070              ___lwdiv@counter 0077                     __ptext10 0DC0  
                   __ptext11 02E0                     __ptext20 004F                     __ptext12 05A5  
                   __ptext21 01F8                     __ptext13 0005                     __ptext22 00D8  
                   __ptext14 0DFD                     __ptext23 0167                     __ptext15 0EC7  
                   __ptext24 0D59                     __ptext16 0013                     __ptext25 0D76  
                   __ptext17 0D64                     __ptext26 0DA6                     __ptext18 0E1E  
                   __ptext19 0E41             __size_of_sprintf 024D       OneWire_command@command 007B  
              __size_of_main 005F                   _LCD_GoToXY 004F               read_meas@count 0064  
          ??_OneWire_command 007A                     isdigit@c 0071     __end_of_Indicate_LCDTemp 03D7  
                ??_read_meas 0036                 ??_start_meas 007D                    sprintf@ap 002A  
                  sprintf@sp 0031            ??_LCD_PrintString 0076             ___lwmod@dividend 007A  
           ??_OneWire_Bit_IO 0070                _Transmit_char 0D4F                    stringcode 080A  
     __size_of_LCD_PrintChar 002B                read_meas@diff 0063                read_meas@byte 0056  
         __end_of_start_meas 0DA6                     sprintf@c 0032                     sprintf@f 0020  
            ___lwmod@divisor 0078              ___lwmod@counter 007D                     stringtab 0800  
               ___aldiv@sign 0021            Transmit_char@data 0070       __size_of_w1_rom_search 0073  
       Indicate_LCDTemp@flag 00DC               ?_Transmit_char 0070                   _USART_Init 01F8  
