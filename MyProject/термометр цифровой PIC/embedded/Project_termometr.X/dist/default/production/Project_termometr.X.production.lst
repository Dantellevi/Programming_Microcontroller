

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Apr 26 10:47:38 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F631
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	swtext1,local,class=CONST,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	swtext2,local,class=CONST,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 1.45
    37                           ; Generated 16/11/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F631 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0095                     	;# 
    96  0095                     	;# 
    97  0096                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  010C                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  0115                     	;# 
   104  0116                     	;# 
   105  0118                     	;# 
   106  0119                     	;# 
   107  011A                     	;# 
   108  011B                     	;# 
   109  011E                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  019E                     	;# 
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  000E                     	;# 
   127  000F                     	;# 
   128  0010                     	;# 
   129  0081                     	;# 
   130  0085                     	;# 
   131  0086                     	;# 
   132  0087                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  008F                     	;# 
   137  0090                     	;# 
   138  0095                     	;# 
   139  0095                     	;# 
   140  0096                     	;# 
   141  0096                     	;# 
   142  0097                     	;# 
   143  010C                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  0115                     	;# 
   147  0116                     	;# 
   148  0118                     	;# 
   149  0119                     	;# 
   150  011A                     	;# 
   151  011B                     	;# 
   152  011E                     	;# 
   153  018C                     	;# 
   154  018D                     	;# 
   155  019E                     	;# 
   156  0000                     	;# 
   157  0001                     	;# 
   158  0002                     	;# 
   159  0003                     	;# 
   160  0004                     	;# 
   161  0005                     	;# 
   162  0006                     	;# 
   163  0007                     	;# 
   164  000A                     	;# 
   165  000B                     	;# 
   166  000C                     	;# 
   167  000D                     	;# 
   168  000E                     	;# 
   169  000E                     	;# 
   170  000F                     	;# 
   171  0010                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0095                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  010C                     	;# 
   187  010C                     	;# 
   188  010D                     	;# 
   189  0115                     	;# 
   190  0116                     	;# 
   191  0118                     	;# 
   192  0119                     	;# 
   193  011A                     	;# 
   194  011B                     	;# 
   195  011E                     	;# 
   196  018C                     	;# 
   197  018D                     	;# 
   198  019E                     	;# 
   199  0000                     	;# 
   200  0001                     	;# 
   201  0002                     	;# 
   202  0003                     	;# 
   203  0004                     	;# 
   204  0005                     	;# 
   205  0006                     	;# 
   206  0007                     	;# 
   207  000A                     	;# 
   208  000B                     	;# 
   209  000C                     	;# 
   210  000D                     	;# 
   211  000E                     	;# 
   212  000E                     	;# 
   213  000F                     	;# 
   214  0010                     	;# 
   215  0081                     	;# 
   216  0085                     	;# 
   217  0086                     	;# 
   218  0087                     	;# 
   219  008C                     	;# 
   220  008D                     	;# 
   221  008E                     	;# 
   222  008F                     	;# 
   223  0090                     	;# 
   224  0095                     	;# 
   225  0095                     	;# 
   226  0096                     	;# 
   227  0096                     	;# 
   228  0097                     	;# 
   229  010C                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  0115                     	;# 
   233  0116                     	;# 
   234  0118                     	;# 
   235  0119                     	;# 
   236  011A                     	;# 
   237  011B                     	;# 
   238  011E                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  019E                     	;# 
   242                           
   243                           	psect	idataBANK0
   244  00AA                     __pidataBANK0:	
   245                           
   246                           ;initializer for _ZNAK
   247  00AA  3401               	retlw	1
   248  0007                     _PORTCbits	set	7
   249  0005                     _PORTAbits	set	5
   250  0006                     _PORTBbits	set	6
   251  0038                     _RC0	set	56
   252  0086                     _TRISB	set	134
   253  0438                     _TRISC0	set	1080
   254  042A                     _TRISA2	set	1066
   255  0429                     _TRISA1	set	1065
   256  0428                     _TRISA0	set	1064
   257                           
   258                           	psect	strings
   259  0001                     __pstrings:	
   260  0001                     stringtab:	
   261  0001                     __stringtab:	
   262                           
   263                           ;	String table - string pointers are 1 byte each
   264  0001  1BFF               	btfsc	btemp+1,7
   265  0002  280B               	ljmp	stringcode
   266  0003  1383               	bcf	3,7
   267  0004  187F               	btfsc	btemp+1,0
   268  0005  1783               	bsf	3,7
   269  0006  0800               	movf	0,w
   270  0007  0A84               	incf	4,f
   271  0008  1903               	skipnz
   272  0009  0AFF               	incf	btemp+1,f
   273  000A  0008               	return
   274  000B                     stringcode:	
   275  000B                     stringdir:	
   276  000B  3000               	movlw	high stringdir
   277  000C  008A               	movwf	10
   278  000D  0804               	movf	4,w
   279  000E  0A84               	incf	4,f
   280  000F  0782               	addwf	2,f
   281  0010                     __stringbase:	
   282  0010  3400               	retlw	0
   283  0011                     __end_of__stringtab:	
   284  0011                     STR_1:	
   285  0011  3420               	retlw	32	;' '
   286  0012  342B               	retlw	43	;'+'
   287  0013  3400               	retlw	0
   288  0014                     STR_2:	
   289  0014  3420               	retlw	32	;' '
   290  0015  342D               	retlw	45	;'-'
   291  0016  3400               	retlw	0
   292                           
   293                           ; #config settings
   294  0000                     
   295                           	psect	cinit
   296  03FA                     start_initialization:	
   297  03FA                     __initialization:	
   298                           
   299                           ; Initialize objects allocated to BANK0
   300  03FA  20AA               	fcall	__pidataBANK0	;fetch initializer
   301  03FB  00ED               	movwf	__pdataBANK0& (0+127)
   302                           
   303                           ; Clear objects allocated to BANK0
   304  03FC  01EB               	clrf	__pbssBANK0& (0+127)
   305  03FD  01EC               	clrf	(__pbssBANK0+1)& (0+127)
   306  03FE                     end_of_initialization:	
   307                           ;End of C runtime variable initialization code
   308                           
   309  03FE                     __end_of__initialization:	
   310  03FE  0183               	clrf	3
   311  03FF  29B8               	ljmp	_main	;jump to C main() function
   312                           
   313                           	psect	bssBANK0
   314  006B                     __pbssBANK0:	
   315  006B                     _temp:	
   316  006B                     	ds	2
   317                           
   318                           	psect	dataBANK0
   319  006D                     __pdataBANK0:	
   320  006D                     _ZNAK:	
   321  006D                     	ds	1
   322                           
   323                           	psect	cstackCOMMON
   324  0070                     __pcstackCOMMON:	
   325  0070                     ?_LCD_Init:	
   326  0070                     ?_LCD_Clear:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_Start_Meas:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_Read_Meas:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_GetZnak:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ??_GetZnak:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_main:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_LCD_SendData:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ??_LCD_SendData:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_LCD_SendCommand:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_LCD_PrintChar:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_oneWire_Reset:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ??_oneWire_Reset:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_OneWire_bit_IO:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ??_OneWire_bit_IO:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_GetTempS:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?___lwdiv:	
   372                           ; 2 bytes @ 0x0
   373                           
   374  0070                     LCD_SendData@data:	
   375                           ; 2 bytes @ 0x0
   376                           
   377  0070                     ___lwdiv@divisor:	
   378                           ; 1 bytes @ 0x0
   379                           
   380                           
   381                           ; 2 bytes @ 0x0
   382  0070                     	ds	1
   383  0071                     ??_LCD_SendCommand:	
   384  0071                     ??_LCD_PrintChar:	
   385                           ; 1 bytes @ 0x1
   386                           
   387  0071                     oneWire_Reset@err:	
   388                           ; 1 bytes @ 0x1
   389                           
   390  0071                     OneWire_bit_IO@b:	
   391                           ; 1 bytes @ 0x1
   392                           
   393                           
   394                           ; 1 bytes @ 0x1
   395  0071                     	ds	1
   396  0072                     ??_GetTempS:	
   397  0072                     ?_OneWire_byte_WR:	
   398                           ; 1 bytes @ 0x2
   399                           
   400  0072                     ___lwdiv@dividend:	
   401                           ; 2 bytes @ 0x2
   402                           
   403                           
   404                           ; 2 bytes @ 0x2
   405  0072                     	ds	1
   406  0073                     LCD_SendCommand@com:	
   407  0073                     LCD_PrintChar@c:	
   408                           ; 1 bytes @ 0x3
   409                           
   410                           
   411                           ; 1 bytes @ 0x3
   412  0073                     	ds	1
   413  0074                     ??_LCD_Init:	
   414  0074                     ??_LCD_Clear:	
   415                           ; 1 bytes @ 0x4
   416                           
   417  0074                     ?_LCD_PrintString:	
   418                           ; 1 bytes @ 0x4
   419                           
   420  0074                     ?_LCD_GoToXY:	
   421                           ; 1 bytes @ 0x4
   422                           
   423  0074                     ??_OneWire_byte_WR:	
   424                           ; 1 bytes @ 0x4
   425                           
   426  0074                     ??___lwdiv:	
   427                           ; 1 bytes @ 0x4
   428                           
   429  0074                     LCD_GoToXY@y:	
   430                           ; 1 bytes @ 0x4
   431                           
   432  0074                     LCD_PrintString@str:	
   433                           ; 1 bytes @ 0x4
   434                           
   435                           
   436                           ; 2 bytes @ 0x4
   437  0074                     	ds	1
   438  0075                     ??_LCD_GoToXY:	
   439  0075                     ___lwdiv@quotient:	
   440                           ; 1 bytes @ 0x5
   441                           
   442                           
   443                           ; 2 bytes @ 0x5
   444  0075                     	ds	1
   445  0076                     ??_LCD_PrintString:	
   446  0076                     LCD_Init@lcd:	
   447                           ; 1 bytes @ 0x6
   448                           
   449  0076                     LCD_GoToXY@x:	
   450                           ; 1 bytes @ 0x6
   451                           
   452  0076                     OneWire_byte_WR@i:	
   453                           ; 1 bytes @ 0x6
   454                           
   455                           
   456                           ; 1 bytes @ 0x6
   457  0076                     	ds	1
   458  0077                     LCD_GoToXY@temp:	
   459  0077                     OneWire_byte_WR@j:	
   460                           ; 1 bytes @ 0x7
   461                           
   462  0077                     ___lwdiv@counter:	
   463                           ; 1 bytes @ 0x7
   464                           
   465                           
   466                           ; 1 bytes @ 0x7
   467  0077                     	ds	1
   468  0078                     ?_LCD_PrintStringXY:	
   469  0078                     ?_GetTempM:	
   470                           ; 1 bytes @ 0x8
   471                           
   472  0078                     OneWire_byte_WR@b:	
   473                           ; 2 bytes @ 0x8
   474                           
   475  0078                     LCD_PrintStringXY@str:	
   476                           ; 1 bytes @ 0x8
   477                           
   478                           
   479                           ; 2 bytes @ 0x8
   480  0078                     	ds	1
   481  0079                     ?_OneWire_ROM_Search:	
   482  0079                     ?_OneWire_Command:	
   483                           ; 1 bytes @ 0x9
   484                           
   485  0079                     ?_OneWire_Byte_RD:	
   486                           ; 1 bytes @ 0x9
   487                           
   488  0079                     OneWire_ROM_Search@id:	
   489                           ; 2 bytes @ 0x9
   490                           
   491  0079                     OneWire_Command@id:	
   492                           ; 1 bytes @ 0x9
   493                           
   494                           
   495                           ; 1 bytes @ 0x9
   496  0079                     	ds	1
   497  007A                     ??_GetTempM:	
   498  007A                     ??_OneWire_ROM_Search:	
   499                           ; 1 bytes @ 0xA
   500                           
   501  007A                     ??_OneWire_Command:	
   502                           ; 1 bytes @ 0xA
   503                           
   504  007A                     LCD_PrintStringXY@x:	
   505                           ; 1 bytes @ 0xA
   506                           
   507                           
   508                           ; 1 bytes @ 0xA
   509  007A                     	ds	1
   510  007B                     ??_OneWire_Byte_RD:	
   511  007B                     LCD_PrintStringXY@y:	
   512                           ; 1 bytes @ 0xB
   513                           
   514  007B                     OneWire_Command@command:	
   515                           ; 1 bytes @ 0xB
   516                           
   517                           
   518                           ; 1 bytes @ 0xB
   519  007B                     	ds	1
   520  007C                     ??_LCD_PrintStringXY:	
   521  007C                     OneWire_Command@i:	
   522                           ; 1 bytes @ 0xC
   523                           
   524                           
   525                           ; 1 bytes @ 0xC
   526  007C                     	ds	1
   527  007D                     ??_Start_Meas:	
   528  007D                     ??_main:	
   529                           ; 1 bytes @ 0xD
   530                           
   531                           
   532                           	psect	cstackBANK0
   533  0040                     __pcstackBANK0:	
   534                           ; 1 bytes @ 0xD
   535                           
   536  0040                     OneWire_ROM_Search@j:	
   537                           
   538                           ; 1 bytes @ 0x0
   539  0040                     	ds	1
   540  0041                     OneWire_ROM_Search@next_diff:	
   541                           
   542                           ; 1 bytes @ 0x1
   543  0041                     	ds	1
   544  0042                     OneWire_ROM_Search@diff:	
   545                           
   546                           ; 1 bytes @ 0x2
   547  0042                     	ds	1
   548  0043                     OneWire_ROM_Search@i:	
   549                           
   550                           ; 1 bytes @ 0x3
   551  0043                     	ds	1
   552  0044                     OneWire_ROM_Search@b:	
   553                           
   554                           ; 1 bytes @ 0x4
   555  0044                     	ds	1
   556  0045                     ??_Read_Meas:	
   557                           
   558                           ; 1 bytes @ 0x5
   559  0045                     	ds	2
   560  0047                     Read_Meas@s:	
   561                           
   562                           ; 20 bytes @ 0x7
   563  0047                     	ds	20
   564  005B                     Read_Meas@id:	
   565                           
   566                           ; 8 bytes @ 0x1B
   567  005B                     	ds	8
   568  0063                     Read_Meas@byte:	
   569                           
   570                           ; 2 bytes @ 0x23
   571  0063                     	ds	2
   572  0065                     Read_Meas@i:	
   573                           
   574                           ; 1 bytes @ 0x25
   575  0065                     	ds	1
   576  0066                     Read_Meas@diff:	
   577                           
   578                           ; 1 bytes @ 0x26
   579  0066                     	ds	1
   580  0067                     main@TempS:	
   581                           
   582                           ; 2 bytes @ 0x27
   583  0067                     	ds	2
   584  0069                     main@TempM:	
   585                           
   586                           ; 2 bytes @ 0x29
   587  0069                     	ds	2
   588                           
   589                           	psect	maintext
   590  01B8                     __pmaintext:	
   591 ;;
   592 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   593 ;;
   594 ;; *************** function _main *****************
   595 ;; Defined at:
   596 ;;		line 4 in file "main.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;		None
   599 ;; Auto vars:     Size  Location     Type
   600 ;;  TempM           2   41[BANK0 ] unsigned int 
   601 ;;  TempS           2   39[BANK0 ] unsigned int 
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      void 
   604 ;; Registers used:
   605 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   606 ;; Tracked objects:
   607 ;;		On entry : B00/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMMON   BANK0
   611 ;;      Params:         0       0
   612 ;;      Locals:         0       4
   613 ;;      Temps:          0       0
   614 ;;      Totals:         0       4
   615 ;;Total ram usage:        4 bytes
   616 ;; Hardware stack levels required when called:    5
   617 ;; This function calls:
   618 ;;		_GetTempM
   619 ;;		_GetTempS
   620 ;;		_GetZnak
   621 ;;		_LCD_Clear
   622 ;;		_LCD_Init
   623 ;;		_LCD_PrintStringXY
   624 ;;		_Read_Meas
   625 ;;		_Start_Meas
   626 ;; This function is called by:
   627 ;;		Startup code after reset
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           
   632                           ;psect for function _main
   633  01B8                     _main:	
   634                           
   635                           ;main.c: 6: LCD_Init(0);
   636                           
   637                           ;incstack = 0
   638                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   639  01B8  3000               	movlw	0
   640  01B9  2246               	fcall	_LCD_Init
   641                           
   642                           ;main.c: 7: LCD_Clear();
   643  01BA  20AF               	fcall	_LCD_Clear
   644                           
   645                           ;main.c: 9: uint16_t TempS;
   646                           ;main.c: 10: uint16_t TempM;
   647                           ;main.c: 11: Start_Meas();
   648  01BB  20D3               	fcall	_Start_Meas
   649  01BC  29C4               	goto	l1452
   650  01BD                     l1460:	
   651                           
   652                           ;main.c: 20: {
   653                           ;main.c: 22: LCD_PrintStringXY(" +",0,0);
   654  01BD  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   655  01BE                     L1:	
   656  01BE  00F8               	movwf	LCD_PrintStringXY@str
   657  01BF  3080               	movlw	128
   658  01C0  00F9               	movwf	LCD_PrintStringXY@str+1
   659  01C1  01FA               	clrf	LCD_PrintStringXY@x
   660  01C2  01FB               	clrf	LCD_PrintStringXY@y
   661  01C3  20C7               	fcall	_LCD_PrintStringXY
   662  01C4                     l1452:	
   663                           ;main.c: 12: while(1)
   664                           
   665                           ;main.c: 23: }
   666                           
   667                           
   668                           ;main.c: 13: {
   669                           ;main.c: 15: Read_Meas();
   670  01C4  236B               	fcall	_Read_Meas
   671                           
   672                           ;main.c: 16: TempS=GetTempS();
   673  01C5  20BB               	fcall	_GetTempS
   674  01C6  0871               	movf	?_GetTempS+1,w
   675  01C7  1283               	bcf	3,5	;RP0=0, select bank0
   676  01C8  1303               	bcf	3,6	;RP1=0, select bank0
   677  01C9  00E8               	movwf	main@TempS+1
   678  01CA  0870               	movf	?_GetTempS,w
   679  01CB  00E7               	movwf	main@TempS
   680                           
   681                           ;main.c: 17: TempM=GetTempM();
   682  01CC  210C               	fcall	_GetTempM
   683  01CD  0879               	movf	?_GetTempM+1,w
   684  01CE  1283               	bcf	3,5	;RP0=0, select bank0
   685  01CF  1303               	bcf	3,6	;RP1=0, select bank0
   686  01D0  00EA               	movwf	main@TempM+1
   687  01D1  0878               	movf	?_GetTempM,w
   688  01D2  00E9               	movwf	main@TempM
   689                           
   690                           ;main.c: 19: if(GetZnak()==1)
   691  01D3  20AB               	fcall	_GetZnak
   692  01D4  3A01               	xorlw	1
   693  01D5  1903               	btfsc	3,2
   694  01D6  29BD               	goto	l1460
   695                           
   696                           ;main.c: 24: else if(GetZnak()==0)
   697  01D7  20AB               	fcall	_GetZnak
   698  01D8  3A00               	xorlw	0
   699  01D9  1D03               	skipz
   700  01DA  29C4               	goto	l1452
   701                           
   702                           ;main.c: 25: {
   703                           ;main.c: 27: LCD_PrintStringXY(" -",0,0);
   704  01DB  3004               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   705  01DC  29BE               	goto	L1
   706  01DD                     __end_of_main:	
   707                           
   708                           	psect	text1
   709  00D3                     __ptext1:	
   710 ;; *************** function _Start_Meas *****************
   711 ;; Defined at:
   712 ;;		line 15 in file "DS18B20.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;		None
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMMON   BANK0
   726 ;;      Params:         0       0
   727 ;;      Locals:         0       0
   728 ;;      Temps:          0       0
   729 ;;      Totals:         0       0
   730 ;;Total ram usage:        0 bytes
   731 ;; Hardware stack levels used:    1
   732 ;; Hardware stack levels required when called:    3
   733 ;; This function calls:
   734 ;;		_OneWire_Command
   735 ;; This function is called by:
   736 ;;		_main
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           
   741                           ;psect for function _Start_Meas
   742  00D3                     _Start_Meas:	
   743                           
   744                           ;DS18B20.c: 17: if(RC0)
   745                           
   746                           ;incstack = 0
   747                           ; Regs used in _Start_Meas: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   748  00D3  1283               	bcf	3,5	;RP0=0, select bank0
   749  00D4  1303               	bcf	3,6	;RP1=0, select bank0
   750  00D5  1C07               	btfss	7,0	;volatile
   751  00D6  0008               	return
   752                           
   753                           ;DS18B20.c: 18: {
   754                           ;DS18B20.c: 19: OneWire_Command(0x44,(0));
   755  00D7  01F9               	clrf	OneWire_Command@id
   756  00D8  3044               	movlw	68
   757  00D9  2177               	fcall	_OneWire_Command
   758                           
   759                           ;DS18B20.c: 20: PORTCbits.RC0=1;
   760  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   761  00DB  1303               	bcf	3,6	;RP1=0, select bank0
   762  00DC  1407               	bsf	7,0	;volatile
   763                           
   764                           ;DS18B20.c: 21: TRISC0=0;
   765  00DD  1683               	bsf	3,5	;RP0=1, select bank1
   766  00DE  1303               	bcf	3,6	;RP1=0, select bank1
   767  00DF  1007               	bcf	7,0	;volatile
   768                           
   769                           ;DS18B20.c: 23: }
   770  00E0  0008               	return
   771  00E1                     __end_of_Start_Meas:	
   772                           ;DS18B20.c: 24: else
   773                           ;DS18B20.c: 25: {
   774                           
   775                           
   776                           	psect	text2
   777  0177                     __ptext2:	
   778 ;; *************** function _OneWire_Command *****************
   779 ;; Defined at:
   780 ;;		line 136 in file "OneWire.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;  command         1    wreg     unsigned char 
   783 ;;  id              1    9[COMMON] PTR unsigned char 
   784 ;;		 -> NULL(0), 
   785 ;; Auto vars:     Size  Location     Type
   786 ;;  command         1   11[COMMON] unsigned char 
   787 ;;  i               1   12[COMMON] unsigned char 
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMMON   BANK0
   797 ;;      Params:         1       0
   798 ;;      Locals:         2       0
   799 ;;      Temps:          1       0
   800 ;;      Totals:         4       0
   801 ;;Total ram usage:        4 bytes
   802 ;; Hardware stack levels used:    1
   803 ;; Hardware stack levels required when called:    2
   804 ;; This function calls:
   805 ;;		_OneWire_byte_WR
   806 ;;		_oneWire_Reset
   807 ;; This function is called by:
   808 ;;		_Start_Meas
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           
   813                           ;psect for function _OneWire_Command
   814  0177                     _OneWire_Command:	
   815                           
   816                           ;incstack = 0
   817                           ; Regs used in _OneWire_Command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   818                           ;OneWire_Command@command stored from wreg
   819  0177  00FB               	movwf	OneWire_Command@command
   820                           
   821                           ;OneWire.c: 138: uint8_t i;
   822                           ;OneWire.c: 139: oneWire_Reset();
   823  0178  21DD               	fcall	_oneWire_Reset
   824                           
   825                           ;OneWire.c: 140: if(id)
   826  0179  0879               	movf	OneWire_Command@id,w
   827  017A  1903               	btfsc	3,2
   828  017B  2990               	goto	l1302
   829                           
   830                           ;OneWire.c: 141: {
   831                           ;OneWire.c: 142: OneWire_byte_WR(0x55);
   832  017C  3055               	movlw	85
   833  017D  213E               	fcall	_OneWire_byte_WR
   834                           
   835                           ;OneWire.c: 143: i=8;
   836  017E  3008               	movlw	8
   837  017F  00FA               	movwf	??_OneWire_Command
   838  0180  087A               	movf	??_OneWire_Command,w
   839  0181  00FC               	movwf	OneWire_Command@i
   840  0182                     l1296:	
   841                           ;OneWire.c: 144: do
   842                           
   843                           
   844                           ;OneWire.c: 145: {
   845                           ;OneWire.c: 146: OneWire_byte_WR(*id);
   846  0182  0879               	movf	OneWire_Command@id,w
   847  0183  0084               	movwf	4
   848  0184  1383               	bcf	3,7	;select IRP bank0
   849  0185  0800               	movf	0,w
   850  0186  213E               	fcall	_OneWire_byte_WR
   851                           
   852                           ;OneWire.c: 147: id++;
   853  0187  3001               	movlw	1
   854  0188  00FA               	movwf	??_OneWire_Command
   855  0189  087A               	movf	??_OneWire_Command,w
   856  018A  07F9               	addwf	OneWire_Command@id,f
   857                           
   858                           ;OneWire.c: 148: }while(--i);
   859  018B  3001               	movlw	1
   860  018C  02FC               	subwf	OneWire_Command@i,f
   861  018D  1903               	btfsc	3,2
   862  018E  2992               	goto	l143
   863  018F  2982               	goto	l1296
   864  0190                     l1302:	
   865                           ;OneWire.c: 149: }
   866                           
   867                           
   868                           ;OneWire.c: 150: else
   869                           ;OneWire.c: 151: {
   870                           ;OneWire.c: 152: OneWire_byte_WR(0xCC);
   871  0190  30CC               	movlw	204
   872  0191  213E               	fcall	_OneWire_byte_WR
   873  0192                     l143:	
   874                           
   875                           ;OneWire.c: 153: }
   876                           ;OneWire.c: 154: OneWire_byte_WR(command);
   877  0192  087B               	movf	OneWire_Command@command,w
   878  0193  213E               	fcall	_OneWire_byte_WR
   879  0194  0008               	return
   880  0195                     __end_of_OneWire_Command:	
   881                           
   882                           	psect	text3
   883  036B                     __ptext3:	
   884 ;; *************** function _Read_Meas *****************
   885 ;; Defined at:
   886 ;;		line 32 in file "DS18B20.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  s              20    7[BANK0 ] unsigned char [20]
   891 ;;  id              8   27[BANK0 ] unsigned char [8]
   892 ;;  byte            2   35[BANK0 ] unsigned char [2]
   893 ;;  diff            1   38[BANK0 ] unsigned char 
   894 ;;  i               1   37[BANK0 ] unsigned char 
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      void 
   897 ;; Registers used:
   898 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMMON   BANK0
   904 ;;      Params:         0       0
   905 ;;      Locals:         0      32
   906 ;;      Temps:          0       2
   907 ;;      Totals:         0      34
   908 ;;Total ram usage:       34 bytes
   909 ;; Hardware stack levels used:    1
   910 ;; Hardware stack levels required when called:    4
   911 ;; This function calls:
   912 ;;		_LCD_PrintStringXY
   913 ;;		_OneWire_Byte_RD
   914 ;;		_OneWire_ROM_Search
   915 ;;		_OneWire_byte_WR
   916 ;; This function is called by:
   917 ;;		_main
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921                           
   922                           ;psect for function _Read_Meas
   923  036B                     _Read_Meas:	
   924                           
   925                           ;DS18B20.c: 34: uint8_t id[8],diff;
   926                           ;DS18B20.c: 35: char s[20];
   927                           ;DS18B20.c: 36: uint8_t byte[2];
   928                           ;DS18B20.c: 37: uint8_t i;
   929                           ;DS18B20.c: 40: for(diff = 0xFF; diff != 0x00; )
   930                           
   931                           ;incstack = 0
   932                           ; Regs used in _Read_Meas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   933  036B  30FF               	movlw	255
   934  036C  1283               	bcf	3,5	;RP0=0, select bank0
   935  036D  1303               	bcf	3,6	;RP1=0, select bank0
   936  036E  00C5               	movwf	??_Read_Meas
   937  036F  0845               	movf	??_Read_Meas,w
   938  0370  00E6               	movwf	Read_Meas@diff
   939  0371                     L2:	
   940  0371  0866               	movf	Read_Meas@diff,w
   941  0372  1903               	btfsc	3,2
   942  0373  0008               	return
   943                           
   944                           ;DS18B20.c: 41: {
   945                           ;DS18B20.c: 42: diff=OneWire_ROM_Search(diff, id);
   946  0374  305B               	movlw	(low (Read_Meas@id| 0))& (0+255)
   947  0375  00C5               	movwf	??_Read_Meas
   948  0376  0845               	movf	??_Read_Meas,w
   949  0377  00F9               	movwf	OneWire_ROM_Search@id
   950  0378  0866               	movf	Read_Meas@diff,w
   951  0379  229E               	fcall	_OneWire_ROM_Search
   952  037A  1283               	bcf	3,5	;RP0=0, select bank0
   953  037B  1303               	bcf	3,6	;RP1=0, select bank0
   954  037C  00C6               	movwf	??_Read_Meas+1
   955  037D  0846               	movf	??_Read_Meas+1,w
   956  037E  00E6               	movwf	Read_Meas@diff
   957                           
   958                           ;DS18B20.c: 43: if( diff == 0xFF )
   959  037F  0A66               	incf	Read_Meas@diff,w
   960  0380  1903               	btfsc	3,2
   961  0381  0008               	return
   962                           
   963                           ;DS18B20.c: 47: }
   964                           ;DS18B20.c: 48: if( diff == 0xFE )
   965                           
   966                           ;DS18B20.c: 44: {
   967                           ;DS18B20.c: 46: break;
   968  0382  30FE               	movlw	254
   969  0383  0666               	xorwf	Read_Meas@diff,w
   970  0384  1903               	btfsc	3,2
   971  0385  0008               	return
   972                           
   973                           ;DS18B20.c: 52: }
   974                           ;DS18B20.c: 55: if(id[0]==0x28 || id[0]==0x10)
   975                           
   976                           ;DS18B20.c: 49: {
   977                           ;DS18B20.c: 51: break;
   978  0386  3028               	movlw	40
   979  0387  065B               	xorwf	Read_Meas@id,w
   980  0388  1903               	btfsc	3,2
   981  0389  2B8E               	goto	l1394
   982  038A  3010               	movlw	16
   983  038B  065B               	xorwf	Read_Meas@id,w
   984  038C  1D03               	btfss	3,2
   985  038D  2BF7               	goto	l1432
   986  038E                     l1394:	
   987                           
   988                           ;DS18B20.c: 56: {
   989                           ;DS18B20.c: 59: for( i = 0; i < 8; i++ )
   990  038E  01E5               	clrf	Read_Meas@i
   991  038F  3008               	movlw	8
   992  0390  0265               	subwf	Read_Meas@i,w
   993  0391  1803               	btfsc	3,0
   994  0392  2B9B               	goto	l1404
   995  0393                     l1400:	
   996                           
   997                           ;DS18B20.c: 60: {
   998  0393  3001               	movlw	1
   999  0394  00C5               	movwf	??_Read_Meas
  1000  0395  0845               	movf	??_Read_Meas,w
  1001  0396  07E5               	addwf	Read_Meas@i,f
  1002  0397  3008               	movlw	8
  1003  0398  0265               	subwf	Read_Meas@i,w
  1004  0399  1C03               	skipc
  1005  039A  2B93               	goto	l1400
  1006  039B                     l1404:	
  1007                           
  1008                           ;DS18B20.c: 63: }
  1009                           ;DS18B20.c: 64: OneWire_byte_WR(0xBE);
  1010  039B  30BE               	movlw	190
  1011  039C  213E               	fcall	_OneWire_byte_WR
  1012                           
  1013                           ;DS18B20.c: 66: temp=OneWire_Byte_RD();
  1014  039D  20B4               	fcall	_OneWire_Byte_RD
  1015  039E  087A               	movf	?_OneWire_Byte_RD+1,w
  1016  039F  1283               	bcf	3,5	;RP0=0, select bank0
  1017  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  1018  03A1  00EC               	movwf	_temp+1
  1019  03A2  0879               	movf	?_OneWire_Byte_RD,w
  1020  03A3  00EB               	movwf	_temp
  1021                           
  1022                           ;DS18B20.c: 67: temp |= (unsigned int)OneWire_Byte_RD() << 8;
  1023  03A4  20B4               	fcall	_OneWire_Byte_RD
  1024  03A5  0879               	movf	?_OneWire_Byte_RD,w
  1025  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  1026  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  1027  03A8  00C6               	movwf	??_Read_Meas+1
  1028  03A9  01C5               	clrf	??_Read_Meas
  1029  03AA  0845               	movf	??_Read_Meas,w
  1030  03AB  04EB               	iorwf	_temp,f
  1031  03AC  0846               	movf	??_Read_Meas+1,w
  1032  03AD  04EC               	iorwf	_temp+1,f
  1033                           
  1034                           ;DS18B20.c: 68: byte[0]=temp>>8;
  1035  03AE  086C               	movf	_temp+1,w
  1036  03AF  00C5               	movwf	??_Read_Meas
  1037  03B0  0845               	movf	??_Read_Meas,w
  1038  03B1  00E3               	movwf	Read_Meas@byte
  1039                           
  1040                           ;DS18B20.c: 70: if (byte[0]&0x80)
  1041  03B2  1FE3               	btfss	Read_Meas@byte,7
  1042  03B3  2BBE               	goto	l181
  1043                           
  1044                           ;DS18B20.c: 71: {
  1045                           ;DS18B20.c: 72: temp=~temp;
  1046  03B4  09EB               	comf	_temp,f
  1047  03B5  09EC               	comf	_temp+1,f
  1048                           
  1049                           ;DS18B20.c: 73: temp+=1;
  1050  03B6  3001               	movlw	1
  1051  03B7  07EB               	addwf	_temp,f
  1052  03B8  1803               	skipnc
  1053  03B9  0AEC               	incf	_temp+1,f
  1054  03BA  3000               	movlw	0
  1055  03BB  07EC               	addwf	_temp+1,f
  1056                           
  1057                           ;DS18B20.c: 74: ZNAK=0;
  1058  03BC  01ED               	clrf	_ZNAK
  1059                           
  1060                           ;DS18B20.c: 75: }
  1061  03BD  2BED               	goto	l1430
  1062  03BE                     l181:	
  1063                           
  1064                           ;DS18B20.c: 76: else
  1065                           ;DS18B20.c: 77: {
  1066                           ;DS18B20.c: 78: ZNAK=1;
  1067  03BE  01ED               	clrf	_ZNAK
  1068  03BF  0AED               	incf	_ZNAK,f
  1069                           
  1070                           ;DS18B20.c: 79: }
  1071                           ;DS18B20.c: 81: switch(ZNAK)
  1072  03C0  2BED               	goto	l1430
  1073  03C1                     l1416:	
  1074                           ;DS18B20.c: 82: {
  1075                           ;DS18B20.c: 83: case 1:
  1076                           
  1077                           
  1078                           ;DS18B20.c: 84: {
  1079                           ;DS18B20.c: 85: if( id[0] == 0x10 )
  1080  03C1  3010               	movlw	16
  1081  03C2  065B               	xorwf	Read_Meas@id,w
  1082  03C3  1D03               	btfss	3,2
  1083  03C4  2BCC               	goto	l1420
  1084                           
  1085                           ;DS18B20.c: 86: temp <<= 3;
  1086  03C5  3003               	movlw	3
  1087  03C6                     u1035:	
  1088  03C6  1003               	clrc
  1089  03C7  0DEB               	rlf	_temp,f
  1090  03C8  0DEC               	rlf	_temp+1,f
  1091  03C9  3EFF               	addlw	-1
  1092  03CA  1D03               	skipz
  1093  03CB  2BC6               	goto	u1035
  1094  03CC                     l1420:	
  1095                           
  1096                           ;DS18B20.c: 91: LCD_PrintStringXY(s,1,1);
  1097  03CC  3047               	movlw	(low (Read_Meas@s| 0))& (0+255)
  1098  03CD  00F8               	movwf	LCD_PrintStringXY@str
  1099  03CE  3000               	movlw	0
  1100  03CF  00F9               	movwf	LCD_PrintStringXY@str+1
  1101  03D0  01FA               	clrf	LCD_PrintStringXY@x
  1102  03D1  0AFA               	incf	LCD_PrintStringXY@x,f
  1103  03D2  01FB               	clrf	LCD_PrintStringXY@y
  1104  03D3  0AFB               	incf	LCD_PrintStringXY@y,f
  1105  03D4  20C7               	fcall	_LCD_PrintStringXY
  1106                           
  1107                           ;DS18B20.c: 92: break;
  1108  03D5  2BF7               	goto	l1432
  1109  03D6                     l1422:	
  1110                           ;DS18B20.c: 93: }
  1111                           ;DS18B20.c: 94: case 0:
  1112                           
  1113                           
  1114                           ;DS18B20.c: 95: {
  1115                           ;DS18B20.c: 96: if( id[0] == 0x10 )
  1116  03D6  3010               	movlw	16
  1117  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  1118  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  1119  03D9  065B               	xorwf	Read_Meas@id,w
  1120  03DA  1D03               	btfss	3,2
  1121  03DB  2BE3               	goto	l1426
  1122                           
  1123                           ;DS18B20.c: 97: temp <<= 3;
  1124  03DC  3003               	movlw	3
  1125  03DD                     u1055:	
  1126  03DD  1003               	clrc
  1127  03DE  0DEB               	rlf	_temp,f
  1128  03DF  0DEC               	rlf	_temp+1,f
  1129  03E0  3EFF               	addlw	-1
  1130  03E1  1D03               	skipz
  1131  03E2  2BDD               	goto	u1055
  1132  03E3                     l1426:	
  1133                           
  1134                           ;DS18B20.c: 102: LCD_PrintStringXY(s,1,1);
  1135  03E3  3047               	movlw	(low (Read_Meas@s| 0))& (0+255)
  1136  03E4  00F8               	movwf	LCD_PrintStringXY@str
  1137  03E5  3000               	movlw	0
  1138  03E6  00F9               	movwf	LCD_PrintStringXY@str+1
  1139  03E7  01FA               	clrf	LCD_PrintStringXY@x
  1140  03E8  0AFA               	incf	LCD_PrintStringXY@x,f
  1141  03E9  01FB               	clrf	LCD_PrintStringXY@y
  1142  03EA  0AFB               	incf	LCD_PrintStringXY@y,f
  1143  03EB  20C7               	fcall	_LCD_PrintStringXY
  1144                           
  1145                           ;DS18B20.c: 104: }
  1146                           ;DS18B20.c: 105: }
  1147                           
  1148                           ;DS18B20.c: 103: break;
  1149  03EC  2BF7               	goto	l1432
  1150  03ED                     l1430:	
  1151  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  1152  03EE  1303               	bcf	3,6	;RP1=0, select bank0
  1153  03EF  086D               	movf	_ZNAK,w
  1154                           
  1155                           ; Switch size 1, requested type "space"
  1156                           ; Number of cases is 2, Range of values is 0 to 1
  1157                           ; switch strategies available:
  1158                           ; Name         Instructions Cycles
  1159                           ; simple_byte            7     4 (average)
  1160                           ; direct_byte            8     6 (fixed)
  1161                           ; jumptable            260     6 (fixed)
  1162                           ;	Chosen strategy is simple_byte
  1163  03F0  3A00               	xorlw	0	; case 0
  1164  03F1  1903               	skipnz
  1165  03F2  2BD6               	goto	l1422
  1166  03F3  3A01               	xorlw	1	; case 1
  1167  03F4  1903               	skipnz
  1168  03F5  2BC1               	goto	l1416
  1169  03F6  2BF7               	goto	l1432
  1170  03F7                     l1432:	
  1171  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  1172  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  1173  03F9  2B71               	goto	L2
  1174  03FA                     __end_of_Read_Meas:	
  1175                           
  1176                           	psect	text4
  1177  029E                     __ptext4:	
  1178 ;; *************** function _OneWire_ROM_Search *****************
  1179 ;; Defined at:
  1180 ;;		line 88 in file "OneWire.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;  diff            1    wreg     unsigned char 
  1183 ;;  id              1    9[COMMON] PTR unsigned char 
  1184 ;;		 -> Read_Meas@id(8), 
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;  diff            1    2[BANK0 ] unsigned char 
  1187 ;;  b               1    4[BANK0 ] unsigned char 
  1188 ;;  i               1    3[BANK0 ] unsigned char 
  1189 ;;  next_diff       1    1[BANK0 ] unsigned char 
  1190 ;;  j               1    0[BANK0 ] unsigned char 
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  1    wreg      unsigned char 
  1193 ;; Registers used:
  1194 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMMON   BANK0
  1200 ;;      Params:         1       0
  1201 ;;      Locals:         0       5
  1202 ;;      Temps:          1       0
  1203 ;;      Totals:         2       5
  1204 ;;Total ram usage:        7 bytes
  1205 ;; Hardware stack levels used:    1
  1206 ;; Hardware stack levels required when called:    2
  1207 ;; This function calls:
  1208 ;;		_OneWire_bit_IO
  1209 ;;		_OneWire_byte_WR
  1210 ;;		_oneWire_Reset
  1211 ;; This function is called by:
  1212 ;;		_Read_Meas
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           
  1217                           ;psect for function _OneWire_ROM_Search
  1218  029E                     _OneWire_ROM_Search:	
  1219                           
  1220                           ;incstack = 0
  1221                           ; Regs used in _OneWire_ROM_Search: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1222                           ;OneWire_ROM_Search@diff stored from wreg
  1223  029E  1283               	bcf	3,5	;RP0=0, select bank0
  1224  029F  1303               	bcf	3,6	;RP1=0, select bank0
  1225  02A0  00C2               	movwf	OneWire_ROM_Search@diff
  1226                           
  1227                           ;OneWire.c: 90: uint8_t i,j,next_diff;
  1228                           ;OneWire.c: 91: uint8_t b;
  1229                           ;OneWire.c: 93: if(oneWire_Reset())
  1230  02A1  21DD               	fcall	_oneWire_Reset
  1231  02A2  3A00               	xorlw	0
  1232  02A3  1903               	skipnz
  1233  02A4  2AA7               	goto	l1242
  1234                           
  1235                           ;OneWire.c: 94: {
  1236                           ;OneWire.c: 95: return 0xFF;
  1237  02A5  30FF               	movlw	255
  1238  02A6  0008               	return
  1239  02A7                     l1242:	
  1240                           
  1241                           ;OneWire.c: 96: }
  1242                           ;OneWire.c: 97: OneWire_byte_WR(0xF0);
  1243  02A7  30F0               	movlw	240
  1244  02A8  213E               	fcall	_OneWire_byte_WR
  1245                           
  1246                           ;OneWire.c: 98: next_diff=0x00;
  1247  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1248  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  1249  02AB  01C1               	clrf	OneWire_ROM_Search@next_diff
  1250                           
  1251                           ;OneWire.c: 100: i=8*8;
  1252  02AC  3040               	movlw	64
  1253  02AD  00FA               	movwf	??_OneWire_ROM_Search
  1254  02AE  087A               	movf	??_OneWire_ROM_Search,w
  1255  02AF  00C3               	movwf	OneWire_ROM_Search@i
  1256  02B0                     l1248:	
  1257                           ;OneWire.c: 101: do
  1258                           
  1259                           
  1260                           ;OneWire.c: 102: {
  1261                           ;OneWire.c: 103: j=8;
  1262  02B0  3008               	movlw	8
  1263  02B1  00FA               	movwf	??_OneWire_ROM_Search
  1264  02B2  087A               	movf	??_OneWire_ROM_Search,w
  1265  02B3  00C0               	movwf	OneWire_ROM_Search@j
  1266  02B4                     l1250:	
  1267                           ;OneWire.c: 104: do
  1268                           
  1269                           
  1270                           ;OneWire.c: 105: {
  1271                           ;OneWire.c: 106: b = OneWire_bit_IO( 1 );
  1272  02B4  3001               	movlw	1
  1273  02B5  215A               	fcall	_OneWire_bit_IO
  1274  02B6  00FA               	movwf	??_OneWire_ROM_Search
  1275  02B7  087A               	movf	??_OneWire_ROM_Search,w
  1276  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  1277  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  1278  02BA  00C4               	movwf	OneWire_ROM_Search@b
  1279                           
  1280                           ;OneWire.c: 107: if( OneWire_bit_IO( 1 ) ){
  1281  02BB  3001               	movlw	1
  1282  02BC  215A               	fcall	_OneWire_bit_IO
  1283  02BD  3A00               	xorlw	0
  1284  02BE  1903               	skipnz
  1285  02BF  2AC7               	goto	l1260
  1286                           
  1287                           ;OneWire.c: 108: if( b )
  1288  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  1289  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  1290  02C2  0844               	movf	OneWire_ROM_Search@b,w
  1291  02C3  1903               	btfsc	3,2
  1292  02C4  2ADF               	goto	l1270
  1293                           
  1294                           ;OneWire.c: 109: return 0xFE;
  1295  02C5  30FE               	movlw	254
  1296  02C6  0008               	return
  1297  02C7                     l1260:	
  1298                           ;OneWire.c: 110: }else{
  1299                           
  1300                           
  1301                           ;OneWire.c: 111: if( !b ){
  1302  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  1303  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  1304  02C9  0844               	movf	OneWire_ROM_Search@b,w
  1305  02CA  1D03               	btfss	3,2
  1306  02CB  2ADF               	goto	l1270
  1307                           
  1308                           ;OneWire.c: 112: if( diff > i ||
  1309                           ;OneWire.c: 113: ((*id & 1) && diff != i) ){
  1310  02CC  0842               	movf	OneWire_ROM_Search@diff,w
  1311  02CD  0243               	subwf	OneWire_ROM_Search@i,w
  1312  02CE  1C03               	skipc
  1313  02CF  2AD9               	goto	l134
  1314  02D0  0879               	movf	OneWire_ROM_Search@id,w
  1315  02D1  0084               	movwf	4
  1316  02D2  1383               	bcf	3,7	;select IRP bank0
  1317  02D3  1C00               	btfss	0,0
  1318  02D4  2ADF               	goto	l1270
  1319  02D5  0842               	movf	OneWire_ROM_Search@diff,w
  1320  02D6  0643               	xorwf	OneWire_ROM_Search@i,w
  1321  02D7  1903               	skipnz
  1322  02D8  2ADF               	goto	l1270
  1323  02D9                     l134:	
  1324                           
  1325                           ;OneWire.c: 114: b = 1;
  1326  02D9  01C4               	clrf	OneWire_ROM_Search@b
  1327  02DA  0AC4               	incf	OneWire_ROM_Search@b,f
  1328                           
  1329                           ;OneWire.c: 115: next_diff = i;
  1330  02DB  0843               	movf	OneWire_ROM_Search@i,w
  1331  02DC  00FA               	movwf	??_OneWire_ROM_Search
  1332  02DD  087A               	movf	??_OneWire_ROM_Search,w
  1333  02DE  00C1               	movwf	OneWire_ROM_Search@next_diff
  1334  02DF                     l1270:	
  1335                           
  1336                           ;OneWire.c: 116: }
  1337                           ;OneWire.c: 117: }
  1338                           ;OneWire.c: 118: }
  1339                           ;OneWire.c: 119: OneWire_bit_IO( b );
  1340  02DF  0844               	movf	OneWire_ROM_Search@b,w
  1341  02E0  215A               	fcall	_OneWire_bit_IO
  1342                           
  1343                           ;OneWire.c: 120: *id >>= 1;
  1344  02E1  0879               	movf	OneWire_ROM_Search@id,w
  1345  02E2  0084               	movwf	4
  1346  02E3  1003               	clrc
  1347  02E4  1383               	bcf	3,7	;select IRP bank0
  1348  02E5  0C80               	rrf	0,f
  1349                           
  1350                           ;OneWire.c: 121: if( b )
  1351  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  1352  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  1353  02E8  0844               	movf	OneWire_ROM_Search@b,w
  1354  02E9  1903               	btfsc	3,2
  1355  02EA  2AEE               	goto	l1278
  1356                           
  1357                           ;OneWire.c: 122: *id |= 0x80;
  1358  02EB  0879               	movf	OneWire_ROM_Search@id,w
  1359  02EC  0084               	movwf	4
  1360  02ED  1780               	bsf	0,7
  1361  02EE                     l1278:	
  1362                           
  1363                           ;OneWire.c: 123: i--;
  1364  02EE  3001               	movlw	1
  1365  02EF  02C3               	subwf	OneWire_ROM_Search@i,f
  1366                           
  1367                           ;OneWire.c: 124: }while(--j);
  1368  02F0  3001               	movlw	1
  1369  02F1  02C0               	subwf	OneWire_ROM_Search@j,f
  1370  02F2  1D03               	btfss	3,2
  1371  02F3  2AB4               	goto	l1250
  1372                           
  1373                           ;OneWire.c: 125: id++;
  1374  02F4  3001               	movlw	1
  1375  02F5  00FA               	movwf	??_OneWire_ROM_Search
  1376  02F6  087A               	movf	??_OneWire_ROM_Search,w
  1377  02F7  07F9               	addwf	OneWire_ROM_Search@id,f
  1378                           
  1379                           ;OneWire.c: 126: }while(i);
  1380  02F8  0843               	movf	OneWire_ROM_Search@i,w
  1381  02F9  1D03               	btfss	3,2
  1382  02FA  2AB0               	goto	l1248
  1383                           
  1384                           ;OneWire.c: 128: return next_diff;
  1385  02FB  0841               	movf	OneWire_ROM_Search@next_diff,w
  1386  02FC  0008               	return
  1387  02FD                     __end_of_OneWire_ROM_Search:	
  1388                           
  1389                           	psect	text5
  1390  01DD                     __ptext5:	
  1391 ;; *************** function _oneWire_Reset *****************
  1392 ;; Defined at:
  1393 ;;		line 6 in file "OneWire.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;		None
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;  err             1    1[COMMON] unsigned char 
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      unsigned char 
  1400 ;; Registers used:
  1401 ;;		wreg, status,2
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMMON   BANK0
  1407 ;;      Params:         0       0
  1408 ;;      Locals:         1       0
  1409 ;;      Temps:          1       0
  1410 ;;      Totals:         2       0
  1411 ;;Total ram usage:        2 bytes
  1412 ;; Hardware stack levels used:    1
  1413 ;; This function calls:
  1414 ;;		Nothing
  1415 ;; This function is called by:
  1416 ;;		_OneWire_ROM_Search
  1417 ;;		_OneWire_Command
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           
  1422                           ;psect for function _oneWire_Reset
  1423  01DD                     _oneWire_Reset:	
  1424                           
  1425                           ;OneWire.c: 8: uint8_t err;
  1426                           ;OneWire.c: 9: PORTCbits.RC0=0;
  1427                           
  1428                           ;incstack = 0
  1429                           ; Regs used in _oneWire_Reset: [wreg+status,2]
  1430  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1431  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1432  01DF  1007               	bcf	7,0	;volatile
  1433                           
  1434                           ;OneWire.c: 10: TRISC0=0;
  1435  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  1436  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  1437  01E2  1007               	bcf	7,0	;volatile
  1438                           
  1439                           ;OneWire.c: 11: _delay((unsigned long)((480)*(8000000/4000000.0)));
  1440  01E3  30BF               	movlw	191
  1441  01E4  00F0               	movwf	??_oneWire_Reset
  1442  01E5                     u1097:	
  1443  01E5  29E6               	nop2
  1444  01E6  0BF0               	decfsz	??_oneWire_Reset,f
  1445  01E7  29E5               	goto	u1097
  1446  01E8  29E9               	nop2
  1447  01E9  29EA               	nop2
  1448                           
  1449                           ;OneWire.c: 12: TRISC0=1;
  1450  01EA  1683               	bsf	3,5	;RP0=1, select bank1
  1451  01EB  1303               	bcf	3,6	;RP1=0, select bank1
  1452  01EC  1407               	bsf	7,0	;volatile
  1453                           
  1454                           ;OneWire.c: 13: _delay((unsigned long)((66)*(8000000/4000000.0)));
  1455  01ED  302B               	movlw	43
  1456  01EE  00F0               	movwf	??_oneWire_Reset
  1457  01EF                     u1107:	
  1458  01EF  0BF0               	decfsz	??_oneWire_Reset,f
  1459  01F0  29EF               	goto	u1107
  1460  01F1  29F2               	nop2
  1461                           
  1462                           ;OneWire.c: 14: if(RC0==1)
  1463  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1464  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1465  01F4  1C07               	btfss	7,0	;volatile
  1466  01F5  29F9               	goto	l103
  1467                           
  1468                           ;OneWire.c: 15: {
  1469                           ;OneWire.c: 16: err=1;
  1470  01F6  01F1               	clrf	oneWire_Reset@err
  1471  01F7  0AF1               	incf	oneWire_Reset@err,f
  1472                           
  1473                           ;OneWire.c: 17: }
  1474  01F8  29FC               	goto	l1202
  1475  01F9                     l103:	
  1476                           
  1477                           ;OneWire.c: 18: else if(RC0==0)
  1478  01F9  1807               	btfsc	7,0	;volatile
  1479  01FA  29FC               	goto	l1202
  1480                           
  1481                           ;OneWire.c: 19: {
  1482                           ;OneWire.c: 20: err=0;
  1483  01FB  01F1               	clrf	oneWire_Reset@err
  1484  01FC                     l1202:	
  1485                           
  1486                           ;OneWire.c: 21: }
  1487                           ;OneWire.c: 22: _delay((unsigned long)((480-66)*(8000000/4000000.0)));
  1488  01FC  30A5               	movlw	165
  1489  01FD  00F0               	movwf	??_oneWire_Reset
  1490  01FE                     u1117:	
  1491  01FE  29FF               	nop2
  1492  01FF  0BF0               	decfsz	??_oneWire_Reset,f
  1493  0200  29FE               	goto	u1117
  1494  0201  2A02               	nop2
  1495                           
  1496                           ;OneWire.c: 23: if(!RC0)
  1497  0202  1283               	bcf	3,5	;RP0=0, select bank0
  1498  0203  1303               	bcf	3,6	;RP1=0, select bank0
  1499  0204  1807               	btfsc	7,0	;volatile
  1500  0205  2A08               	goto	l1208
  1501                           
  1502                           ;OneWire.c: 24: {
  1503                           ;OneWire.c: 25: err=1;
  1504  0206  01F1               	clrf	oneWire_Reset@err
  1505  0207  0AF1               	incf	oneWire_Reset@err,f
  1506  0208                     l1208:	
  1507                           
  1508                           ;OneWire.c: 26: }
  1509                           ;OneWire.c: 28: return err;
  1510  0208  0871               	movf	oneWire_Reset@err,w
  1511  0209  0008               	return
  1512  020A                     __end_of_oneWire_Reset:	
  1513                           
  1514                           	psect	text6
  1515  00B4                     __ptext6:	
  1516 ;; *************** function _OneWire_Byte_RD *****************
  1517 ;; Defined at:
  1518 ;;		line 79 in file "OneWire.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;		None
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;		None
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  2    9[COMMON] unsigned int 
  1525 ;; Registers used:
  1526 ;;		wreg, status,2, status,0, pclath, cstack
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMMON   BANK0
  1532 ;;      Params:         2       0
  1533 ;;      Locals:         0       0
  1534 ;;      Temps:          0       0
  1535 ;;      Totals:         2       0
  1536 ;;Total ram usage:        2 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:    2
  1539 ;; This function calls:
  1540 ;;		_OneWire_byte_WR
  1541 ;; This function is called by:
  1542 ;;		_Read_Meas
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           
  1547                           ;psect for function _OneWire_Byte_RD
  1548  00B4                     _OneWire_Byte_RD:	
  1549                           
  1550                           ;OneWire.c: 81: return OneWire_byte_WR(0xFF);
  1551                           
  1552                           ;incstack = 0
  1553                           ; Regs used in _OneWire_Byte_RD: [wreg+status,2+status,0+pclath+cstack]
  1554  00B4  30FF               	movlw	255
  1555  00B5  213E               	fcall	_OneWire_byte_WR
  1556  00B6  0873               	movf	?_OneWire_byte_WR+1,w
  1557  00B7  00FA               	movwf	?_OneWire_Byte_RD+1
  1558  00B8  0872               	movf	?_OneWire_byte_WR,w
  1559  00B9  00F9               	movwf	?_OneWire_Byte_RD
  1560  00BA  0008               	return
  1561  00BB                     __end_of_OneWire_Byte_RD:	
  1562                           
  1563                           	psect	text7
  1564  013E                     __ptext7:	
  1565 ;; *************** function _OneWire_byte_WR *****************
  1566 ;; Defined at:
  1567 ;;		line 60 in file "OneWire.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  b               1    wreg     unsigned char 
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;  b               1    8[COMMON] unsigned char 
  1572 ;;  j               1    7[COMMON] unsigned char 
  1573 ;;  i               1    6[COMMON] unsigned char 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  2    2[COMMON] unsigned int 
  1576 ;; Registers used:
  1577 ;;		wreg, status,2, status,0, pclath, cstack
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMMON   BANK0
  1583 ;;      Params:         2       0
  1584 ;;      Locals:         3       0
  1585 ;;      Temps:          2       0
  1586 ;;      Totals:         7       0
  1587 ;;Total ram usage:        7 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:    1
  1590 ;; This function calls:
  1591 ;;		_OneWire_bit_IO
  1592 ;; This function is called by:
  1593 ;;		_OneWire_Byte_RD
  1594 ;;		_OneWire_ROM_Search
  1595 ;;		_OneWire_Command
  1596 ;;		_Read_Meas
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           
  1601                           ;psect for function _OneWire_byte_WR
  1602  013E                     _OneWire_byte_WR:	
  1603                           
  1604                           ;incstack = 0
  1605                           ; Regs used in _OneWire_byte_WR: [wreg+status,2+status,0+pclath+cstack]
  1606                           ;OneWire_byte_WR@b stored from wreg
  1607  013E  00F8               	movwf	OneWire_byte_WR@b
  1608                           
  1609                           ;OneWire.c: 62: uint8_t i=8,j;
  1610  013F  3008               	movlw	8
  1611  0140  00F4               	movwf	??_OneWire_byte_WR
  1612  0141  0874               	movf	??_OneWire_byte_WR,w
  1613  0142  00F6               	movwf	OneWire_byte_WR@i
  1614  0143                     l1214:	
  1615                           ;OneWire.c: 63: do{
  1616                           
  1617                           
  1618                           ;OneWire.c: 64: j=OneWire_bit_IO(b&1);
  1619  0143  0878               	movf	OneWire_byte_WR@b,w
  1620  0144  3901               	andlw	1
  1621  0145  215A               	fcall	_OneWire_bit_IO
  1622  0146  00F4               	movwf	??_OneWire_byte_WR
  1623  0147  0874               	movf	??_OneWire_byte_WR,w
  1624  0148  00F7               	movwf	OneWire_byte_WR@j
  1625                           
  1626                           ;OneWire.c: 65: b>>=1;
  1627  0149  1003               	clrc
  1628  014A  0CF8               	rrf	OneWire_byte_WR@b,f
  1629                           
  1630                           ;OneWire.c: 66: if(j)
  1631  014B  0877               	movf	OneWire_byte_WR@j,w
  1632  014C  1D03               	btfss	3,2
  1633                           
  1634                           ;OneWire.c: 67: {
  1635                           ;OneWire.c: 68: b|=0x80;
  1636  014D  17F8               	bsf	OneWire_byte_WR@b,7
  1637                           
  1638                           ;OneWire.c: 69: }
  1639                           ;OneWire.c: 71: }while(--i);
  1640  014E  3001               	movlw	1
  1641  014F  02F6               	subwf	OneWire_byte_WR@i,f
  1642  0150  1D03               	btfss	3,2
  1643  0151  2943               	goto	l1214
  1644                           
  1645                           ;OneWire.c: 72: return b;
  1646  0152  0878               	movf	OneWire_byte_WR@b,w
  1647  0153  00F4               	movwf	??_OneWire_byte_WR
  1648  0154  01F5               	clrf	??_OneWire_byte_WR+1
  1649  0155  0874               	movf	??_OneWire_byte_WR,w
  1650  0156  00F2               	movwf	?_OneWire_byte_WR
  1651  0157  0875               	movf	??_OneWire_byte_WR+1,w
  1652  0158  00F3               	movwf	?_OneWire_byte_WR+1
  1653  0159  0008               	return
  1654  015A                     __end_of_OneWire_byte_WR:	
  1655                           
  1656                           	psect	text8
  1657  015A                     __ptext8:	
  1658 ;; *************** function _OneWire_bit_IO *****************
  1659 ;; Defined at:
  1660 ;;		line 37 in file "OneWire.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;  b               1    wreg     unsigned char 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  b               1    1[COMMON] unsigned char 
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      unsigned char 
  1667 ;; Registers used:
  1668 ;;		wreg, status,2, status,0
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMMON   BANK0
  1674 ;;      Params:         0       0
  1675 ;;      Locals:         1       0
  1676 ;;      Temps:          1       0
  1677 ;;      Totals:         2       0
  1678 ;;Total ram usage:        2 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; This function calls:
  1681 ;;		Nothing
  1682 ;; This function is called by:
  1683 ;;		_OneWire_byte_WR
  1684 ;;		_OneWire_ROM_Search
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           
  1689                           ;psect for function _OneWire_bit_IO
  1690  015A                     _OneWire_bit_IO:	
  1691                           
  1692                           ;incstack = 0
  1693                           ; Regs used in _OneWire_bit_IO: [wreg+status,2+status,0]
  1694                           ;OneWire_bit_IO@b stored from wreg
  1695  015A  00F1               	movwf	OneWire_bit_IO@b
  1696                           
  1697                           ;OneWire.c: 39: TRISC0=0;
  1698  015B  1683               	bsf	3,5	;RP0=1, select bank1
  1699  015C  1303               	bcf	3,6	;RP1=0, select bank1
  1700  015D  1007               	bcf	7,0	;volatile
  1701                           
  1702                           ;OneWire.c: 40: _delay((unsigned long)((1)*(8000000/4000000.0)));
  1703  015E  295F               	nop2	;2 cycle nop
  1704                           
  1705                           ;OneWire.c: 41: if(b)
  1706  015F  0871               	movf	OneWire_bit_IO@b,w
  1707  0160  1903               	btfsc	3,2
  1708  0161  2965               	goto	l1122
  1709                           
  1710                           ;OneWire.c: 42: {
  1711                           ;OneWire.c: 43: TRISC0=1;
  1712  0162  1683               	bsf	3,5	;RP0=1, select bank1
  1713  0163  1303               	bcf	3,6	;RP1=0, select bank1
  1714  0164  1407               	bsf	7,0	;volatile
  1715  0165                     l1122:	
  1716                           
  1717                           ;OneWire.c: 44: }
  1718                           ;OneWire.c: 45: _delay((unsigned long)((14)*(8000000/4000000.0)));
  1719  0165  3009               	movlw	9
  1720  0166  00F0               	movwf	??_OneWire_bit_IO
  1721  0167                     u1127:	
  1722  0167  0BF0               	decfsz	??_OneWire_bit_IO,f
  1723  0168  2967               	goto	u1127
  1724                           
  1725                           ;OneWire.c: 46: if(!RC0)
  1726  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1727  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1728  016B  1C07               	btfss	7,0	;volatile
  1729                           
  1730                           ;OneWire.c: 47: {
  1731                           ;OneWire.c: 48: b=0;
  1732  016C  01F1               	clrf	OneWire_bit_IO@b
  1733                           
  1734                           ;OneWire.c: 49: }
  1735                           ;OneWire.c: 50: _delay((unsigned long)((45)*(8000000/4000000.0)));
  1736  016D  301D               	movlw	29
  1737  016E  00F0               	movwf	??_OneWire_bit_IO
  1738  016F                     u1137:	
  1739  016F  0BF0               	decfsz	??_OneWire_bit_IO,f
  1740  0170  296F               	goto	u1137
  1741  0171  2972               	nop2
  1742                           
  1743                           ;OneWire.c: 51: TRISC0=1;
  1744  0172  1683               	bsf	3,5	;RP0=1, select bank1
  1745  0173  1303               	bcf	3,6	;RP1=0, select bank1
  1746  0174  1407               	bsf	7,0	;volatile
  1747                           
  1748                           ;OneWire.c: 53: return b;
  1749  0175  0871               	movf	OneWire_bit_IO@b,w
  1750  0176  0008               	return
  1751  0177                     __end_of_OneWire_bit_IO:	
  1752                           
  1753                           	psect	text9
  1754  00C7                     __ptext9:	
  1755 ;; *************** function _LCD_PrintStringXY *****************
  1756 ;; Defined at:
  1757 ;;		line 179 in file "LCDlib.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;  str             2    8[COMMON] PTR unsigned char 
  1760 ;;		 -> Read_Meas@s(20), STR_2(3), STR_1(3), 
  1761 ;;  x               1   10[COMMON] unsigned char 
  1762 ;;  y               1   11[COMMON] unsigned char 
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;		None
  1765 ;; Return value:  Size  Location     Type
  1766 ;;                  1    wreg      void 
  1767 ;; Registers used:
  1768 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMMON   BANK0
  1774 ;;      Params:         4       0
  1775 ;;      Locals:         0       0
  1776 ;;      Temps:          1       0
  1777 ;;      Totals:         5       0
  1778 ;;Total ram usage:        5 bytes
  1779 ;; Hardware stack levels used:    1
  1780 ;; Hardware stack levels required when called:    3
  1781 ;; This function calls:
  1782 ;;		_LCD_GoToXY
  1783 ;;		_LCD_PrintString
  1784 ;; This function is called by:
  1785 ;;		_main
  1786 ;;		_Read_Meas
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           
  1791                           ;psect for function _LCD_PrintStringXY
  1792  00C7                     _LCD_PrintStringXY:	
  1793                           
  1794                           ;LCDlib.c: 181: LCD_GoToXY(x,y);
  1795                           
  1796                           ;incstack = 0
  1797                           ; Regs used in _LCD_PrintStringXY: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1798  00C7  087B               	movf	LCD_PrintStringXY@y,w
  1799  00C8  00FC               	movwf	??_LCD_PrintStringXY
  1800  00C9  087C               	movf	??_LCD_PrintStringXY,w
  1801  00CA  00F4               	movwf	LCD_GoToXY@y
  1802  00CB  087A               	movf	LCD_PrintStringXY@x,w
  1803  00CC  22FD               	fcall	_LCD_GoToXY
  1804                           
  1805                           ;LCDlib.c: 182: LCD_PrintString(str);
  1806  00CD  0878               	movf	LCD_PrintStringXY@str,w
  1807  00CE  00F4               	movwf	LCD_PrintString@str
  1808  00CF  0879               	movf	LCD_PrintStringXY@str+1,w
  1809  00D0  00F5               	movwf	LCD_PrintString@str+1
  1810  00D1  20F5               	fcall	_LCD_PrintString
  1811  00D2  0008               	return
  1812  00D3                     __end_of_LCD_PrintStringXY:	
  1813                           
  1814                           	psect	text10
  1815  00F5                     __ptext10:	
  1816 ;; *************** function _LCD_PrintString *****************
  1817 ;; Defined at:
  1818 ;;		line 120 in file "LCDlib.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;  str             2    4[COMMON] PTR unsigned char 
  1821 ;;		 -> Read_Meas@s(20), STR_2(3), STR_1(3), 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;		None
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  1    wreg      void 
  1826 ;; Registers used:
  1827 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMMON   BANK0
  1833 ;;      Params:         2       0
  1834 ;;      Locals:         0       0
  1835 ;;      Temps:          0       0
  1836 ;;      Totals:         2       0
  1837 ;;Total ram usage:        2 bytes
  1838 ;; Hardware stack levels used:    1
  1839 ;; Hardware stack levels required when called:    2
  1840 ;; This function calls:
  1841 ;;		_LCD_PrintChar
  1842 ;; This function is called by:
  1843 ;;		_LCD_PrintStringXY
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           
  1848                           ;psect for function _LCD_PrintString
  1849  00F5                     _LCD_PrintString:	
  1850  00F5                     l1142:	
  1851                           ;LCDlib.c: 122: while((*str)!='\0')
  1852                           
  1853                           ;incstack = 0
  1854                           ; Regs used in _LCD_PrintString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1855                           
  1856  00F5  0875               	movf	LCD_PrintString@str+1,w
  1857  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  1858  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  1859  00F8  00FF               	movwf	127
  1860  00F9  0874               	movf	LCD_PrintString@str,w
  1861  00FA  0084               	movwf	4
  1862  00FB  2001               	fcall	stringtab
  1863  00FC  3A00               	xorlw	0
  1864  00FD  1903               	btfsc	3,2
  1865  00FE  0008               	return
  1866                           
  1867                           ;LCDlib.c: 123: {
  1868                           ;LCDlib.c: 124: LCD_PrintChar(*str);
  1869  00FF  0875               	movf	LCD_PrintString@str+1,w
  1870  0100  1283               	bcf	3,5	;RP0=0, select bank0
  1871  0101  1303               	bcf	3,6	;RP1=0, select bank0
  1872  0102  00FF               	movwf	127
  1873  0103  0874               	movf	LCD_PrintString@str,w
  1874  0104  0084               	movwf	4
  1875  0105  2001               	fcall	stringtab
  1876  0106  2195               	fcall	_LCD_PrintChar
  1877                           
  1878                           ;LCDlib.c: 125: str++;
  1879  0107  3001               	movlw	1
  1880  0108  07F4               	addwf	LCD_PrintString@str,f
  1881  0109  1803               	skipnc
  1882  010A  0AF5               	incf	LCD_PrintString@str+1,f
  1883  010B  28F5               	goto	l1142
  1884  010C                     __end_of_LCD_PrintString:	
  1885                           
  1886                           	psect	text11
  1887  0195                     __ptext11:	
  1888 ;; *************** function _LCD_PrintChar *****************
  1889 ;; Defined at:
  1890 ;;		line 102 in file "LCDlib.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  c               1    wreg     unsigned char 
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;  c               1    3[COMMON] unsigned char 
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      void 
  1897 ;; Registers used:
  1898 ;;		wreg, status,2, status,0, pclath, cstack
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMMON   BANK0
  1904 ;;      Params:         0       0
  1905 ;;      Locals:         1       0
  1906 ;;      Temps:          2       0
  1907 ;;      Totals:         3       0
  1908 ;;Total ram usage:        3 bytes
  1909 ;; Hardware stack levels used:    1
  1910 ;; Hardware stack levels required when called:    1
  1911 ;; This function calls:
  1912 ;;		_LCD_SendData
  1913 ;; This function is called by:
  1914 ;;		_LCD_PrintString
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           
  1919                           ;psect for function _LCD_PrintChar
  1920  0195                     _LCD_PrintChar:	
  1921                           
  1922                           ;incstack = 0
  1923                           ; Regs used in _LCD_PrintChar: [wreg+status,2+status,0+pclath+cstack]
  1924                           ;LCD_PrintChar@c stored from wreg
  1925  0195  00F3               	movwf	LCD_PrintChar@c
  1926                           
  1927                           ;LCDlib.c: 104: (PORTAbits.RA0=1);
  1928  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1929  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1930  0198  1405               	bsf	5,0	;volatile
  1931                           
  1932                           ;LCDlib.c: 105: LCD_SendData(c>>4);
  1933  0199  0873               	movf	LCD_PrintChar@c,w
  1934  019A  00F1               	movwf	??_LCD_PrintChar
  1935  019B  3004               	movlw	4
  1936  019C                     u595:	
  1937  019C  1003               	clrc
  1938  019D  0CF1               	rrf	??_LCD_PrintChar,f
  1939  019E  3EFF               	addlw	-1
  1940  019F  1D03               	skipz
  1941  01A0  299C               	goto	u595
  1942  01A1  0871               	movf	??_LCD_PrintChar,w
  1943  01A2  2124               	fcall	_LCD_SendData
  1944                           
  1945                           ;LCDlib.c: 106: (PORTAbits.RA2=1);
  1946  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1947  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1948  01A5  1505               	bsf	5,2	;volatile
  1949                           
  1950                           ;LCDlib.c: 107: (PORTAbits.RA2=0);
  1951  01A6  1105               	bcf	5,2	;volatile
  1952                           
  1953                           ;LCDlib.c: 108: LCD_SendData(c&0x0F);
  1954  01A7  0873               	movf	LCD_PrintChar@c,w
  1955  01A8  390F               	andlw	15
  1956  01A9  2124               	fcall	_LCD_SendData
  1957                           
  1958                           ;LCDlib.c: 109: (PORTAbits.RA2=1);
  1959  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1960  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1961  01AC  1505               	bsf	5,2	;volatile
  1962                           
  1963                           ;LCDlib.c: 110: (PORTAbits.RA2=0);
  1964  01AD  1105               	bcf	5,2	;volatile
  1965                           
  1966                           ;LCDlib.c: 111: _delay((unsigned long)((4)*(8000000/4000.0)));
  1967  01AE  300B               	movlw	11
  1968  01AF  00F2               	movwf	??_LCD_PrintChar+1
  1969  01B0  3062               	movlw	98
  1970  01B1  00F1               	movwf	??_LCD_PrintChar
  1971  01B2                     u1147:	
  1972  01B2  0BF1               	decfsz	??_LCD_PrintChar,f
  1973  01B3  29B2               	goto	u1147
  1974  01B4  0BF2               	decfsz	??_LCD_PrintChar+1,f
  1975  01B5  29B2               	goto	u1147
  1976  01B6  0000               	nop
  1977  01B7  0008               	return
  1978  01B8                     __end_of_LCD_PrintChar:	
  1979                           
  1980                           	psect	text12
  1981  02FD                     __ptext12:	
  1982 ;; *************** function _LCD_GoToXY *****************
  1983 ;; Defined at:
  1984 ;;		line 132 in file "LCDlib.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  x               1    wreg     unsigned char 
  1987 ;;  y               1    4[COMMON] unsigned char 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  x               1    6[COMMON] unsigned char 
  1990 ;;  temp            1    7[COMMON] unsigned char 
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1    wreg      void 
  1993 ;; Registers used:
  1994 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMMON   BANK0
  2000 ;;      Params:         1       0
  2001 ;;      Locals:         2       0
  2002 ;;      Temps:          1       0
  2003 ;;      Totals:         4       0
  2004 ;;Total ram usage:        4 bytes
  2005 ;; Hardware stack levels used:    1
  2006 ;; Hardware stack levels required when called:    2
  2007 ;; This function calls:
  2008 ;;		_LCD_SendCommand
  2009 ;; This function is called by:
  2010 ;;		_LCD_PrintStringXY
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           
  2015                           ;psect for function _LCD_GoToXY
  2016  02FD                     _LCD_GoToXY:	
  2017                           
  2018                           ;incstack = 0
  2019                           ; Regs used in _LCD_GoToXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2020                           ;LCD_GoToXY@x stored from wreg
  2021  02FD  00F6               	movwf	LCD_GoToXY@x
  2022                           
  2023                           ;LCDlib.c: 134: if(x > 39) x = 39;
  2024  02FE  3028               	movlw	40
  2025  02FF  0276               	subwf	LCD_GoToXY@x,w
  2026  0300  1C03               	skipc
  2027  0301  2B06               	goto	l1150
  2028  0302  3027               	movlw	39
  2029  0303  00F5               	movwf	??_LCD_GoToXY
  2030  0304  0875               	movf	??_LCD_GoToXY,w
  2031  0305  00F6               	movwf	LCD_GoToXY@x
  2032  0306                     l1150:	
  2033                           ;LCDlib.c: 135: if(x < 0) x = 0;
  2034                           
  2035                           
  2036                           ;LCDlib.c: 136: if(y > 3) y = 3;
  2037  0306  3004               	movlw	4
  2038  0307  0274               	subwf	LCD_GoToXY@y,w
  2039  0308  1C03               	skipc
  2040  0309  2B0E               	goto	l79
  2041  030A  3003               	movlw	3
  2042  030B  00F5               	movwf	??_LCD_GoToXY
  2043  030C  0875               	movf	??_LCD_GoToXY,w
  2044  030D  00F4               	movwf	LCD_GoToXY@y
  2045  030E                     l79:	
  2046                           ;LCDlib.c: 137: if(y < 0) y = 0;
  2047                           
  2048                           
  2049                           ;LCDlib.c: 138: char temp = 0x00;
  2050  030E  01F7               	clrf	LCD_GoToXY@temp
  2051                           
  2052                           ;LCDlib.c: 139: (PORTAbits.RA0=0);
  2053  030F  1283               	bcf	3,5	;RP0=0, select bank0
  2054  0310  1303               	bcf	3,6	;RP1=0, select bank0
  2055  0311  1005               	bcf	5,0	;volatile
  2056                           
  2057                           ;LCDlib.c: 141: switch(y)
  2058  0312  2B5F               	goto	l1184
  2059  0313                     l1158:	
  2060                           ;LCDlib.c: 142: {
  2061                           ;LCDlib.c: 143: case 0:
  2062                           
  2063                           
  2064                           ;LCDlib.c: 144: {
  2065                           ;LCDlib.c: 145: temp|=(0x80+x);
  2066  0313  0876               	movf	LCD_GoToXY@x,w
  2067  0314  3E80               	addlw	128
  2068  0315  00F5               	movwf	??_LCD_GoToXY
  2069  0316  0875               	movf	??_LCD_GoToXY,w
  2070  0317  04F7               	iorwf	LCD_GoToXY@temp,f
  2071                           
  2072                           ;LCDlib.c: 146: LCD_SendCommand(temp>>4);
  2073  0318  0877               	movf	LCD_GoToXY@temp,w
  2074  0319  00F5               	movwf	??_LCD_GoToXY
  2075  031A  3004               	movlw	4
  2076  031B                     u655:	
  2077  031B  1003               	clrc
  2078  031C  0CF5               	rrf	??_LCD_GoToXY,f
  2079  031D  3EFF               	addlw	-1
  2080  031E  1D03               	skipz
  2081  031F  2B1B               	goto	u655
  2082  0320  0875               	movf	??_LCD_GoToXY,w
  2083  0321  20E1               	fcall	_LCD_SendCommand
  2084                           
  2085                           ;LCDlib.c: 147: LCD_SendCommand(temp&0x0F);
  2086  0322  0877               	movf	LCD_GoToXY@temp,w
  2087  0323  390F               	andlw	15
  2088  0324  20E1               	fcall	_LCD_SendCommand
  2089                           
  2090                           ;LCDlib.c: 148: break;
  2091  0325  0008               	return
  2092  0326                     l1164:	
  2093                           ;LCDlib.c: 149: }
  2094                           ;LCDlib.c: 150: case 1:
  2095                           
  2096                           
  2097                           ;LCDlib.c: 151: {
  2098                           ;LCDlib.c: 152: temp|=(0xC0+x);
  2099  0326  0876               	movf	LCD_GoToXY@x,w
  2100  0327  3EC0               	addlw	192
  2101  0328  00F5               	movwf	??_LCD_GoToXY
  2102  0329  0875               	movf	??_LCD_GoToXY,w
  2103  032A  04F7               	iorwf	LCD_GoToXY@temp,f
  2104                           
  2105                           ;LCDlib.c: 153: LCD_SendCommand(temp>>4);
  2106  032B  0877               	movf	LCD_GoToXY@temp,w
  2107  032C  00F5               	movwf	??_LCD_GoToXY
  2108  032D  3004               	movlw	4
  2109  032E                     u665:	
  2110  032E  1003               	clrc
  2111  032F  0CF5               	rrf	??_LCD_GoToXY,f
  2112  0330  3EFF               	addlw	-1
  2113  0331  1D03               	skipz
  2114  0332  2B2E               	goto	u665
  2115  0333  0875               	movf	??_LCD_GoToXY,w
  2116  0334  20E1               	fcall	_LCD_SendCommand
  2117                           
  2118                           ;LCDlib.c: 154: LCD_SendCommand(temp&0x0F);
  2119  0335  0877               	movf	LCD_GoToXY@temp,w
  2120  0336  390F               	andlw	15
  2121  0337  20E1               	fcall	_LCD_SendCommand
  2122                           
  2123                           ;LCDlib.c: 155: break;
  2124  0338  0008               	return
  2125  0339                     l1170:	
  2126                           ;LCDlib.c: 156: }
  2127                           ;LCDlib.c: 157: case 2:
  2128                           
  2129                           
  2130                           ;LCDlib.c: 158: {
  2131                           ;LCDlib.c: 159: temp|=(0x94+x);
  2132  0339  0876               	movf	LCD_GoToXY@x,w
  2133  033A  3E94               	addlw	148
  2134  033B  00F5               	movwf	??_LCD_GoToXY
  2135  033C  0875               	movf	??_LCD_GoToXY,w
  2136  033D  04F7               	iorwf	LCD_GoToXY@temp,f
  2137                           
  2138                           ;LCDlib.c: 160: LCD_SendCommand(temp>>4);
  2139  033E  0877               	movf	LCD_GoToXY@temp,w
  2140  033F  00F5               	movwf	??_LCD_GoToXY
  2141  0340  3004               	movlw	4
  2142  0341                     u675:	
  2143  0341  1003               	clrc
  2144  0342  0CF5               	rrf	??_LCD_GoToXY,f
  2145  0343  3EFF               	addlw	-1
  2146  0344  1D03               	skipz
  2147  0345  2B41               	goto	u675
  2148  0346  0875               	movf	??_LCD_GoToXY,w
  2149  0347  20E1               	fcall	_LCD_SendCommand
  2150                           
  2151                           ;LCDlib.c: 161: LCD_SendCommand(temp&0x0F);
  2152  0348  0877               	movf	LCD_GoToXY@temp,w
  2153  0349  390F               	andlw	15
  2154  034A  20E1               	fcall	_LCD_SendCommand
  2155                           
  2156                           ;LCDlib.c: 162: break;
  2157  034B  0008               	return
  2158  034C                     l1176:	
  2159                           ;LCDlib.c: 163: }
  2160                           ;LCDlib.c: 165: case 3:
  2161                           
  2162                           
  2163                           ;LCDlib.c: 166: {
  2164                           ;LCDlib.c: 167: temp|=(0xD4+x);
  2165  034C  0876               	movf	LCD_GoToXY@x,w
  2166  034D  3ED4               	addlw	212
  2167  034E  00F5               	movwf	??_LCD_GoToXY
  2168  034F  0875               	movf	??_LCD_GoToXY,w
  2169  0350  04F7               	iorwf	LCD_GoToXY@temp,f
  2170                           
  2171                           ;LCDlib.c: 168: LCD_SendCommand(temp>>4);
  2172  0351  0877               	movf	LCD_GoToXY@temp,w
  2173  0352  00F5               	movwf	??_LCD_GoToXY
  2174  0353  3004               	movlw	4
  2175  0354                     u685:	
  2176  0354  1003               	clrc
  2177  0355  0CF5               	rrf	??_LCD_GoToXY,f
  2178  0356  3EFF               	addlw	-1
  2179  0357  1D03               	skipz
  2180  0358  2B54               	goto	u685
  2181  0359  0875               	movf	??_LCD_GoToXY,w
  2182  035A  20E1               	fcall	_LCD_SendCommand
  2183                           
  2184                           ;LCDlib.c: 169: LCD_SendCommand(temp&0x0F);
  2185  035B  0877               	movf	LCD_GoToXY@temp,w
  2186  035C  390F               	andlw	15
  2187  035D  20E1               	fcall	_LCD_SendCommand
  2188                           
  2189                           ;LCDlib.c: 171: }
  2190                           ;LCDlib.c: 172: }
  2191                           
  2192                           ;LCDlib.c: 170: break;
  2193  035E  0008               	return
  2194  035F                     l1184:	
  2195  035F  0874               	movf	LCD_GoToXY@y,w
  2196                           
  2197                           ; Switch size 1, requested type "space"
  2198                           ; Number of cases is 4, Range of values is 0 to 3
  2199                           ; switch strategies available:
  2200                           ; Name         Instructions Cycles
  2201                           ; direct_byte           10     6 (fixed)
  2202                           ; simple_byte           13     7 (average)
  2203                           ; jumptable            260     6 (fixed)
  2204                           ;	Chosen strategy is direct_byte
  2205  0360  0084               	movwf	4
  2206  0361  3004               	movlw	4
  2207  0362  0204               	subwf	4,w
  2208  0363  1803               	skipnc
  2209  0364  0008               	return
  2210  0365  3000               	movlw	high S1506
  2211  0366  008A               	movwf	10
  2212  0367  3017               	movlw	low S1506
  2213  0368  0704               	addwf	4,w
  2214  0369  0082               	movwf	2
  2215  036A  0008               	return
  2216  036B                     __end_of_LCD_GoToXY:	
  2217                           
  2218                           	psect	swtext1
  2219  0017                     __pswtext1:	
  2220  0017                     S1506:	
  2221  0017  2B13               	ljmp	l1158
  2222  0018  2B26               	ljmp	l1164
  2223  0019  2B39               	ljmp	l1170
  2224  001A  2B4C               	ljmp	l1176
  2225                           
  2226                           	psect	text13
  2227  0246                     __ptext13:	
  2228 ;; *************** function _LCD_Init *****************
  2229 ;; Defined at:
  2230 ;;		line 62 in file "LCDlib.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;  lcd             1    wreg     unsigned char 
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;  lcd             1    6[COMMON] unsigned char 
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  1    wreg      void 
  2237 ;; Registers used:
  2238 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMMON   BANK0
  2244 ;;      Params:         0       0
  2245 ;;      Locals:         1       0
  2246 ;;      Temps:          2       0
  2247 ;;      Totals:         3       0
  2248 ;;Total ram usage:        3 bytes
  2249 ;; Hardware stack levels used:    1
  2250 ;; Hardware stack levels required when called:    2
  2251 ;; This function calls:
  2252 ;;		_LCD_SendCommand
  2253 ;; This function is called by:
  2254 ;;		_main
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           
  2259                           ;psect for function _LCD_Init
  2260  0246                     _LCD_Init:	
  2261                           
  2262                           ;incstack = 0
  2263                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2264                           ;LCD_Init@lcd stored from wreg
  2265  0246  00F6               	movwf	LCD_Init@lcd
  2266                           
  2267                           ;LCDlib.c: 64: TRISA0=0;
  2268  0247  1683               	bsf	3,5	;RP0=1, select bank1
  2269  0248  1303               	bcf	3,6	;RP1=0, select bank1
  2270  0249  1005               	bcf	5,0	;volatile
  2271                           
  2272                           ;LCDlib.c: 65: TRISA1=0;
  2273  024A  1085               	bcf	5,1	;volatile
  2274                           
  2275                           ;LCDlib.c: 66: TRISA2=0;
  2276  024B  1105               	bcf	5,2	;volatile
  2277                           
  2278                           ;LCDlib.c: 67: TRISB=0x00;
  2279  024C  0186               	clrf	6	;volatile
  2280                           
  2281                           ;LCDlib.c: 69: switch (lcd)
  2282  024D  2A59               	goto	l1344
  2283  024E                     l1334:	
  2284                           ;LCDlib.c: 70: {
  2285                           ;LCDlib.c: 71: case 0: lcd = 0x0C; break;
  2286                           
  2287  024E  300C               	movlw	12
  2288  024F  2A55               	goto	L5
  2289  0250                     l1336:	
  2290                           ;LCDlib.c: 72: case 1: lcd = 0x0D; break;
  2291                           
  2292  0250  300D               	movlw	13
  2293  0251  2A55               	goto	L5
  2294  0252                     l1338:	
  2295                           ;LCDlib.c: 73: case 2: lcd = 0x0E; break;
  2296                           
  2297  0252  300E               	movlw	14
  2298  0253  2A55               	goto	L5
  2299  0254                     l1340:	
  2300                           ;LCDlib.c: 74: case 3: lcd = 0x0F; break;
  2301                           
  2302  0254  300F               	movlw	15
  2303  0255                     L5:	
  2304  0255  00F4               	movwf	??_LCD_Init
  2305  0256  0874               	movf	??_LCD_Init,w
  2306  0257  00F6               	movwf	LCD_Init@lcd
  2307                           
  2308                           ;LCDlib.c: 75: }
  2309  0258  2A64               	goto	l1346
  2310  0259                     l1344:	
  2311  0259  0876               	movf	LCD_Init@lcd,w
  2312                           
  2313                           ; Switch size 1, requested type "space"
  2314                           ; Number of cases is 4, Range of values is 0 to 3
  2315                           ; switch strategies available:
  2316                           ; Name         Instructions Cycles
  2317                           ; direct_byte           10     6 (fixed)
  2318                           ; simple_byte           13     7 (average)
  2319                           ; jumptable            260     6 (fixed)
  2320                           ;	Chosen strategy is direct_byte
  2321  025A  0084               	movwf	4
  2322  025B  3004               	movlw	4
  2323  025C  0204               	subwf	4,w
  2324  025D  1803               	skipnc
  2325  025E  2A64               	goto	l1346
  2326  025F  3000               	movlw	high S1508
  2327  0260  008A               	movwf	10
  2328  0261  301B               	movlw	low S1508
  2329  0262  0704               	addwf	4,w
  2330  0263  0082               	movwf	2
  2331  0264                     l1346:	
  2332                           
  2333                           ;LCDlib.c: 77: _delay((unsigned long)((20)*(8000000/4000.0)));
  2334  0264  3034               	movlw	52
  2335  0265  00F5               	movwf	??_LCD_Init+1
  2336  0266  30F1               	movlw	241
  2337  0267  00F4               	movwf	??_LCD_Init
  2338  0268                     u1157:	
  2339  0268  0BF4               	decfsz	??_LCD_Init,f
  2340  0269  2A68               	goto	u1157
  2341  026A  0BF5               	decfsz	??_LCD_Init+1,f
  2342  026B  2A68               	goto	u1157
  2343  026C  2A6D               	nop2
  2344                           
  2345                           ;LCDlib.c: 78: LCD_SendCommand(0x03);
  2346  026D  3003               	movlw	3
  2347  026E  20E1               	fcall	_LCD_SendCommand
  2348                           
  2349                           ;LCDlib.c: 79: _delay((unsigned long)((40)*(8000000/4000000.0)));
  2350  026F  301A               	movlw	26
  2351  0270  00F4               	movwf	??_LCD_Init
  2352  0271                     u1167:	
  2353  0271  0BF4               	decfsz	??_LCD_Init,f
  2354  0272  2A71               	goto	u1167
  2355  0273  0000               	nop
  2356                           
  2357                           ;LCDlib.c: 80: LCD_SendCommand(0x03);
  2358  0274  3003               	movlw	3
  2359  0275  20E1               	fcall	_LCD_SendCommand
  2360                           
  2361                           ;LCDlib.c: 81: _delay((unsigned long)((40)*(8000000/4000000.0)));
  2362  0276  301A               	movlw	26
  2363  0277  00F4               	movwf	??_LCD_Init
  2364  0278                     u1177:	
  2365  0278  0BF4               	decfsz	??_LCD_Init,f
  2366  0279  2A78               	goto	u1177
  2367  027A  0000               	nop
  2368                           
  2369                           ;LCDlib.c: 82: LCD_SendCommand(0x03);
  2370  027B  3003               	movlw	3
  2371  027C  20E1               	fcall	_LCD_SendCommand
  2372                           
  2373                           ;LCDlib.c: 83: _delay((unsigned long)((40)*(8000000/4000000.0)));
  2374  027D  301A               	movlw	26
  2375  027E  00F4               	movwf	??_LCD_Init
  2376  027F                     u1187:	
  2377  027F  0BF4               	decfsz	??_LCD_Init,f
  2378  0280  2A7F               	goto	u1187
  2379  0281  0000               	nop
  2380                           
  2381                           ;LCDlib.c: 84: LCD_SendCommand(0x02);
  2382  0282  3002               	movlw	2
  2383  0283  20E1               	fcall	_LCD_SendCommand
  2384                           
  2385                           ;LCDlib.c: 85: _delay((unsigned long)((40)*(8000000/4000000.0)));
  2386  0284  301A               	movlw	26
  2387  0285  00F4               	movwf	??_LCD_Init
  2388  0286                     u1197:	
  2389  0286  0BF4               	decfsz	??_LCD_Init,f
  2390  0287  2A86               	goto	u1197
  2391  0288  0000               	nop
  2392                           
  2393                           ;LCDlib.c: 86: LCD_SendCommand(0x02);
  2394  0289  3002               	movlw	2
  2395  028A  20E1               	fcall	_LCD_SendCommand
  2396                           
  2397                           ;LCDlib.c: 87: LCD_SendCommand(0x08);
  2398  028B  3008               	movlw	8
  2399  028C  20E1               	fcall	_LCD_SendCommand
  2400                           
  2401                           ;LCDlib.c: 88: LCD_SendCommand(0x00);
  2402  028D  3000               	movlw	0
  2403  028E  20E1               	fcall	_LCD_SendCommand
  2404                           
  2405                           ;LCDlib.c: 89: LCD_SendCommand(0x08);
  2406  028F  3008               	movlw	8
  2407  0290  20E1               	fcall	_LCD_SendCommand
  2408                           
  2409                           ;LCDlib.c: 90: LCD_SendCommand(0x00);
  2410  0291  3000               	movlw	0
  2411  0292  20E1               	fcall	_LCD_SendCommand
  2412                           
  2413                           ;LCDlib.c: 91: LCD_SendCommand(0x01);
  2414  0293  3001               	movlw	1
  2415  0294  20E1               	fcall	_LCD_SendCommand
  2416                           
  2417                           ;LCDlib.c: 92: LCD_SendCommand(0x00);
  2418  0295  3000               	movlw	0
  2419  0296  20E1               	fcall	_LCD_SendCommand
  2420                           
  2421                           ;LCDlib.c: 93: LCD_SendCommand(0x06);
  2422  0297  3006               	movlw	6
  2423  0298  20E1               	fcall	_LCD_SendCommand
  2424                           
  2425                           ;LCDlib.c: 94: LCD_SendCommand(0x00);
  2426  0299  3000               	movlw	0
  2427  029A  20E1               	fcall	_LCD_SendCommand
  2428                           
  2429                           ;LCDlib.c: 95: LCD_SendCommand(lcd);
  2430  029B  0876               	movf	LCD_Init@lcd,w
  2431  029C  20E1               	fcall	_LCD_SendCommand
  2432  029D  0008               	return
  2433  029E                     __end_of_LCD_Init:	
  2434                           
  2435                           	psect	swtext2
  2436  001B                     __pswtext2:	
  2437  001B                     S1508:	
  2438  001B  2A4E               	ljmp	l1334
  2439  001C  2A50               	ljmp	l1336
  2440  001D  2A52               	ljmp	l1338
  2441  001E  2A54               	ljmp	l1340
  2442                           
  2443                           	psect	text14
  2444  00AF                     __ptext14:	
  2445 ;; *************** function _LCD_Clear *****************
  2446 ;; Defined at:
  2447 ;;		line 190 in file "LCDlib.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;		None
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;		None
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  1    wreg      void 
  2454 ;; Registers used:
  2455 ;;		wreg, status,2, status,0, pclath, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMMON   BANK0
  2461 ;;      Params:         0       0
  2462 ;;      Locals:         0       0
  2463 ;;      Temps:          0       0
  2464 ;;      Totals:         0       0
  2465 ;;Total ram usage:        0 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; Hardware stack levels required when called:    2
  2468 ;; This function calls:
  2469 ;;		_LCD_SendCommand
  2470 ;; This function is called by:
  2471 ;;		_main
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           
  2476                           ;psect for function _LCD_Clear
  2477  00AF                     _LCD_Clear:	
  2478                           
  2479                           ;LCDlib.c: 192: LCD_SendCommand(0x00);
  2480                           
  2481                           ;incstack = 0
  2482                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2483  00AF  3000               	movlw	0
  2484  00B0  20E1               	fcall	_LCD_SendCommand
  2485                           
  2486                           ;LCDlib.c: 193: LCD_SendCommand(0x01);
  2487  00B1  3001               	movlw	1
  2488  00B2  20E1               	fcall	_LCD_SendCommand
  2489  00B3  0008               	return
  2490  00B4                     __end_of_LCD_Clear:	
  2491                           
  2492                           	psect	text15
  2493  00E1                     __ptext15:	
  2494 ;; *************** function _LCD_SendCommand *****************
  2495 ;; Defined at:
  2496 ;;		line 48 in file "LCDlib.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;  com             1    wreg     unsigned char 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;  com             1    3[COMMON] unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0, pclath, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMMON   BANK0
  2510 ;;      Params:         0       0
  2511 ;;      Locals:         1       0
  2512 ;;      Temps:          2       0
  2513 ;;      Totals:         3       0
  2514 ;;Total ram usage:        3 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    1
  2517 ;; This function calls:
  2518 ;;		_LCD_SendData
  2519 ;; This function is called by:
  2520 ;;		_LCD_Init
  2521 ;;		_LCD_GoToXY
  2522 ;;		_LCD_Clear
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           
  2527                           ;psect for function _LCD_SendCommand
  2528  00E1                     _LCD_SendCommand:	
  2529                           
  2530                           ;incstack = 0
  2531                           ; Regs used in _LCD_SendCommand: [wreg+status,2+status,0+pclath+cstack]
  2532                           ;LCD_SendCommand@com stored from wreg
  2533  00E1  00F3               	movwf	LCD_SendCommand@com
  2534                           
  2535                           ;LCDlib.c: 50: (PORTAbits.RA0=0);
  2536  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  2537  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  2538  00E4  1005               	bcf	5,0	;volatile
  2539                           
  2540                           ;LCDlib.c: 51: LCD_SendData(com);
  2541  00E5  0873               	movf	LCD_SendCommand@com,w
  2542  00E6  2124               	fcall	_LCD_SendData
  2543                           
  2544                           ;LCDlib.c: 52: (PORTAbits.RA2=1);
  2545  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  2546  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  2547  00E9  1505               	bsf	5,2	;volatile
  2548                           
  2549                           ;LCDlib.c: 53: (PORTAbits.RA2=0);
  2550  00EA  1105               	bcf	5,2	;volatile
  2551                           
  2552                           ;LCDlib.c: 54: _delay((unsigned long)((4)*(8000000/4000.0)));
  2553  00EB  300B               	movlw	11
  2554  00EC  00F2               	movwf	??_LCD_SendCommand+1
  2555  00ED  3062               	movlw	98
  2556  00EE  00F1               	movwf	??_LCD_SendCommand
  2557  00EF                     u1207:	
  2558  00EF  0BF1               	decfsz	??_LCD_SendCommand,f
  2559  00F0  28EF               	goto	u1207
  2560  00F1  0BF2               	decfsz	??_LCD_SendCommand+1,f
  2561  00F2  28EF               	goto	u1207
  2562  00F3  0000               	nop
  2563  00F4  0008               	return
  2564  00F5                     __end_of_LCD_SendCommand:	
  2565                           
  2566                           	psect	text16
  2567  0124                     __ptext16:	
  2568 ;; *************** function _LCD_SendData *****************
  2569 ;; Defined at:
  2570 ;;		line 8 in file "LCDlib.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;  data            1    wreg     unsigned char 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  data            1    0[COMMON] unsigned char 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  1    wreg      void 
  2577 ;; Registers used:
  2578 ;;		wreg
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMMON   BANK0
  2584 ;;      Params:         0       0
  2585 ;;      Locals:         1       0
  2586 ;;      Temps:          0       0
  2587 ;;      Totals:         1       0
  2588 ;;Total ram usage:        1 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; This function calls:
  2591 ;;		Nothing
  2592 ;; This function is called by:
  2593 ;;		_LCD_SendCommand
  2594 ;;		_LCD_PrintChar
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           
  2599                           ;psect for function _LCD_SendData
  2600  0124                     _LCD_SendData:	
  2601                           
  2602                           ;incstack = 0
  2603                           ; Regs used in _LCD_SendData: [wreg]
  2604                           ;LCD_SendData@data stored from wreg
  2605  0124  00F0               	movwf	LCD_SendData@data
  2606                           
  2607                           ;LCDlib.c: 10: if(data&0x01)
  2608  0125  1C70               	btfss	LCD_SendData@data,0
  2609  0126  292B               	goto	l44
  2610                           
  2611                           ;LCDlib.c: 11: {
  2612                           ;LCDlib.c: 12: PORTBbits.RB4=1;
  2613  0127  1283               	bcf	3,5	;RP0=0, select bank0
  2614  0128  1303               	bcf	3,6	;RP1=0, select bank0
  2615  0129  1606               	bsf	6,4	;volatile
  2616                           
  2617                           ;LCDlib.c: 13: }
  2618  012A  292E               	goto	l45
  2619  012B                     l44:	
  2620                           
  2621                           ;LCDlib.c: 14: else
  2622                           ;LCDlib.c: 15: {
  2623                           ;LCDlib.c: 16: PORTBbits.RB4=0;
  2624  012B  1283               	bcf	3,5	;RP0=0, select bank0
  2625  012C  1303               	bcf	3,6	;RP1=0, select bank0
  2626  012D  1206               	bcf	6,4	;volatile
  2627  012E                     l45:	
  2628                           
  2629                           ;LCDlib.c: 17: }
  2630                           ;LCDlib.c: 18: if(data&0x02)
  2631  012E  1CF0               	btfss	LCD_SendData@data,1
  2632  012F  2932               	goto	l46
  2633                           
  2634                           ;LCDlib.c: 19: {
  2635                           ;LCDlib.c: 20: PORTBbits.RB5=1;
  2636  0130  1686               	bsf	6,5	;volatile
  2637                           
  2638                           ;LCDlib.c: 21: }
  2639  0131  2933               	goto	l47
  2640  0132                     l46:	
  2641                           
  2642                           ;LCDlib.c: 22: else
  2643                           ;LCDlib.c: 23: {
  2644                           ;LCDlib.c: 24: PORTBbits.RB5=0;
  2645  0132  1286               	bcf	6,5	;volatile
  2646  0133                     l47:	
  2647                           
  2648                           ;LCDlib.c: 25: }
  2649                           ;LCDlib.c: 26: if(data&0x04)
  2650  0133  1D70               	btfss	LCD_SendData@data,2
  2651  0134  2937               	goto	l48
  2652                           
  2653                           ;LCDlib.c: 27: {
  2654                           ;LCDlib.c: 28: PORTBbits.RB6=1;
  2655  0135  1706               	bsf	6,6	;volatile
  2656                           
  2657                           ;LCDlib.c: 29: }
  2658  0136  2938               	goto	l49
  2659  0137                     l48:	
  2660                           
  2661                           ;LCDlib.c: 30: else
  2662                           ;LCDlib.c: 31: {
  2663                           ;LCDlib.c: 32: PORTBbits.RB6=0;
  2664  0137  1306               	bcf	6,6	;volatile
  2665  0138                     l49:	
  2666                           
  2667                           ;LCDlib.c: 33: }
  2668                           ;LCDlib.c: 34: if(data&0x08)
  2669  0138  1DF0               	btfss	LCD_SendData@data,3
  2670  0139  293C               	goto	l50
  2671                           
  2672                           ;LCDlib.c: 35: {
  2673                           ;LCDlib.c: 36: PORTBbits.RB7=1;
  2674  013A  1786               	bsf	6,7	;volatile
  2675                           
  2676                           ;LCDlib.c: 37: }
  2677  013B  0008               	return
  2678  013C                     l50:	
  2679                           
  2680                           ;LCDlib.c: 38: else
  2681                           ;LCDlib.c: 39: {
  2682                           ;LCDlib.c: 40: PORTBbits.RB7=0;
  2683  013C  1386               	bcf	6,7	;volatile
  2684  013D  0008               	return
  2685  013E                     __end_of_LCD_SendData:	
  2686                           
  2687                           	psect	text17
  2688  00AB                     __ptext17:	
  2689 ;; *************** function _GetZnak *****************
  2690 ;; Defined at:
  2691 ;;		line 126 in file "DS18B20.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;		None
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;		None
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  1    wreg      unsigned char 
  2698 ;; Registers used:
  2699 ;;		wreg
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMMON   BANK0
  2705 ;;      Params:         0       0
  2706 ;;      Locals:         0       0
  2707 ;;      Temps:          0       0
  2708 ;;      Totals:         0       0
  2709 ;;Total ram usage:        0 bytes
  2710 ;; Hardware stack levels used:    1
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		_main
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           
  2719                           ;psect for function _GetZnak
  2720  00AB                     _GetZnak:	
  2721                           
  2722                           ;DS18B20.c: 128: return ZNAK;
  2723                           
  2724                           ;incstack = 0
  2725                           ; Regs used in _GetZnak: [wreg]
  2726  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  2727  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  2728  00AD  086D               	movf	_ZNAK,w
  2729  00AE  0008               	return
  2730  00AF                     __end_of_GetZnak:	
  2731                           
  2732                           	psect	text18
  2733  00BB                     __ptext18:	
  2734 ;; *************** function _GetTempS *****************
  2735 ;; Defined at:
  2736 ;;		line 116 in file "DS18B20.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;		None
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;		None
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  2    0[COMMON] unsigned int 
  2743 ;; Registers used:
  2744 ;;		wreg, status,2, status,0
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMMON   BANK0
  2750 ;;      Params:         2       0
  2751 ;;      Locals:         0       0
  2752 ;;      Temps:          0       0
  2753 ;;      Totals:         2       0
  2754 ;;Total ram usage:        2 bytes
  2755 ;; Hardware stack levels used:    1
  2756 ;; This function calls:
  2757 ;;		Nothing
  2758 ;; This function is called by:
  2759 ;;		_main
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           
  2764                           ;psect for function _GetTempS
  2765  00BB                     _GetTempS:	
  2766                           
  2767                           ;DS18B20.c: 118: return temp >> 4;
  2768                           
  2769                           ;incstack = 0
  2770                           ; Regs used in _GetTempS: [wreg+status,2+status,0]
  2771  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  2772  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  2773  00BD  0E6B               	swapf	_temp,w
  2774  00BE  390F               	andlw	15
  2775  00BF  00F0               	movwf	?_GetTempS
  2776  00C0  0E6C               	swapf	_temp+1,w
  2777  00C1  39F0               	andlw	240
  2778  00C2  04F0               	iorwf	?_GetTempS,f
  2779  00C3  0E6C               	swapf	_temp+1,w
  2780  00C4  390F               	andlw	15
  2781  00C5  00F1               	movwf	?_GetTempS+1
  2782  00C6  0008               	return
  2783  00C7                     __end_of_GetTempS:	
  2784                           
  2785                           	psect	text19
  2786  010C                     __ptext19:	
  2787 ;; *************** function _GetTempM *****************
  2788 ;; Defined at:
  2789 ;;		line 121 in file "DS18B20.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;		None
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;		None
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  2    8[COMMON] unsigned int 
  2796 ;; Registers used:
  2797 ;;		wreg, status,2, status,0, pclath, cstack
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMMON   BANK0
  2803 ;;      Params:         2       0
  2804 ;;      Locals:         0       0
  2805 ;;      Temps:          2       0
  2806 ;;      Totals:         4       0
  2807 ;;Total ram usage:        4 bytes
  2808 ;; Hardware stack levels used:    1
  2809 ;; Hardware stack levels required when called:    1
  2810 ;; This function calls:
  2811 ;;		___lwdiv
  2812 ;; This function is called by:
  2813 ;;		_main
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817                           
  2818                           ;psect for function _GetTempM
  2819  010C                     _GetTempM:	
  2820                           
  2821                           ;DS18B20.c: 123: return (temp << 12) / 6553;
  2822                           
  2823                           ;incstack = 0
  2824                           ; Regs used in _GetTempM: [wreg+status,2+status,0+pclath+cstack]
  2825  010C  3099               	movlw	153
  2826  010D  00F0               	movwf	___lwdiv@divisor
  2827  010E  3019               	movlw	25
  2828  010F  00F1               	movwf	___lwdiv@divisor+1
  2829  0110  1283               	bcf	3,5	;RP0=0, select bank0
  2830  0111  1303               	bcf	3,6	;RP1=0, select bank0
  2831  0112  086C               	movf	_temp+1,w
  2832  0113  00FB               	movwf	??_GetTempM+1
  2833  0114  086B               	movf	_temp,w
  2834  0115  00FA               	movwf	??_GetTempM
  2835  0116  0E7A               	swapf	??_GetTempM,w
  2836  0117  39F0               	andlw	240
  2837  0118  00FB               	movwf	??_GetTempM+1
  2838  0119  01FA               	clrf	??_GetTempM
  2839  011A  087A               	movf	??_GetTempM,w
  2840  011B  00F2               	movwf	___lwdiv@dividend
  2841  011C  087B               	movf	??_GetTempM+1,w
  2842  011D  00F3               	movwf	___lwdiv@dividend+1
  2843  011E  220A               	fcall	___lwdiv
  2844  011F  0871               	movf	?___lwdiv+1,w
  2845  0120  00F9               	movwf	?_GetTempM+1
  2846  0121  0870               	movf	?___lwdiv,w
  2847  0122  00F8               	movwf	?_GetTempM
  2848  0123  0008               	return
  2849  0124                     __end_of_GetTempM:	
  2850                           
  2851                           	psect	text20
  2852  020A                     __ptext20:	
  2853 ;; *************** function ___lwdiv *****************
  2854 ;; Defined at:
  2855 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;  divisor         2    0[COMMON] unsigned int 
  2858 ;;  dividend        2    2[COMMON] unsigned int 
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;  quotient        2    5[COMMON] unsigned int 
  2861 ;;  counter         1    7[COMMON] unsigned char 
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  2    0[COMMON] unsigned int 
  2864 ;; Registers used:
  2865 ;;		wreg, status,2, status,0
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMMON   BANK0
  2871 ;;      Params:         4       0
  2872 ;;      Locals:         3       0
  2873 ;;      Temps:          1       0
  2874 ;;      Totals:         8       0
  2875 ;;Total ram usage:        8 bytes
  2876 ;; Hardware stack levels used:    1
  2877 ;; This function calls:
  2878 ;;		Nothing
  2879 ;; This function is called by:
  2880 ;;		_GetTempM
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           
  2885                           ;psect for function ___lwdiv
  2886  020A                     ___lwdiv:	
  2887                           
  2888                           ;incstack = 0
  2889                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2890  020A  01F5               	clrf	___lwdiv@quotient
  2891  020B  01F6               	clrf	___lwdiv@quotient+1
  2892  020C  0870               	movf	___lwdiv@divisor,w
  2893  020D  0471               	iorwf	___lwdiv@divisor+1,w
  2894  020E  1903               	btfsc	3,2
  2895  020F  2A41               	goto	l1326
  2896  0210  01F7               	clrf	___lwdiv@counter
  2897  0211  0AF7               	incf	___lwdiv@counter,f
  2898  0212                     l1314:	
  2899  0212  1BF1               	btfsc	___lwdiv@divisor+1,7
  2900  0213  2A20               	goto	l1316
  2901  0214  3001               	movlw	1
  2902  0215                     u875:	
  2903  0215  1003               	clrc
  2904  0216  0DF0               	rlf	___lwdiv@divisor,f
  2905  0217  0DF1               	rlf	___lwdiv@divisor+1,f
  2906  0218  3EFF               	addlw	-1
  2907  0219  1D03               	skipz
  2908  021A  2A15               	goto	u875
  2909  021B  3001               	movlw	1
  2910  021C  00F4               	movwf	??___lwdiv
  2911  021D  0874               	movf	??___lwdiv,w
  2912  021E  07F7               	addwf	___lwdiv@counter,f
  2913  021F  2A12               	goto	l1314
  2914  0220                     l1316:	
  2915  0220  3001               	movlw	1
  2916  0221                     u895:	
  2917  0221  1003               	clrc
  2918  0222  0DF5               	rlf	___lwdiv@quotient,f
  2919  0223  0DF6               	rlf	___lwdiv@quotient+1,f
  2920  0224  3EFF               	addlw	-1
  2921  0225  1D03               	skipz
  2922  0226  2A21               	goto	u895
  2923  0227  0871               	movf	___lwdiv@divisor+1,w
  2924  0228  0273               	subwf	___lwdiv@dividend+1,w
  2925  0229  1D03               	skipz
  2926  022A  2A2D               	goto	u905
  2927  022B  0870               	movf	___lwdiv@divisor,w
  2928  022C  0272               	subwf	___lwdiv@dividend,w
  2929  022D                     u905:	
  2930  022D  1C03               	skipc
  2931  022E  2A36               	goto	l1322
  2932  022F  0870               	movf	___lwdiv@divisor,w
  2933  0230  02F2               	subwf	___lwdiv@dividend,f
  2934  0231  0871               	movf	___lwdiv@divisor+1,w
  2935  0232  1C03               	skipc
  2936  0233  03F3               	decf	___lwdiv@dividend+1,f
  2937  0234  02F3               	subwf	___lwdiv@dividend+1,f
  2938  0235  1475               	bsf	___lwdiv@quotient,0
  2939  0236                     l1322:	
  2940  0236  3001               	movlw	1
  2941  0237                     u915:	
  2942  0237  1003               	clrc
  2943  0238  0CF1               	rrf	___lwdiv@divisor+1,f
  2944  0239  0CF0               	rrf	___lwdiv@divisor,f
  2945  023A  3EFF               	addlw	-1
  2946  023B  1D03               	skipz
  2947  023C  2A37               	goto	u915
  2948  023D  3001               	movlw	1
  2949  023E  02F7               	subwf	___lwdiv@counter,f
  2950  023F  1D03               	btfss	3,2
  2951  0240  2A20               	goto	l1316
  2952  0241                     l1326:	
  2953  0241  0876               	movf	___lwdiv@quotient+1,w
  2954  0242  00F1               	movwf	?___lwdiv+1
  2955  0243  0875               	movf	___lwdiv@quotient,w
  2956  0244  00F0               	movwf	?___lwdiv
  2957  0245  0008               	return
  2958  0246                     __end_of___lwdiv:	
  2959  007E                     btemp	set	126	;btemp
  2960  007E                     wtemp0	set	126


Data Sizes:
    Strings     6
    Constant    0
    Data        1
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            48     43      46

Pointer List with Targets:

    OneWire_Command@id	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    OneWire_ROM_Search@id	PTR unsigned char  size(1) Largest target is 8
		 -> Read_Meas@id(BANK0[8]), 

    LCD_PrintStringXY@str	PTR unsigned char  size(2) Largest target is 20
		 -> Read_Meas@s(BANK0[20]), STR_2(CODE[3]), STR_1(CODE[3]), 

    LCD_PrintString@str	PTR unsigned char  size(2) Largest target is 20
		 -> Read_Meas@s(BANK0[20]), STR_2(CODE[3]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _main->_LCD_PrintStringXY
    _Start_Meas->_OneWire_Command
    _OneWire_Command->_OneWire_byte_WR
    _Read_Meas->_LCD_PrintStringXY
    _OneWire_ROM_Search->_OneWire_byte_WR
    _OneWire_Byte_RD->_OneWire_byte_WR
    _OneWire_byte_WR->_OneWire_bit_IO
    _LCD_PrintStringXY->_LCD_GoToXY
    _LCD_PrintString->_LCD_PrintChar
    _LCD_PrintChar->_LCD_SendData
    _LCD_GoToXY->_LCD_SendCommand
    _LCD_Init->_LCD_SendCommand
    _LCD_Clear->_LCD_SendCommand
    _LCD_SendCommand->_LCD_SendData
    _GetTempM->___lwdiv

Critical Paths under _main in BANK0

    _main->_Read_Meas
    _Read_Meas->_OneWire_ROM_Search

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    4925
                                             39 BANK0      4     4      0
                           _GetTempM
                           _GetTempS
                            _GetZnak
                          _LCD_Clear
                           _LCD_Init
                  _LCD_PrintStringXY
                          _Read_Meas
                         _Start_Meas
 ---------------------------------------------------------------------------------
 (1) _Start_Meas                                           0     0      0     305
                    _OneWire_Command
 ---------------------------------------------------------------------------------
 (2) _OneWire_Command                                      4     3      1     305
                                              9 COMMON     4     3      1
                    _OneWire_byte_WR
                      _oneWire_Reset
 ---------------------------------------------------------------------------------
 (1) _Read_Meas                                           34    34      0    2648
                                              5 BANK0     34    34      0
                  _LCD_PrintStringXY
                    _OneWire_Byte_RD
                 _OneWire_ROM_Search
                    _OneWire_byte_WR
 ---------------------------------------------------------------------------------
 (2) _OneWire_ROM_Search                                   7     6      1     598
                                              9 COMMON     2     1      1
                                              0 BANK0      5     5      0
                     _OneWire_bit_IO
                    _OneWire_byte_WR
                      _oneWire_Reset
 ---------------------------------------------------------------------------------
 (3) _oneWire_Reset                                        2     2      0      25
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _OneWire_Byte_RD                                      2     0      2     137
                                              9 COMMON     2     0      2
                    _OneWire_byte_WR
 ---------------------------------------------------------------------------------
 (3) _OneWire_byte_WR                                      7     5      2     137
                                              2 COMMON     7     5      2
                     _OneWire_bit_IO
 ---------------------------------------------------------------------------------
 (4) _OneWire_bit_IO                                       2     2      0      45
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_PrintStringXY                                    5     1      4    1434
                                              8 COMMON     5     1      4
                         _LCD_GoToXY
                    _LCD_PrintString
 ---------------------------------------------------------------------------------
 (3) _LCD_PrintString                                      2     0      2     230
                                              4 COMMON     2     0      2
                      _LCD_PrintChar
 ---------------------------------------------------------------------------------
 (4) _LCD_PrintChar                                        3     3      0     132
                                              1 COMMON     3     3      0
                       _LCD_SendData
 ---------------------------------------------------------------------------------
 (3) _LCD_GoToXY                                           4     3      1     502
                                              4 COMMON     4     3      1
                    _LCD_SendCommand
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     3      0     158
                                              4 COMMON     3     3      0
                    _LCD_SendCommand
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     110
                    _LCD_SendCommand
 ---------------------------------------------------------------------------------
 (4) _LCD_SendCommand                                      3     3      0     110
                                              1 COMMON     3     3      0
                       _LCD_SendData
 ---------------------------------------------------------------------------------
 (5) _LCD_SendData                                         1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _GetZnak                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetTempS                                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _GetTempM                                             4     2      2     268
                                              8 COMMON     4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetTempM
     ___lwdiv
   _GetTempS
   _GetZnak
   _LCD_Clear
     _LCD_SendCommand
       _LCD_SendData
   _LCD_Init
     _LCD_SendCommand
       _LCD_SendData
   _LCD_PrintStringXY
     _LCD_GoToXY
       _LCD_SendCommand
         _LCD_SendData
     _LCD_PrintString
       _LCD_PrintChar
         _LCD_SendData
   _Read_Meas
     _LCD_PrintStringXY
       _LCD_GoToXY
         _LCD_SendCommand
           _LCD_SendData
       _LCD_PrintString
         _LCD_PrintChar
           _LCD_SendData
     _OneWire_Byte_RD
       _OneWire_byte_WR
         _OneWire_bit_IO
     _OneWire_ROM_Search
       _OneWire_bit_IO
       _OneWire_byte_WR
         _OneWire_bit_IO
       _oneWire_Reset
     _OneWire_byte_WR
       _OneWire_bit_IO
   _Start_Meas
     _OneWire_Command
       _OneWire_byte_WR
         _OneWire_bit_IO
       _oneWire_Reset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               30     2B      2E       5       95.8%
BITBANK0            30      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3B       6        0.0%
ABS                  0      0      3B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Apr 26 10:47:38 2018

                ?_LCD_GoToXY 0074                            pc 0002                  __CFG_CP$OFF 0000  
                         l50 013C                           l44 012B                           l45 012E  
                         l46 0132                           l47 0133                           l48 0137  
                         l49 0138                           l79 030E                           fsr 0004  
                        l103 01F9                          l134 02D9                          l143 0192  
                        l181 03BE                          _RC0 0038                 __CFG_CPD$OFF 0000  
                        u655 031B                          u905 022D                          u665 032E  
                        u915 0237                          u675 0341                          u595 019C  
                        u685 0354                          u875 0215                          u895 0221  
                        fsr0 0004                          indf 0000       OneWire_ROM_Search@diff 0042  
               __CFG_IESO$ON 0000  __size_of_OneWire_ROM_Search 005F                         S1506 0017  
                       S1508 001B                _LCD_PrintChar 0195                ?_LCD_SendData 0070  
                       l1122 0165                         l1202 01FC                         l1150 0306  
                       l1142 00F5                         l1214 0143                         l1302 0190  
                       l1208 0208                         l1400 0393                         l1322 0236  
                       l1314 0212                         l1170 0339                         l1250 02B4  
                       l1242 02A7                         l1316 0220                         l1340 0254  
                       l1164 0326                         l1260 02C7                         l1420 03CC  
                       l1404 039B                         l1326 0241                         l1334 024E  
                       l1158 0313                         l1270 02DF                         l1422 03D6  
                       l1430 03ED                         l1336 0250                         l1344 0259  
                       l1176 034C                         l1184 035F                         l1248 02B0  
                       l1416 03C1                         l1432 03F7                         l1338 0252  
                       l1346 0264                         l1426 03E3                         l1460 01BD  
                       l1452 01C4                         l1278 02EE                         l1296 0182  
                       l1394 038E                         STR_1 0011                         STR_2 0014  
                       u1107 01EF                         u1035 03C6                         u1117 01FE  
                       u1207 00EF                         u1127 0167                         u1055 03DD  
                       u1137 016F                         u1147 01B2                         u1157 0268  
                       u1167 0271                         u1177 0278                         u1097 01E5  
                       u1187 027F                         u1197 0286                         _ZNAK 006D  
                LCD_GoToXY@x 0076                  LCD_GoToXY@y 0074                __CFG_FCMEN$ON 0000  
                       _main 01B8           __size_of_LCD_Clear 0005                         _temp 006B  
                       btemp 007E                __CFG_BOREN$ON 0000                   Read_Meas@i 0065  
                 Read_Meas@s 0047                         start 0000              _LCD_SendCommand 00E1  
                LCD_Init@lcd 0076              __end_of_GetZnak 00AF                __CFG_MCLRE$ON 0000  
          OneWire_Command@id 0079             __end_of_LCD_Init 029E                        ?_main 0070  
              __CFG_WDTE$OFF 0000              __end_of___lwdiv 0246              _OneWire_Command 0177  
                      _TRISB 0086              _OneWire_Byte_RD 00B4               ?_LCD_PrintChar 0070  
             ??_LCD_SendData 0070          __size_of_LCD_GoToXY 006E                        pclath 000A  
                Read_Meas@id 005B                        status 0003                        wtemp0 007E  
           __end_of_GetTempM 0124             __end_of_GetTempS 00C7              _OneWire_byte_WR 013E  
            __initialization 03FA                 __end_of_main 01DD                       ??_main 007D  
          __end_of_LCD_Clear 00B4              _LCD_PrintString 00F5      __end_of_LCD_SendCommand 00F5  
     OneWire_Command@command 007B                    ??_GetZnak 0070                       _TRISA0 0428  
                     _TRISA1 0429                       _TRISA2 042A                       _TRISC0 0438  
         __size_of_Read_Meas 008F               __CFG_PWRTE$OFF 0000           LCD_PrintStringXY@x 007A  
         LCD_PrintStringXY@y 007B           LCD_PrintString@str 0074                    ??___lwdiv 0074  
    __end_of_OneWire_Command 0195      __end_of_OneWire_Byte_RD 00BB              ??_LCD_PrintChar 0071  
                 _Start_Meas 00D3             oneWire_Reset@err 0071      __end_of_OneWire_byte_WR 015A  
    __end_of__initialization 03FE                    ?_LCD_Init 0070               __pcstackCOMMON 0070  
               ??_LCD_GoToXY 0075         __end_of_LCD_SendData 013E                 __pidataBANK0 00AA  
    __end_of_LCD_PrintString 010C            __end_of_Read_Meas 03FA                    ?_GetTempM 0078  
                  ?_GetTempS 0070           __end_of_LCD_GoToXY 036B                   __pbssBANK0 006B  
           ?_LCD_SendCommand 0070                   ??_LCD_Init 0074              OneWire_bit_IO@b 0071  
                 __pmaintext 01B8       __size_of_oneWire_Reset 002D             ?_OneWire_Command 0079  
           ?_OneWire_Byte_RD 0079   __end_of_OneWire_ROM_Search 02FD      __size_of_OneWire_bit_IO 001D  
           LCD_SendData@data 0070                   ??_GetTempM 007A                   ??_GetTempS 0072  
                ?_Start_Meas 0070                   __stringtab 0001             ?_OneWire_byte_WR 0072  
                    _GetZnak 00AB               LCD_GoToXY@temp 0077                      ___lwdiv 020A  
           ?_LCD_PrintString 0074                      __ptext1 00D3                      __ptext2 0177  
                    __ptext3 036B                      __ptext4 029E                      __ptext5 01DD  
                    __ptext6 00B4                      __ptext7 013E                      __ptext8 015A  
                    __ptext9 00C7                    _LCD_Clear 00AF                _oneWire_Reset 01DD  
       end_of_initialization 03FE        __size_of_LCD_SendData 001A                Read_Meas@diff 0066  
              Read_Meas@byte 0063          __size_of_Start_Meas 000E                    _PORTAbits 0005  
                  _PORTBbits 0006                    _PORTCbits 0007                   ?_LCD_Clear 0070  
             ?_oneWire_Reset 0070                 _LCD_SendData 0124            __size_of_LCD_Init 0058  
           OneWire_Command@i 007C               _OneWire_bit_IO 015A          start_initialization 03FA  
      __end_of_LCD_PrintChar 01B8                    _Read_Meas 036B            __size_of_GetTempM 0018  
          __size_of_GetTempS 000C           LCD_SendCommand@com 0073                  __pdataBANK0 006D  
     __end_of_OneWire_bit_IO 0177                    ___latbits 0000                __pcstackBANK0 0040  
            ??_oneWire_Reset 0070                  ??_LCD_Clear 0074                   ?_Read_Meas 0070  
               ??_Start_Meas 007D            _LCD_PrintStringXY 00C7           ?_LCD_PrintStringXY 0078  
         _OneWire_ROM_Search 029E                     ?_GetZnak 0070          ??_LCD_PrintStringXY 007C  
           ___lwdiv@dividend 0072          ?_OneWire_ROM_Search 0079     __size_of_LCD_SendCommand 0014  
                   ?___lwdiv 0070           __end_of_Start_Meas 00E1                    __pstrings 0001  
           OneWire_byte_WR@b 0078             OneWire_byte_WR@i 0076             OneWire_byte_WR@j 0077  
             LCD_PrintChar@c 0073                    __pswtext1 0017                    __pswtext2 001B  
            ?_OneWire_bit_IO 0070         ??_OneWire_ROM_Search 007A    __end_of_LCD_PrintStringXY 00D3  
   __size_of_OneWire_Command 001E     __size_of_OneWire_Byte_RD 0007             ___lwdiv@quotient 0075  
                   _LCD_Init 0246     __size_of_OneWire_byte_WR 001C                  __stringbase 0010  
                  main@TempM 0069                    main@TempS 0067         OneWire_ROM_Search@id 0079  
   __size_of_LCD_PrintString 0017                  ??_Read_Meas 0045                     _GetTempM 010C  
                   _GetTempS 00BB             __size_of_GetZnak 0004         LCD_PrintStringXY@str 0078  
           __size_of___lwdiv 003C            ??_LCD_SendCommand 0071           __end_of__stringtab 0011  
 __size_of_LCD_PrintStringXY 000C              ___lwdiv@divisor 0070              ___lwdiv@counter 0077  
                   __ptext10 00F5                     __ptext11 0195                     __ptext20 020A  
                   __ptext12 02FD                     __ptext13 0246                     __ptext14 00AF  
                   __ptext15 00E1                     __ptext16 0124                     __ptext17 00AB  
                   __ptext18 00BB                     __ptext19 010C            ??_OneWire_Command 007A  
          ??_OneWire_Byte_RD 007B                __size_of_main 0025                   _LCD_GoToXY 02FD  
        OneWire_ROM_Search@b 0044          OneWire_ROM_Search@i 0043          OneWire_ROM_Search@j 0040  
          ??_OneWire_byte_WR 0074            ??_LCD_PrintString 0076                    stringcode 000B  
     __size_of_LCD_PrintChar 0023             ??_OneWire_bit_IO 0070                     stringdir 000B  
                   stringtab 0001        __end_of_oneWire_Reset 020A           __CFG_FOSC$EXTRCCLK 0000  
OneWire_ROM_Search@next_diff 0041  
