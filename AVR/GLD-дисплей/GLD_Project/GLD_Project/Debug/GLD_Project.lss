
GLD_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000027a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000346  00800060  0000027a  000002ee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000634  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000664  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000a8  00000000  00000000  000006a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001119  00000000  00000000  00000748  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007ee  00000000  00000000  00001861  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000006e2  00000000  00000000  0000204f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000230  00000000  00000000  00002734  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000477  00000000  00000000  00002964  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000e94  00000000  00000000  00002ddb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000088  00000000  00000000  00003c6f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	13 e0       	ldi	r17, 0x03	; 3
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e7       	ldi	r30, 0x7A	; 122
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 3a       	cpi	r26, 0xA6	; 166
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 15 01 	call	0x22a	; 0x22a <main>
  7a:	0c 94 3b 01 	jmp	0x276	; 0x276 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <KS108_SendCommand>:
		}
		++x;
		delta += 2 * (x - y);
		--y;
	}
}
  82:	8b bb       	out	0x1b, r24	; 27
  84:	82 e0       	ldi	r24, 0x02	; 2
  86:	8a 95       	dec	r24
  88:	f1 f7       	brne	.-4      	; 0x86 <KS108_SendCommand+0x4>
  8a:	00 c0       	rjmp	.+0      	; 0x8c <KS108_SendCommand+0xa>
  8c:	ac 9a       	sbi	0x15, 4	; 21
  8e:	82 e0       	ldi	r24, 0x02	; 2
  90:	8a 95       	dec	r24
  92:	f1 f7       	brne	.-4      	; 0x90 <KS108_SendCommand+0xe>
  94:	00 c0       	rjmp	.+0      	; 0x96 <KS108_SendCommand+0x14>
  96:	ac 98       	cbi	0x15, 4	; 21
  98:	82 e0       	ldi	r24, 0x02	; 2
  9a:	8a 95       	dec	r24
  9c:	f1 f7       	brne	.-4      	; 0x9a <KS108_SendCommand+0x18>
  9e:	00 c0       	rjmp	.+0      	; 0xa0 <KS108_SendCommand+0x1e>
  a0:	08 95       	ret

000000a2 <KS108_SendData>:
  a2:	8b bb       	out	0x1b, r24	; 27
  a4:	aa 9a       	sbi	0x15, 2	; 21
  a6:	82 e0       	ldi	r24, 0x02	; 2
  a8:	8a 95       	dec	r24
  aa:	f1 f7       	brne	.-4      	; 0xa8 <KS108_SendData+0x6>
  ac:	00 c0       	rjmp	.+0      	; 0xae <KS108_SendData+0xc>
  ae:	ac 9a       	sbi	0x15, 4	; 21
  b0:	82 e0       	ldi	r24, 0x02	; 2
  b2:	8a 95       	dec	r24
  b4:	f1 f7       	brne	.-4      	; 0xb2 <KS108_SendData+0x10>
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <KS108_SendData+0x16>
  b8:	ac 98       	cbi	0x15, 4	; 21
  ba:	aa 98       	cbi	0x15, 2	; 21
  bc:	08 95       	ret

000000be <KS108_Clear>:
  be:	cf 93       	push	r28
  c0:	df 93       	push	r29
  c2:	a8 98       	cbi	0x15, 0	; 21
  c4:	a9 98       	cbi	0x15, 1	; 21
  c6:	d8 eb       	ldi	r29, 0xB8	; 184
  c8:	8d 2f       	mov	r24, r29
  ca:	0e 94 41 00 	call	0x82	; 0x82 <KS108_SendCommand>
  ce:	c0 e4       	ldi	r28, 0x40	; 64
  d0:	8c 2f       	mov	r24, r28
  d2:	0e 94 41 00 	call	0x82	; 0x82 <KS108_SendCommand>
  d6:	80 e0       	ldi	r24, 0x00	; 0
  d8:	0e 94 51 00 	call	0xa2	; 0xa2 <KS108_SendData>
  dc:	cf 5f       	subi	r28, 0xFF	; 255
  de:	c0 38       	cpi	r28, 0x80	; 128
  e0:	b9 f7       	brne	.-18     	; 0xd0 <KS108_Clear+0x12>
  e2:	df 5f       	subi	r29, 0xFF	; 255
  e4:	d0 3c       	cpi	r29, 0xC0	; 192
  e6:	81 f7       	brne	.-32     	; 0xc8 <KS108_Clear+0xa>
  e8:	a8 9a       	sbi	0x15, 0	; 21
  ea:	a9 9a       	sbi	0x15, 1	; 21
  ec:	df 91       	pop	r29
  ee:	cf 91       	pop	r28
  f0:	08 95       	ret

000000f2 <KS108_GoToXY>:
  f2:	cf 93       	push	r28
  f4:	c6 2f       	mov	r28, r22
  f6:	60 34       	cpi	r22, 0x40	; 64
  f8:	18 f4       	brcc	.+6      	; 0x100 <KS108_GoToXY+0xe>
  fa:	a8 98       	cbi	0x15, 0	; 21
  fc:	a9 9a       	sbi	0x15, 1	; 21
  fe:	03 c0       	rjmp	.+6      	; 0x106 <KS108_GoToXY+0x14>
 100:	a9 98       	cbi	0x15, 1	; 21
 102:	a8 9a       	sbi	0x15, 0	; 21
 104:	c0 54       	subi	r28, 0x40	; 64
 106:	88 54       	subi	r24, 0x48	; 72
 108:	0e 94 41 00 	call	0x82	; 0x82 <KS108_SendCommand>
 10c:	80 e4       	ldi	r24, 0x40	; 64
 10e:	8c 0f       	add	r24, r28
 110:	0e 94 41 00 	call	0x82	; 0x82 <KS108_SendCommand>
 114:	cf 91       	pop	r28
 116:	08 95       	ret

00000118 <KS108_Init>:
 118:	8f ef       	ldi	r24, 0xFF	; 255
 11a:	8a bb       	out	0x1a, r24	; 26
 11c:	84 b3       	in	r24, 0x14	; 20
 11e:	8f 63       	ori	r24, 0x3F	; 63
 120:	84 bb       	out	0x14, r24	; 20
 122:	ad 9a       	sbi	0x15, 5	; 21
 124:	87 ec       	ldi	r24, 0xC7	; 199
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	01 97       	sbiw	r24, 0x01	; 1
 12a:	f1 f7       	brne	.-4      	; 0x128 <KS108_Init+0x10>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <KS108_Init+0x16>
 12e:	00 00       	nop
 130:	8f e3       	ldi	r24, 0x3F	; 63
 132:	0e 94 41 00 	call	0x82	; 0x82 <KS108_SendCommand>
 136:	80 e4       	ldi	r24, 0x40	; 64
 138:	0e 94 41 00 	call	0x82	; 0x82 <KS108_SendCommand>
 13c:	88 eb       	ldi	r24, 0xB8	; 184
 13e:	0e 94 41 00 	call	0x82	; 0x82 <KS108_SendCommand>
 142:	80 ec       	ldi	r24, 0xC0	; 192
 144:	0e 94 41 00 	call	0x82	; 0x82 <KS108_SendCommand>
 148:	08 95       	ret

0000014a <GLD_printChar>:

/*
==========================Функция прорысовки символа===============
*/
void GLD_printChar(unsigned char x0,unsigned char y0,unsigned char code)
{
 14a:	ff 92       	push	r15
 14c:	0f 93       	push	r16
 14e:	1f 93       	push	r17
 150:	cf 93       	push	r28
 152:	df 93       	push	r29
	unsigned char x=x0;//0..8 - задаем строку где буква выводится
	unsigned char y=y0;
	if(code<0x80)
 154:	44 23       	and	r20, r20
 156:	14 f0       	brlt	.+4      	; 0x15c <GLD_printChar+0x12>
	code-=0x20;//установка начала стандартных символов
 158:	40 52       	subi	r20, 0x20	; 32
 15a:	01 c0       	rjmp	.+2      	; 0x15e <GLD_printChar+0x14>
	else
	code-=0x60;//установка начала русских символов
 15c:	40 56       	subi	r20, 0x60	; 96
	if(CS==0)
	{
		CMD_PORT |= (1<<RST)|(1<<CS1);
 15e:	95 b3       	in	r25, 0x15	; 21
 160:	91 62       	ori	r25, 0x21	; 33
 162:	95 bb       	out	0x15, r25	; 21
		CMD_PORT &= ~(1<<CS2);
 164:	a9 98       	cbi	0x15, 1	; 21
	else
	{
		CMD_PORT |= (1<<RST)|(1<<CS1);
		CMD_PORT &= ~(1<<CS2);
	}
	if(x>63 || y>127) return;
 166:	80 34       	cpi	r24, 0x40	; 64
 168:	e8 f4       	brcc	.+58     	; 0x1a4 <GLD_printChar+0x5a>
 16a:	66 23       	and	r22, r22
 16c:	dc f0       	brlt	.+54     	; 0x1a4 <GLD_printChar+0x5a>
 16e:	f6 2e       	mov	r15, r22
 170:	08 2f       	mov	r16, r24
 172:	50 e0       	ldi	r21, 0x00	; 0
 174:	ea 01       	movw	r28, r20
 176:	cc 0f       	add	r28, r28
 178:	dd 1f       	adc	r29, r29
 17a:	cc 0f       	add	r28, r28
 17c:	dd 1f       	adc	r29, r29
 17e:	c4 0f       	add	r28, r20
 180:	d5 1f       	adc	r29, r21
 182:	c8 58       	subi	r28, 0x88	; 136
 184:	df 4f       	sbci	r29, 0xFF	; 255
 186:	10 e0       	ldi	r17, 0x00	; 0

	for (unsigned char i=0;i<5;i++)
	{
		KS108_GoToXY(x,y);
 188:	6f 2d       	mov	r22, r15
 18a:	61 0f       	add	r22, r17
 18c:	80 2f       	mov	r24, r16
 18e:	0e 94 79 00 	call	0xf2	; 0xf2 <KS108_GoToXY>
		if (i<=4)
 192:	15 30       	cpi	r17, 0x05	; 5
 194:	18 f4       	brcc	.+6      	; 0x19c <GLD_printChar+0x52>
		{
			if (MODE==0)
			{
				KS108_SendData(symbol[code][i]);
 196:	88 81       	ld	r24, Y
 198:	0e 94 51 00 	call	0xa2	; 0xa2 <KS108_SendData>
		CMD_PORT |= (1<<RST)|(1<<CS1);
		CMD_PORT &= ~(1<<CS2);
	}
	if(x>63 || y>127) return;

	for (unsigned char i=0;i<5;i++)
 19c:	1f 5f       	subi	r17, 0xFF	; 255
 19e:	21 96       	adiw	r28, 0x01	; 1
 1a0:	15 30       	cpi	r17, 0x05	; 5
 1a2:	91 f7       	brne	.-28     	; 0x188 <GLD_printChar+0x3e>
			}
		}
		y+=1;
	}

}
 1a4:	df 91       	pop	r29
 1a6:	cf 91       	pop	r28
 1a8:	1f 91       	pop	r17
 1aa:	0f 91       	pop	r16
 1ac:	ff 90       	pop	r15
 1ae:	08 95       	ret

000001b0 <GLD_print_string>:

/*
=======================================Функция прорысовки строки =========================
*/
void GLD_print_string(unsigned char x0,unsigned char y0,char* buffer, unsigned char count)
{
 1b0:	cf 92       	push	r12
 1b2:	df 92       	push	r13
 1b4:	ef 92       	push	r14
 1b6:	ff 92       	push	r15
 1b8:	0f 93       	push	r16
 1ba:	1f 93       	push	r17
 1bc:	cf 93       	push	r28
 1be:	df 93       	push	r29
	unsigned char x=x0;
	unsigned char y=y0;
	if((x>8)||(y>127)) return;
 1c0:	89 30       	cpi	r24, 0x09	; 9
 1c2:	f8 f4       	brcc	.+62     	; 0x202 <GLD_print_string+0x52>
 1c4:	66 23       	and	r22, r22
 1c6:	ec f0       	brlt	.+58     	; 0x202 <GLD_print_string+0x52>
 1c8:	f2 2e       	mov	r15, r18
 1ca:	6a 01       	movw	r12, r20
 1cc:	c6 2f       	mov	r28, r22
 1ce:	d8 2f       	mov	r29, r24
	KS108_GoToXY(x,y);
 1d0:	0e 94 79 00 	call	0xf2	; 0xf2 <KS108_GoToXY>
	for (unsigned char i=0;i<count;i++)
 1d4:	ff 20       	and	r15, r15
 1d6:	a9 f0       	breq	.+42     	; 0x202 <GLD_print_string+0x52>
 1d8:	86 01       	movw	r16, r12
 1da:	2f ef       	ldi	r18, 0xFF	; 255
 1dc:	2f 0d       	add	r18, r15
 1de:	e2 2e       	mov	r14, r18
 1e0:	f1 2c       	mov	r15, r1
 1e2:	8f ef       	ldi	r24, 0xFF	; 255
 1e4:	e8 1a       	sub	r14, r24
 1e6:	f8 0a       	sbc	r15, r24
 1e8:	ec 0c       	add	r14, r12
 1ea:	fd 1c       	adc	r15, r13
	{
		GLD_printChar(x,y+6*i,buffer[i]);
 1ec:	f8 01       	movw	r30, r16
 1ee:	41 91       	ld	r20, Z+
 1f0:	8f 01       	movw	r16, r30
 1f2:	6c 2f       	mov	r22, r28
 1f4:	8d 2f       	mov	r24, r29
 1f6:	0e 94 a5 00 	call	0x14a	; 0x14a <GLD_printChar>
 1fa:	ca 5f       	subi	r28, 0xFA	; 250
{
	unsigned char x=x0;
	unsigned char y=y0;
	if((x>8)||(y>127)) return;
	KS108_GoToXY(x,y);
	for (unsigned char i=0;i<count;i++)
 1fc:	0e 15       	cp	r16, r14
 1fe:	1f 05       	cpc	r17, r15
 200:	a9 f7       	brne	.-22     	; 0x1ec <GLD_print_string+0x3c>
	{
		GLD_printChar(x,y+6*i,buffer[i]);
	}

}
 202:	df 91       	pop	r29
 204:	cf 91       	pop	r28
 206:	1f 91       	pop	r17
 208:	0f 91       	pop	r16
 20a:	ff 90       	pop	r15
 20c:	ef 90       	pop	r14
 20e:	df 90       	pop	r13
 210:	cf 90       	pop	r12
 212:	08 95       	ret

00000214 <GLD_Printf_String>:
/*
=================================Функция динамического вывода строки====================
*/
void GLD_Printf_String(uint8_t x, uint8_t y, char *str)
{
	GLD_print_string(x,y,str,strlen(str));
 214:	fa 01       	movw	r30, r20
 216:	01 90       	ld	r0, Z+
 218:	00 20       	and	r0, r0
 21a:	e9 f7       	brne	.-6      	; 0x216 <GLD_Printf_String+0x2>
 21c:	31 97       	sbiw	r30, 0x01	; 1
 21e:	9f 01       	movw	r18, r30
 220:	24 1b       	sub	r18, r20
 222:	35 0b       	sbc	r19, r21
 224:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <GLD_print_string>
 228:	08 95       	ret

0000022a <main>:
#include "Main.h"



int main(void)
{
 22a:	cf 93       	push	r28
 22c:	df 93       	push	r29
 22e:	cd b7       	in	r28, 0x3d	; 61
 230:	de b7       	in	r29, 0x3e	; 62
 232:	68 97       	sbiw	r28, 0x18	; 24
 234:	0f b6       	in	r0, 0x3f	; 63
 236:	f8 94       	cli
 238:	de bf       	out	0x3e, r29	; 62
 23a:	0f be       	out	0x3f, r0	; 63
 23c:	cd bf       	out	0x3d, r28	; 61
	char buf[2][12]=
 23e:	88 e1       	ldi	r24, 0x18	; 24
 240:	e0 e6       	ldi	r30, 0x60	; 96
 242:	f0 e0       	ldi	r31, 0x00	; 0
 244:	de 01       	movw	r26, r28
 246:	11 96       	adiw	r26, 0x01	; 1
 248:	01 90       	ld	r0, Z+
 24a:	0d 92       	st	X+, r0
 24c:	8a 95       	dec	r24
 24e:	e1 f7       	brne	.-8      	; 0x248 <main+0x1e>
	{
		"Привет мир\0",
		"Пока   мир\0"
	};
    KS108_Init();
 250:	0e 94 8c 00 	call	0x118	; 0x118 <KS108_Init>
	KS108_Clear();
 254:	0e 94 5f 00 	call	0xbe	; 0xbe <KS108_Clear>
	GLD_Printf_String(0,0,"Hello World ");
 258:	48 e9       	ldi	r20, 0x98	; 152
 25a:	53 e0       	ldi	r21, 0x03	; 3
 25c:	60 e0       	ldi	r22, 0x00	; 0
 25e:	80 e0       	ldi	r24, 0x00	; 0
 260:	0e 94 0a 01 	call	0x214	; 0x214 <GLD_Printf_String>
	GLD_print_string(1,0,buf[0],sizeof(buf[0])-1);
 264:	2b e0       	ldi	r18, 0x0B	; 11
 266:	ae 01       	movw	r20, r28
 268:	4f 5f       	subi	r20, 0xFF	; 255
 26a:	5f 4f       	sbci	r21, 0xFF	; 255
 26c:	60 e0       	ldi	r22, 0x00	; 0
 26e:	81 e0       	ldi	r24, 0x01	; 1
 270:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <GLD_print_string>
 274:	ff cf       	rjmp	.-2      	; 0x274 <main+0x4a>

00000276 <_exit>:
 276:	f8 94       	cli

00000278 <__stop_program>:
 278:	ff cf       	rjmp	.-2      	; 0x278 <__stop_program>
